
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'AccountQuesDelete')
   BEGIN
       DROP  Procedure  AccountQuesDelete
	END
GO

/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu Switzerland, Baden
  Project   : EAS -Module AuditPrograml
  Created   : Suxf PM 12.01.2009
  Updated   : -
  Version   : 1.0.0
********************************************************************************/

CREATE PROCEDURE [dbo].[AccountQuesDelete]
	@AccountCode	varchar(50),
	@QuesID	varchar(50),
	@PID nvarchar(50)
AS
BEGIN	
Delete From AccountQues Where AccountCode=@AccountCode And QuesID=@QuesID and projectID = @PID
END 








GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'AccountQuesInsert')
   BEGIN
       DROP  Procedure  AccountQuesInsert
	END
GO


/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu Switzerland, Baden
  Project   : EAS -Module AuditPrograml
  Created   : Suxf PM 12.01.2009
  Updated   : -
  Version   : 1.0.0
********************************************************************************/

CREATE PROCEDURE [dbo].[AccountQuesInsert]
	@AccountCode	varchar(50),
	@QuesID	varchar(10),
	@QuesDescription	nvarchar(1000),
	@SelectedYesNo	int,
	@AuditProgramCode	varchar(100),
	@QuestionType	bit,
	@MutexQuesIDs	varchar(50),
	@PID nvarchar(50)
AS
BEGIN
Insert into AccountQues (AccountCode,QuesID,QuesDescription,SelectedYesNo,
AuditProgramCode,QuestionType,MutexQuesIDs,ProjectID) Values(@AccountCode,@QuesID,
@QuesDescription,@SelectedYesNo,@AuditProgramCode,@QuestionType,@MutexQuesIDs,@PID)
	

END  








GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'AccountQuesUpdate')
   BEGIN
       DROP  Procedure  AccountQuesUpdate
	END
GO

/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -Module AuditPrograml
  Created   : Suxf PM 12.01.2009
  Updated   : 20120619 by lina add if exists
  Version   : 1.0.1
********************************************************************************/

CREATE PROCEDURE [dbo].[AccountQuesUpdate]
	@AccountCode	varchar(50),
	@QuesID	varchar(10),
	@QuesDescription	nvarchar(1000),
	@SelectedYesNo	int,
	@AuditProgramCode	varchar(100),
	@QuestionType	bit,
	@MutexQuesIDs	varchar(50),
	@PID nvarchar(50)
AS
if exists(select 1 from AccountQues Where AccountCode=@AccountCode and QuesID=@QuesID and projectID = @PID)
begin
    --分账户审计方案中统计抽样由是改为否，样本设计中“抽样方法”由“全部项目”改为“统计抽样”
	if (@QuesID = 'Q031' and @SelectedYesNo = 0)
	begin 
		declare @OriginalSelectedYesNo int
		select @OriginalSelectedYesNo = SelectedYesNo from AccountQues Where AccountCode=@AccountCode and QuesID=@QuesID and projectID = @PID
		if (@OriginalSelectedYesNo = 1)
		begin 			
			update a 
			set a.selectsamplemethod = 1
			from TBDetailextra a
			join TBDetail b
			on a.ProjectID = b.ProjectID 
			and a.ID = b.ID 
			and b.FSCode = @AccountCode
			and a.selectsamplemethod = 3
			and  a.ProjectID = @PID

			update a 
			set a.drselectsamplemethod = 1
			from TBDetailextra a
			join TBDetail b
			on a.ProjectID = b.ProjectID 
			and a.ID = b.ID 
			and b.FSCode = @AccountCode
			and a.drselectsamplemethod = 3
			and  a.ProjectID = @PID

			update a 
			set a.CrSelectSampleMethod = 1
			from TBDetailextra a
			join TBDetail b
			on a.ProjectID = b.ProjectID 
			and a.ID = b.ID 
			and b.FSCode = @AccountCode
			and a.CrSelectSampleMethod = 3
			and  a.ProjectID = @PID
		end
	end 
	Update AccountQues
	Set QuesDescription=@QuesDescription,SelectedYesNo=@SelectedYesNo,
	AuditProgramCode=@AuditProgramCode,QuestionType=@QuestionType,MutexQuesIDs=@MutexQuesIDs 
	Where AccountCode=@AccountCode and QuesID=@QuesID and projectID = @PID
end 

	
	









GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'AccountStylebookSavetoTb')
   BEGIN
       DROP  Procedure  AccountStylebookSavetoTb
	END
GO

 /********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EASV1	xxx50更新亲本层.
  Created   : dengll PM 23.08.2008
  Updated   : 2009/09/22	by dengll
  Updated   : 2009/10/22 by dengll 将取消样本的方法取掉了
  Updated	: 2011/02/12 by len 取消jzpz内所有的样本数据。
  Updated	: 2011/06/25 by len 取消jzpz内所有的样本数据。
  Updated	: 2011/10/20 by len 取消jzpz内所有的样本数据。
  Updated	: 2011/10/25 by len 取消jzpz内所有的样本数据。
  Updated	: 2012/05/07 by len @code to @EASREF
  Updated	: 2012/08/31 by DENGLL
  Updated	: 2012/09/19 by DENGLL
  Updated	: 2012/10/15 by DENGLL
  Updated	: 20130124 by dengll
  Updated	: 20130226 by dengll
  Updated	: 20140821 by deng
  Version   : 1.2.1
********************************************************************************/
Create Procedure AccountStylebookSavetoTb
@pid	varchar(50),
@code	varchar(50),
@upperCode	varchar(100),
@tbtype	int,
@jfname	char(10),
@SampleLebelYesNo int,--是否作为样本分层
@SampleMethod	varchar(500),--抽样方法
@MaterialityProgram	varchar(500),--测试程序
@SampleSelectedYesNo	int,	--是否做为样本
@EASREF	VARCHAR(50)				--对应于accountcode
as

SET @upperCode=ISNULL(@upperCode,'')
SET @tbtype=ISNULL(@tbtype,0)
SET @jfname=ISNULL(@jfname,'')
SET @SampleLebelYesNo=ISNULL(@SampleLebelYesNo,0)
SET @SampleMethod=ISNULL(@SampleMethod,'')
SET @MaterialityProgram=ISNULL(@MaterialityProgram,'')
SET @SampleSelectedYesNo=ISNULL(@SampleSelectedYesNo,0)
SET @EASREF=ISNULL(@EASREF,'')

DECLARE	@P1	VARCHAR(100),@P2	VARCHAR(100),@P3	VARCHAR(100),@P4	VARCHAR(100)

EXEC	GetCMaterialityProgram	@pid,@EASREF,@P1	OUTPUT,@P2	OUTPUT,@P3	OUTPUT
EXEC	GetCMaterialityProgramIndex	@pid,@EASREF,@P4	OUTPUT
set	@SampleLebelYesNo=1

declare	@t	table(code	varchar(100) collate Chinese_PRC_CS_AS_KS_WS,upperCode	varchar(100) collate Chinese_PRC_CS_AS_KS_WS)

if(@jfname ='' or @jfname='借贷')	begin
		--适合答案a部分一使用
		update t1 set SelectedSampleLebelYesNo=@SampleLebelYesNo ,
		MaterialityProgram=DBO.ConvertMeterialityProgramtoInt(@MaterialityProgram),
		SelectSampleMethod=DBO.ConvertSelectSampleMethodtoInt(@SampleMethod)		
		from TBDetailExtra t1
		join TBDetail t2
		on t1.ID = t2.ID  and IsAux = 0 and SourceFSCode = ''
		where t2.PROJECTID=@PID AND accountcode=@code --and tbtype=@tbtype
		
		update t1 set SelectedSampleLebelYesNo=@SampleLebelYesNo ,
		MaterialityProgram=DBO.ConvertMeterialityProgramtoInt(@MaterialityProgram),
		SelectSampleMethod=DBO.ConvertSelectSampleMethodtoInt(@SampleMethod)
		from TBDetailExtra t1
		join TBDetail t2
		on t1.ID = t2.ID  and IsAux = 1 and SourceFSCode = ''
		where t2.projectid=@pid and fscode=@EASREF	and	left(accountcode,len(@code))=@code
		
		--1、获取数据并更新上级代码
		insert	@t
		exec	dbo.ByCodeFindForACCThisUpperCode	@pid,@code
		update	t1 set	t1.SelectedSampleLebelYesNo=0,
		t1.MaterialityProgram=0,
		t1.SelectSampleMethod=0
		from	DBO.TBDetailExtra	t1	
		join TBDetail t3
		on t1.ID = t3.ID  and IsAux = 0 and SourceFSCode = ''
		inner	join	@t	t2
		on	t3.accountcode=t2.code	and	t2.code!=@code AND T1.PROJECTID=@PID
		
		--2、获取数据并更新下级代码
		delete	@t
		insert	@t
		exec	dbo.ByCodeFindForACCThisAfterCode	@pid,@code
		update	t1 set	
		t1.SelectedSampleLebelYesNo=2,
		t1.MaterialityProgram=DBO.ConvertMeterialityProgramtoInt(@MaterialityProgram),
		t1.SelectSampleMethod=DBO.ConvertSelectSampleMethodtoInt(@SampleMethod)
		from	DBO.TBDetailExtra	t1	
		join TBDetail t3
		on t1.ID = t3.ID  and IsAux = 0 and SourceFSCode = ''
		inner	join	@t	t2
		on	t3.accountcode=t2.code	and	t2.code!=@code AND T1.PROJECTID=@PID

end	else	if(@jfname='贷')	begin

		update t1 set CrSelectedSampleLebelYesNo=@SampleLebelYesNo ,
		CrMaterialityProgram=DBO.ConvertMeterialityProgramtoInt(@MaterialityProgram),
		CrSelectSampleMethod=DBO.ConvertSelectSampleMethodtoInt(@SampleMethod)
		from	DBO.TBDetailExtra	t1	
		join TBDetail t3
		on t1.ID = t3.ID  and IsAux = 0 and SourceFSCode = ''
		where t3.PROJECTID=@PID AND accountcode=@code --and tbtype=@tbtype
		
		update t1 set DrSelectedSampleLebelYesNo=@SampleLebelYesNo ,
		CrMaterialityProgram=DBO.ConvertMeterialityProgramtoInt(@MaterialityProgram),
		CrSelectSampleMethod=DBO.ConvertSelectSampleMethodtoInt(@SampleMethod)
		from	DBO.TBDetailExtra	t1	
		join TBDetail t3
		on t1.ID = t3.ID  and IsAux = 1 and SourceFSCode = ''
		where t1.projectid=@pid and accountcode=@upperCode and AuxiliaryCode=@code


		--1、获取数据并更新上级代码
		insert	@t
		exec	dbo.ByCodeFindForACCThisUpperCode	@pid,@code
		update	t1 set	
		t1.CrSelectedSampleLebelYesNo=0,
		t1.CrMaterialityProgram=0,
		t1.CrSelectSampleMethod=0
		from	DBO.TBDetailExtra	t1	
		join TBDetail t3
		on t1.ID = t3.ID  and IsAux = 0 and SourceFSCode = ''
		inner	join	@t	t2
		on	t3.accountcode=t2.code	and	t2.code!=@code AND T1.PROJECTID=@PID
		
		--2、获取数据并更新下级代码
		delete	@t
		insert	@t
		exec	dbo.ByCodeFindForACCThisAfterCode	@pid,@code
		update	t1 set	
		t1.CrSelectedSampleLebelYesNo=2,
		t1.CrMaterialityProgram=DBO.ConvertMeterialityProgramtoInt(@MaterialityProgram),
		t1.CrSelectSampleMethod=DBO.ConvertSelectSampleMethodtoInt(@SampleMethod)
		from	DBO.TBDetailExtra	t1	
		join TBDetail t3
		on t1.ID = t3.ID  and IsAux = 0 and SourceFSCode = ''
		inner	join	@t	t2
		on	t3.accountcode=t2.code	and	t2.code!=@code AND T1.PROJECTID=@PID

end	else	if(@jfname='借')begin

		update t1 set DrSelectedSampleLebelYesNo=@SampleLebelYesNo ,
		DrMaterialityProgram=DBO.ConvertMeterialityProgramtoInt(@MaterialityProgram),
		DrSelectSampleMethod=DBO.ConvertSelectSampleMethodtoInt(@SampleMethod)		
		from	DBO.TBDetailExtra	t1	
		join TBDetail t3
		on t1.ID = t3.ID  and IsAux = 0 and SourceFSCode = ''
		where t1.PROJECTID=@PID AND accountcode=@code --and tbtype=@tbtype
		
		update t1 set DrSelectedSampleLebelYesNo=@SampleLebelYesNo ,
		DrMaterialityProgram=DBO.ConvertMeterialityProgramtoInt(@MaterialityProgram),
		DrSelectSampleMethod=DBO.ConvertSelectSampleMethodtoInt(@SampleMethod)
		from	DBO.TBDetailExtra	t1	
		join TBDetail t3
		on t1.ID = t3.ID  and IsAux = 1 and SourceFSCode = ''
		where t1.projectid=@pid and accountcode=@upperCode and AuxiliaryCode=@code

		--1、获取数据并更新上级代码
		insert	@t
		exec	dbo.ByCodeFindForACCThisUpperCode	@pid,@code
		update	t1 set	
		t1.DrSelectedSampleLebelYesNo=0,
		t1.DrMaterialityProgram=0,
		t1.DrSelectSampleMethod=0		
		from	DBO.TBDetailExtra	t1	
		join TBDetail t3
		on t1.ID = t3.ID  and IsAux = 0 and SourceFSCode = ''
		inner	join	@t	t2
		on	t3.accountcode=t2.code	and	t2.code!=@code AND T1.PROJECTID=@PID
		--2、获取数据并更新下级代码
		delete	@t
		insert	@t
		exec	dbo.ByCodeFindForACCThisAfterCode	@pid,@code
		update	t1 set	
		t1.DrSelectedSampleLebelYesNo=2,
		t1.DrMaterialityProgram=DBO.ConvertMeterialityProgramtoInt(@MaterialityProgram),
		t1.DrSelectSampleMethod=DBO.ConvertSelectSampleMethodtoInt(@SampleMethod)
		from	DBO.TBDetailExtra	t1	
		join TBDetail t3
		on t1.ID = t3.ID  and IsAux = 0 and SourceFSCode = ''
		inner	join	@t	t2
		on	t3.accountcode=t2.code	and	t2.code!=@code AND T1.PROJECTID=@PID

end


GRANT EXEC ON AccountStylebookSavetoTb TO PUBLIC



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'AuditGoalandCognizanceDelete')
   BEGIN
       DROP  Procedure  AuditGoalandCognizanceDelete
	END
GO


 /********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu Switzerland, Baden
  Project   : EAS -Module SystemAudit
  Created   : Suxf PM 28.07.2008
  Updated   : -
  Version   : 1.0.0
********************************************************************************/

create PROCEDURE [dbo].[AuditGoalandCognizanceDelete]
	@ClassCode nvarchar(50),
	@AuditGoalCode nvarchar(50),
	@PackID nvarchar(50)
AS
BEGIN

Delete From AuditGoalandCognizance  Where ClassCode=@ClassCode and AuditGoalCode=@AuditGoalCode and projectID = @PackID

END 









GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'AuditGoalandCognizanceInsert')
   BEGIN
       DROP  Procedure  AuditGoalandCognizanceInsert
	END
GO


/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu Switzerland, Baden
  Project   : EAS -Module SystemAudit
  Created   : Suxf PM 28.07.2008
  Updated   : -
  Version   : 1.0.0
********************************************************************************/

create PROCEDURE [dbo].[AuditGoalandCognizanceInsert]
	@ClassCode varchar(50),
	@AuditGoalCode	varchar(50),
	@AuditGoalName	nvarchar(1000),
	@Cognizance	varchar(50),
	@PackID nvarchar(50)
AS
BEGIN


Insert Into AuditGoalandCognizance (ClassCode,AuditGoalCode,AuditGoalName,Cognizance,ProjectID)
Values(@ClassCode,@AuditGoalCode,@AuditGoalName,@Cognizance,@PackID)


END  









GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'AuditProgramLibrarySelectAccountCode')
   BEGIN
       DROP  Procedure  AuditProgramLibrarySelectAccountCode
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -Module SystemAudit
  Created   : Suxf PM 28.07.2008
  Updated   : 2010/11/29 by len
  Updated   : 2010/12/14 by len	changed Order by AccountCode	to Order by QuesID
  Updated	: 20130222 by dengll
  Version   : 1.0.3
********************************************************************************/

create PROCEDURE [dbo].[AuditProgramLibrarySelectAccountCode]
    @AccountCode VARCHAR(50) ,
    @PackID NVARCHAR(50)
AS 
        
Select  0 AS ID
,b.FSCodeOrCycleCode as AccountCode
,b.AuditGoalCode
,a.AuditProgramCode
,a.AuditProgramName
,a.AuditProgramGuideline
,b.Category
,b.ApplyYesNo
,b.ProgramLevel
,b.SelectedYesNo
,'' as IndexNo --mantis删除
,'' as Preparer --mantis删除
 From AuditProgramLibrary a
join AuditProgramConfig b
on a.ProjectID = b.ProjectID 
and a.AuditProgramCode = b.AuditProgramCode 
Where b.FSCodeOrCycleCode=  @AccountCode  and b.projectID = @PackID Order by b.FSCodeOrCycleCode

Select ID
,AccountCode
,QuesID
,QuesDescription
,SelectedYesNo
,AuditProgramCode
,QuestionType
,MutexQuesIDs From AccountQues Where AccountCode=@AccountCode and projectID = @PackID  Order by QuesID

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'AutomaticProcessingForBasicAccounting')
   BEGIN
       DROP  Procedure  AutomaticProcessingForBasicAccounting
	END
GO

/*
by dengll 2017/11/09
基本核算数据处理
*/

CREATE PROCEDURE [dbo].[AutomaticProcessingForBasicAccounting]
	@ProjectID	varchar(1000)
AS

BEGIN TRY	
BEGIN	TransAction
SET NOCOUNT ON
SET XACT_ABORT ON

BEGIN

declare	@sql	nvarchar(max)
declare	@km	varchar(1000)=@ProjectID+'km'
declare	@kmye	varchar(1000)=@ProjectID+'kmye'
declare	@jzpz	varchar(1000)=@ProjectID+'jzpz'
declare	@voucher	varchar(1000)=@ProjectID+'voucher'
declare	@account	varchar(1000)=@ProjectID+'account'
declare @PROJECTYPE	varchar(1000)=@ProjectID+'PROJECTTYPE'
declare	@PROJECT	varchar(1000)=@ProjectID+'PROJECT'
declare	@WL	varchar(1000)=@ProjectID+'wl'
declare	@WLye	varchar(1000)=@ProjectID+'wlye'
declare	@xm	varchar(1000)=@ProjectID+'xm'
declare	@xmye	varchar(1000)=@ProjectID+'xmye'
declare	@bm	varchar(1000)=@ProjectID+'bm'
declare	@bmye	varchar(1000)=@ProjectID+'bmye'
declare	@t_itemclass	varchar(1000)=@ProjectID+'t_itemclass'
declare	@t_fzye	varchar(1000)=@ProjectID+'t_fzye'
declare	@t_itemdetail	varchar(1000)=@ProjectID+'t_itemdetail'
declare	@pzk	varchar(1000)=@ProjectID+'pzk'

set	@sql='
INSERT	'+@ACCOUNT+'(ACCOUNTCODE,ACCOUNTNAME,[IsMx],Jb,Hsxms,ncye,ncsl)--Attribute,
SELECT distinct	_km.KMDM,_km.KMMC,_km.kmmx,_km.kmjb,0,isnull(_kmye.ncye,0),isnull(_kmye.ncsl,0)--LEFT(_km.KMDM,1),
FROM '+@KM+'	_km	
left	join	'+@kmye+'	_kmye
on	_km.kmdm	COLLATE Chinese_PRC_CS_AS_KS_WS=_kmye.kmdm	COLLATE Chinese_PRC_CS_AS_KS_WS
WHERE	ISNUMERIC(LEFT(_km.KMDM,1))=1'

exec(@sql)

declare	@sqlx2 nvarchar(max)
-- 将多余的jzpz表的数据也导入,除jzpz.db外
declare	@sqlx	nvarchar(max),@jzpzname	varchar(max)
create table	#js	(jzpzname	varchar(255))
set @sqlx='
insert	#js
select	Pzk_TableName	from	'+@pzk+'	where	Pzk_TableName!=''jzpz'' and Pzk_TableName like ''jzpz%''
'
exec(@sqlx)

set @sqlx2='
insert	'+@Voucher+'(date,pzh,djh,accountcode,zy,jfje,dfje,jfsl,dfsl,zdr,FDetailID,DFKM)
select	pzrq,pzh,fjzs,kmdm,zy,
case when jd=''借'' then rmb else 0 end as jfje,
case when jd=''贷'' then rmb else 0 end as dfje,
case when jd=''借'' then sl  else 0 end as jfsl,
case when jd=''贷'' then sl  else 0 end as dfsl,
sr,
-1,DFKM  from '+@jzpz+'
'

while exists(select	1	from	#js)begin
	select	top 1	@jzpzname=jzpzname	from	#js
	if OBJECT_ID(@ProjectID+@jzpzname) is not null begin
			set	@sqlx2+='
			union all 
			select	pzrq,pzh,fjzs,kmdm,zy,
			case when jd=''借'' then rmb else 0 end as jfje,
			case when jd=''贷'' then rmb else 0 end as dfje,
			case when jd=''借'' then sl  else 0 end as jfsl,
			case when jd=''贷'' then sl  else 0 end as dfsl,
			sr,
			-1,DFKM from '+@ProjectID+@jzpzname+'
			'
	end
		delete	#js	where	jzpzname=@jzpzname
end

exec(@sqlx2)

declare 	@ix_ppzh_index	varchar(100)='ix_ppzh_'+replace(cast(newid() as varchar(50)),'-','');

--end
declare @year varchar(4)
select top 1	@year=kjdate	from	kjqj	where ProjectID=@ProjectID

if @year is null
	return;

set	@sqlx2='

	--update 	'+@voucher+' set [date]=dbo.ConvertWordAngle([date],0)

	update '+@voucher+'	set [date]=
	case 
		 --when len(date)=6	and cast(replace(right([date],2),space(1),0) as int)>00	then cast('''+@year+'''+''-''+replace(SUBSTRING([DATE],3,2),space(1),0)+''-''+replace(right([date],2),space(1),0) as char(10))
		 when len(date)=6	then cast('''+@year+'''+''-''+replace(SUBSTRING([DATE],3,2),space(1),0)+''-''+replace(right([date],2),space(1),0) as char(10))
		 when len(date)=5	then cast('''+@year+'''+''-''+replace(SUBSTRING([DATE],2,2),space(1),0)+''-''+replace(right([date],2),space(1),0) as char(10))
		else null end
	
	update '+@voucher+'	set Period=month([date])
	alter table '+@voucher+' drop column	IncNo;
	alter table '+@voucher+' add IncNo	int;
	
	--计算好incno
	select ROW_NUMBER() OVER (ORDER BY period) AS RowNumber,
	period,pzh	INTO #t from	'+@voucher+'
	group by period,pzh
	having  COUNT(period)>1 AND count(pzh)>1

	create index ix_pp_t on #t (period,pzh)
	
	create index '+@ix_ppzh_index+' on '+@voucher+'(period,pzh)

	update  vv set vv.IncNo=v.RowNumber
	from	'+@voucher+'	vv
	,	#t v
	where vv.period=v.period and vv.pzh=v.pzh;

	update '+@voucher+' 
	set	zy=replace(zy,char(9),space(0))
	where charindex(char(9),zy,0)>0

	'
	exec(@sqlx2)

end

Commit TransAction
end try
begin catch
	ROLLBACK TransAction
	EXEC DBO.[PRO_THROW] @ProjectID,'AutomaticProcessingForBasicAccounting'
end catch

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'AutomaticProcessingForCreateTables')
   BEGIN
       DROP  Procedure  AutomaticProcessingForCreateTables
	END
GO

CREATE PROCEDURE [dbo].[AutomaticProcessingForCreateTables]
	@ProjectID	varchar(1000)
AS
BEGIN
	
	DECLARE	@tabname	varchar(1000),@sql	nvarchar(max)
	set	@tabname	=@ProjectID+'PROJECTTYPE';
	IF object_id(@tabname	) IS NOT NULL
		exec('DROP TABLE '+@tabname	);

	set	@sql='
	CREATE TABLE '+@tabname+' (
		ID INT IDENTITY(1, 1)
		,TYPECODE VARCHAR(1000)	COLLATE Chinese_PRC_CS_AS_KS_WS	NULL
		,TYPENAME VARCHAR(1000)	
		)'
	exec(@sql)

	set	@tabname	=@ProjectID+'PROJECT';
	IF object_id(@tabname) IS NOT NULL
		EXEC('DROP TABLE '+@tabname);
	set	@sql='
	CREATE TABLE '+@tabname+' (
		TYPECODE VARCHAR(1000)	COLLATE Chinese_PRC_CS_AS_KS_WS NOT NULL
		,PROJECTCODE VARCHAR(1000)	COLLATE Chinese_PRC_CS_AS_KS_WS	NOT NULL
		,PROJECTNAME VARCHAR(1000)		null
		,UPPERCODE VARCHAR(1000) COLLATE Chinese_PRC_CS_AS_KS_WS	 NULL
		,JB INT
		,ISMX INT
		)'
	exec(@sql)
	set	@tabname	=@ProjectID+'ACCOUNT';
	IF object_id(@tabname) IS NOT NULL
		EXEC('DROP TABLE '+@tabname);

	set	@sql='
	CREATE TABLE '+@tabname+' (
		[AccountCode] [varchar](1000)   COLLATE Chinese_PRC_CS_AS_KS_WS NOT NULL
		,[AccountName] [varchar](1000) 	NULL
		,[Attribute] [int] NULL
		,[Jd] [int] DEFAULT(1)
		,[Hsxms] [int] NOT NULL	DEFAULT(0)
		,[TypeCode] [varchar](1000) COLLATE Chinese_PRC_CS_AS_KS_WS	NULL
		,[Jb] [int] DEFAULT(1)
		,[IsMx]	int
		,[Ncye]	 [decimal](20, 2) DEFAULT((0))
		,[Qqccgz]	 [decimal](20, 2) DEFAULT((0))
		,[Jfje]	 [decimal](20, 2) DEFAULT((0))
		,[Dfje]	 [decimal](20, 2) DEFAULT((0))
		,[Ncsl]	 int DEFAULT((0))
		)'
	exec(@sql)

	set	@tabname	=@ProjectID+'Voucher';
	IF object_id(@tabname) IS NOT NULL
		EXEC('DROP TABLE '+@tabname);

	set	@sql='
	CREATE TABLE '+@tabname+' (
		[IncNo] INT null
		,[Date] VARCHAR(1000) NULL
		,[Period] [int] NULL
		,[Pzlx] [varchar](1000) 	NULL
		,[Pzh] [varchar](255) 	NULL
		,[Djh] [int] NULL
		,[AccountCode] [varchar](1000)  COLLATE Chinese_PRC_CS_AS_KS_WS NOT	NULL
		,[ProjectCode] [varchar](1000) COLLATE Chinese_PRC_CS_AS_KS_WS	NULL
		,[Zy] [varchar](1000) 	NULL
		,[Jfje] [decimal](20, 2) NULL
		,[Dfje] [decimal](20, 2) NULL
		,[Jfsl] [decimal](20, 4) NULL
		,[Dfsl] [decimal](20, 4) NULL
		,[ZDR] [varchar](1000) NULL
		,[DFKM]	[varchar](100)	NULL
		,[FDetailID] INT NULL
		,[KMDM_jd] varchar(100) null
		);'
	exec(@sql)

	set	@tabname	=@ProjectID+'t_fzye_t';
	IF object_id(@tabname) IS NOT NULL
		EXEC('DROP TABLE '+@tabname);

	set	@sql='
	CREATE TABLE  '+@tabname+'(
	   ProjectID            varchar(100)         collate Chinese_PRC_CS_AS_KS_WS not null,
	   AccountCode          varchar(255)         collate Chinese_PRC_CS_AS_KS_WS not null,
	   FDetailID            int                  not null,
	   ProjectCode          varchar(255)         collate Chinese_PRC_CS_AS_KS_WS not null default space(0),
	   Yefx                 varchar(255)         null,
	   Ncye                 decimal(20,2)        null,
	   Ncsl                 float                null,
	   datatype             int                  not null default 0,
	   DataYear             int                  not null default 1999,
	);'
	exec(@sql)

	set	@tabname	=@ProjectID+'TBAux';
	IF object_id(@tabname) IS NOT NULL
		EXEC('DROP TABLE '+@tabname);
	set	@sql='

	CREATE TABLE	 '+@tabname+'
	(
		ProjectID VARCHAR (100)	COLLATE Chinese_PRC_CS_AS_KS_WS	NULL,
		AccountCode VARCHAR (100)	COLLATE Chinese_PRC_CS_AS_KS_WS	NULL,
		AuxiliaryCode VARCHAR (100)	COLLATE Chinese_PRC_CS_AS_KS_WS	NULL,
		AuxiliaryName VARCHAR (100)	COLLATE Chinese_PRC_CS_AS_KS_WS	NULL,
		FSCode VARCHAR (50)	COLLATE Chinese_PRC_CS_AS_KS_WS	NULL,
		kmsx VARCHAR (100),
		YEFX INT,
		TBGrouping NVARCHAR (50)	COLLATE Chinese_PRC_CS_AS_KS_WS	NULL,
		Sqqmye DECIMAL (20, 2),
		Qqccgz DECIMAL (20, 2),
		jfje DECIMAL (20, 2),
		dfje DECIMAL (20, 2),
		qmye DECIMAL (20, 2)
	)
	'
	--exec(@sql)
END
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'AutomaticProcessingForMultipleAccounting')
   BEGIN
       DROP  Procedure  AutomaticProcessingForMultipleAccounting
	END
GO
/*
多核算类型处理 数据分别存在km,xm,bm,wl
update :by dengll 20180109 把往来表里面的数据更新到t_fzye表
*/
CREATE  PROCEDURE dbo.AutomaticProcessingForMultipleAccounting
	@ProjectID	varchar(1000)
AS
BEGIN TRY	
--BEGIN	TransAction
SET NOCOUNT ON
SET XACT_ABORT ON

declare	@sql	nvarchar(max)
declare	@km	varchar(1000)=@ProjectID+'km'
declare	@kmye	varchar(1000)=@ProjectID+'kmye'
declare	@jzpz	varchar(1000)=@ProjectID+'jzpz'
declare	@voucher	varchar(1000)=@ProjectID+'voucher'
declare	@account	varchar(1000)=@ProjectID+'account'
declare	@PROJECTYPE	varchar(1000)=@ProjectID+'PROJECTTYPE'
declare	@PROJECT	varchar(1000)=@ProjectID+'PROJECT'
declare	@WL	varchar(1000)=@ProjectID+'wl'
declare	@WLye	varchar(1000)=@ProjectID+'wlye'
declare	@xm	varchar(1000)=@ProjectID+'xm'
declare	@xmye	varchar(1000)=@ProjectID+'xmye'
declare	@bm	varchar(1000)=@ProjectID+'bm'
declare	@bmye	varchar(1000)=@ProjectID+'bmye'
declare	@pzk	varchar(1000)=@ProjectID+'pzk'
declare @t_fzye_t	varchar(1000)=@ProjectID+'t_fzye_t';
declare @tbaux	varchar(1000)=@ProjectID+'tbaux';
set	@sql='

update	'+@KM+'	set	bmhs=case when bmhs=''True''	then 1	when bmhs=''False''	then 0	else bmhs		end
update	'+@KM+'	set	wlhs=case when wlhs=''True''	then 1	when wlhs=''False''	then 0	else wlhs		end
update	'+@KM+'	set	xmhs=case when xmhs=''True''	then 1	when xmhs=''False''	then 0	else xmhs		end

INSERT	'+@ACCOUNT+'(ACCOUNTCODE,ACCOUNTNAME,Hsxms,TypeCode,[IsMx],Jb,ncye,ncsl)--Attribute,
SELECT	distinct	_km.KMDM,_km.KMMC,0,--LEFT(_km.KMDM,1),
case when _km.bmhs=1 then ''2000;'' else '''' end+
case when _km.wlhs=1 then ''3000;'' else '''' end+
case when _km.xmhs=1 then ''4000;'' else '''' end
,_km.kmmx,_km.kmjb
,isnull(_kmye.ncye,0),isnull(_kmye.ncsl,0)
FROM '+@KM+'	_km
left	join	'+@kmye+'	_kmye
on	_km.kmdm	COLLATE Chinese_PRC_CS_AS_KS_WS=_kmye.kmdm	COLLATE Chinese_PRC_CS_AS_KS_WS

UPDATE	'+@ACCOUNT+'	SET [Hsxms]=dbo.IndexSplterNumber(typecode,'';'')
UPDATE	'+@ACCOUNT+'	SET TypeCode=
	case when dbo.isnullempty(TypeCode,'''')!='''' 
		then left(TypeCode,len(TypeCode)-1)	else TypeCode end

IF	EXISTS(SELECT	1	FROM	'+@XM+')BEGIN
	INSERT	'+@PROJECTYPE+'
	SELECT	4000,''XM''
	
	INSERT '+@PROJECT+'
	SELECT 4000 AS TYPECODE,XMDM,XMMC,NULL,XMJB,
		CASE WHEN XMMX=''True''	then 1 
		 when	xmmx=''False''	then 0	else xmmx end	FROM	'+@XM+'
END

IF	EXISTS(SELECT	1	FROM	'+@BM+')BEGIN
	INSERT	'+@PROJECTYPE+'
	SELECT	2000,''BM''
	
	INSERT '+@PROJECT+'
	SELECT 2000 AS TYPECODE,BMDM,BMMC,NULL,BMJB,
	CASE WHEN BMMX=''True''	then 1 
		 when BMMX=''False''	then 0	else BMMX	end 	FROM	'+@BM+'
END

IF	EXISTS(SELECT	1	FROM	'+@WL+')BEGIN
	INSERT	'+@PROJECTYPE+'
	SELECT	3000,''WL''
	
	INSERT '+@PROJECT+'
	SELECT 3000 AS TYPECODE,WlDM,WlMC,NULL,WlJB,
	CASE WHEN WlMX=''True''	then 1  
		when	WLMX=''False''	then 0	else WlMX 	end
	FROM	'+@WL+'
END

declare @year varchar(4)

select top 1	@year=kjdate	from	kjqj	where ProjectID='''+@ProjectID+'''

--CEILING(rand()*100000) 随机生成int数据
insert		'+@t_fzye_t+'([ProjectID],[AccountCode],[FDetailID],[Yefx],[Ncye],[Ncsl],[ProjectCode],datatype,dataYear)
SELECT '''+@ProjectID+''',KMDM,CEILING(ROW_NUMBER() OVER (ORDER BY kmdm)*rand()*10000),1,ncye,ncsl,bmdm,0,@year	FROM '+  @bMYE+'
union
SELECT '''+@ProjectID+''',KMDM,CEILING(ROW_NUMBER() OVER (ORDER BY kmdm)*rand()*10000),1,ncye,ncsl,wldm,0,@year	FROM '+   @WLye+'
union
SELECT '''+@ProjectID+''',KMDM,CEILING(ROW_NUMBER() OVER (ORDER BY kmdm)*rand()*10000),1,ncye,ncsl,xmdm,0,@year	FROM '+  @xmye+'

/*
INSERT	'+@tbaux+'	(ProjectID, AccountCode, AuxiliaryCode, AuxiliaryName,Sqqmye, jfje, dfje)
select projectid,accountcode,projectcode,
isnull(x.xmmc,sapce(1))+isnull(b.bmmc,sapce(1))+isnull(w.wlmc,sapce(1)),ncye,0,0	'+@t_fzye_t+'	t
left join '+@xm+' x
on t.projectcode=x.xmdm
left join '+@bm+' b
on t.projectcode=b.bmdm
left join '+@wl+' w
on t.projectcode=w.wldm
*/
'
exec(@sql)

declare	@sqlx2 nvarchar(max)
-- 将多余的jzpz表的数据也导入,除jzpz.db外
declare	@sqlx	nvarchar(max),@jzpzname	varchar(max)
create table	#js	(jzpzname	varchar(255))
set @sqlx='
insert	#js
select	Pzk_TableName	from	'+@pzk+'	where	Pzk_TableName!=''jzpz'' and Pzk_TableName like ''jzpz%''
'
exec(@sqlx)

set @sqlx2='
insert	'+@Voucher+'(date,pzh,djh,accountcode,projectcode,zy,jfje,dfje,jfsl,dfsl,zdr,FDetailID,DFKM)
select	pzrq,pzh,fjzs,kmdm,isnull(bmdm,'''')+'';''+isnull(wldm,'''')+'';''+isnull(xmdm,'''') as projectcode,	zy,
case when jd=''借'' then rmb else 0 end as jfje,
case when jd=''贷'' then rmb else 0 end as dfje,
case when jd=''借'' then sl  else 0 end as jfsl,
case when jd=''贷'' then sl  else 0 end as dfsl,
sr,
0,DFKM  from '+@jzpz+'
'

while exists(select	1	from	#js)begin
	select	top 1	@jzpzname=jzpzname	from	#js
	if OBJECT_ID(@ProjectID+@jzpzname) is not null begin
			set	@sqlx2+='
			union all 
			select	pzrq,pzh,fjzs,kmdm,isnull(bmdm,'''')+'';''+isnull(wldm,'''')+'';''+isnull(xmdm,'''') as projectcode,zy,
			case when jd=''借'' then rmb else 0 end as jfje,
			case when jd=''贷'' then rmb else 0 end as dfje,
			case when jd=''借'' then sl  else 0 end as jfsl,
			case when jd=''贷'' then sl  else 0 end as dfsl,
			sr,
			0,DFKM from '+@ProjectID+@jzpzname+'
			'
	end
		delete	#js	where	jzpzname=@jzpzname
end

exec(@sqlx2)

set @sqlx2='
update '+@Voucher+' set projectcode=REPLACE(projectcode,'';'','''')

update a set a.FDetailID=b.FDetailID
from '+@Voucher+' a
inner join dbo.t_fzye	b
on a.accountcode=b.accountcode and a.projectcode=b.projectcode
WHERE	b.ProjectID='''+@ProjectID+'''	and b.datatype=0

'
exec(@sqlx2)

update T_FZYE set ProjectCode=LTRIM(rtrim(ProjectCode)) where projectid=@ProjectID and datatype=0

set @sql='
update 	'+@PROJECT+'	set ProjectCode=LTRIM(rtrim(ProjectCode)),TypeCode=LTRIM(rtrim(TypeCode))
update 	'+@PROJECTYPE+'	set TypeCode=LTRIM(rtrim(TypeCode))
update 	'+@account+'	set TypeCode=LTRIM(rtrim(TypeCode))
'
exec(@sql)
EXEC dbo.ResumeIndex 't_fzye'

--Commit TransAction
end try
begin catch
	--ROLLBACK TransAction
	EXEC DBO.[PRO_THROW] @ProjectID,'AutomaticProcessingForMultipleAccounting'
end catch

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'AutomaticProcessingForMultipleAccountingAtxm')
   BEGIN
       DROP  Procedure  AutomaticProcessingForMultipleAccountingAtxm
	END
GO
/*
多核算类型处理 多多核算数据存在t_itemclass表
*/

CREATE  PROCEDURE dbo.AutomaticProcessingForMultipleAccountingAtxm
	@ProjectID	varchar(1000)
AS

BEGIN TRY	
--BEGIN	TransAction
SET NOCOUNT ON
SET XACT_ABORT ON
exec dbo.ProcessProjectData	@ProjectID
exec dbo.ProcessProjectTypeData	@ProjectID
exec dbo.ProcessAccountData		@ProjectID
exec dbo.ProcessVoucherData	@ProjectID
exec dbo.ProcessAuxiliaryDetailAndTbAuxData	@ProjectID,0

--Commit TransAction
end try
begin catch
	--ROLLBACK TransAction
	EXEC DBO.[PRO_THROW] @ProjectID,'AutomaticProcessingForMultipleAccountingAtxm'
end catch

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'AutomaticProcessingForUpdateProject')
   BEGIN
       DROP  Procedure  AutomaticProcessingForUpdateProject
	END
GO

CREATE PROCEDURE dbo.AutomaticProcessingForUpdateProject
	@ProjectID	varchar(100)
AS
BEGIN TRY	
BEGIN	TransAction
SET NOCOUNT ON
SET XACT_ABORT ON

	declare	@project	varchar(1000)=@ProjectID+'project'
	declare	@sql	nvarchar(max)

	CREATE TABLE #Projects(
		TYPECODE VARCHAR(1000)	COLLATE Chinese_PRC_CS_AS_KS_WS NOT NULL
		,PROJECTCODE VARCHAR(1000)	COLLATE Chinese_PRC_CS_AS_KS_WS	NOT NULL
		,PROJECTNAME VARCHAR(1000)		null
		,UPPERCODE VARCHAR(1000) COLLATE Chinese_PRC_CS_AS_KS_WS	 NULL
		,JB INT
		,ISMX INT
		,LENS INT
		)

	SET @sql='
	INSERT #Projects(TYPECODE,PROJECTCODE,PROJECTNAME,UPPERCODE,JB,ISMX,LENS)
	SELECT  TYPECODE,PROJECTCODE,PROJECTNAME,null as UPPERCODE ,jb,ISMX,LEN(PROJECTCODE) from  '+@project+' 
	'
	EXEC(@sql)

	--分离projectcode长度
	--DROP TABLE #tmpPros

	select * into #projectsLeve1 from	#Projects	where jb=1

	SELECT distinct typecode,jb,len(projectcode) AS lens,0 AS useLen INTO #tmpPros    
		FROM #Projects
	GROUP BY  typecode,jb,len(projectcode)
	ORDER BY typecode,jb,len(projectcode)

	--找出上下级的projectcode所使用的截取长度
	--DROP TABLE #tmpPros2
	SELECT distinct  a.typecode,a.jb,a.lens,CASE WHEN a.lens>b.lens THEN b.lens ELSE 0 END AS USELENS
	INTO #tmpPros2
	FROM  #tmpPros a
	INNER JOIN #tmpPros b 
	ON a.typecode=b.typecode AND a.jb-b.jb=1

	--过滤出来有用的截取长度
	--DROP TABLE #tmpPros3
	SELECT TYPECODE,JB,LENS,MIN(USELENS) USELENS INTO #tmpPros3 FROM #tmpPros2 WHERE USELENS>0
	GROUP BY TYPECODE,JB,LENS

	set @sql='
	truncate table	'+@project+'

	INSERT	'+@project+'(TYPECODE,PROJECTCODE,PROJECTNAME,UPPERCODE,JB,ISMX)
	select TYPECODE,PROJECTCODE,PROJECTNAME,UPPERCODE,JB,ISMX from #projectsLeve1

	INSERT	'+@project+'(TYPECODE,PROJECTCODE,PROJECTNAME,UPPERCODE,JB,ISMX)
	SELECT A.typeCode,A.PROJECTCODE,A.PROJECTNAME,LEFT(A.PROJECTCODE,B.USELENS)AS UPPERCODE,A.jb,A.ISMX
	FROM #Projects A,#tmpPros3 B 
	WHERE A.typeCode=B.typecode AND A.LENS=B.LENS AND A.jb=B.jb
	
	UPDATE '+@PROJECT+'
	SET projectname = replace(projectname, ''"'', space(0))	where	1=1

	UPDATE '+@PROJECT+'
	SET projectname = replace(projectname, ''“'', space(0))	where	1=1

	UPDATE '+@PROJECT+'
	SET projectname = replace(projectname, ''”'', space(0))	where	1=1

	UPDATE '+@PROJECT+'
	SET projectname = replace(projectname, CHAR(9), space(0))	
	WHERE charindex(CHAR(9), projectname, 0) > 0	and 1=1

	'
	EXEC(@sql)

	--作废 20180122
	set @sql='
	DECLARE @lens INT ,@maxleve	INT,@startLeve INT
	SELECT @lens=LEN(ProjectCode)
		FROM '+@project+' WHERE JB=1
	
	SELECT @maxleve=MAX(jb) 
		FROM '+@project+'

	INSERT #Projects
	SELECT  upperCode,PROJECTCODE,typeCode,jb
		FROM '+@project+' WHERE JB=1

	INSERT #Projects
	SELECT LEFT(projectcode,@lens)AS upperCode,PROJECTCODE,typeCode,jb
		FROM '+@project+' WHERE JB=2
	
	UPDATE p SET p.uppercode =p2.uppercode
	FROM 	 '+@project+' p
	inner JOIN #Projects p2
	ON p.PROJECTCODE=p2.PROJECTCODE AND p.TYPECODE=p2.typeCode	AND p.JB=p2.jb
	TRUNCATE TABLE  #Projects	

	SET @startLeve=3;

	WHILE(@startLeve<=@maxleve)BEGIN

		INSERT #Projects
		SELECT DISTINCT top(10000)	p2.PROJECTCODE AS upperCode,p3.PROJECTCODE,p3.TYPECODE,p3.jb
			FROM '+@project+' p3
		left JOIN '+@project+' p2 
		ON 	p3.PROJECTCODE!=p2.PROJECTCODE and	 --LEFT(p2.PROJECTCODE,LEN(p2.PROJECTCODE))=p2.PROJECTCODE	--
			p3.PROJECTCODE LIKE p2.PROJECTCODE+''%''
			AND p3.TYPECODE=p2.TYPECODE AND p2.JB=@startLeve-1
			OR (p2.JB>@startLeve AND 	p2.UPPERCODE IS NOT NULL)
		WHERE p3.JB=@startLeve
		SET @startLeve+=1
	END

	UPDATE p SET p.uppercode =p2.uppercode
	FROM 	 '+@project+' p
	inner JOIN #Projects p2
	ON p.PROJECTCODE=p2.PROJECTCODE AND p.TYPECODE=p2.typeCode	AND p.JB=p2.jb

	'
	--print @SQL
	--EXEC(@SQL)

	DROP TABLE #PROJECTS

Commit TransAction
end try
begin catch
	ROLLBACK TransAction
	EXEC DBO.[PRO_THROW] @ProjectID,'AutomaticProcessingForUpdateProject'
end catch

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'BuilderSample')
   BEGIN
       DROP  Procedure  BuilderSample
	END
GO

/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -Module xxx50 获取错报个数及样本个数及样本金额合计
  Created   : 20120917 by dengll
  Updated	: 20120910 by dengll
  Updated	: 20130226 by dengll
  Updated	: 20131124 by dengll 保证至少有一个样本
  Version   : 1.0.4
********************************************************************************/
CREATE Procedure [dbo].[BuilderSample]
@pid	varchar(100),
@fscode	varchar(100),
@sampleType	int,	--0	余额抽样(A类型),1	借方,2	贷方(BC类型)抽样
@skip decimal(20,2),--样本间距
@step	int	--值区间1,2,3,4,5,6;小于1表示没有步骤;6固定样本抽样(步骤1)
AS
	SET	NOCOUNT	ON

			DECLARE	@FSTABLE	TABLE(id	int	,FSCODE	VARCHAR(MAX))
			DECLARE	@CODE	VARCHAR(MAX),@i	int,@count	int

			INSERT	@FSTABLE
			SELECT	ROW_NUMBER() OVER  (ORDER	by fscode	desc) AS id,FSCODE	
			FROM TBFS where	ProjectID = @pid and  left(fscode,len(@fscode))=@fscode and fscode<>@fscode

			IF NOT EXISTS(SELECT 1 FROM @FSTABLE) 
				INSERT INTO @FSTABLE VALUES(1,@fscode)

			SELECT @count=COUNT(1) FROM @FSTABLE
			set @i=1
			while(@i<=@count)BEGIN
				SELECT	@CODE=FSCODE	from	@FSTABLE	where	id=@i
				EXEC	DBO.BuilderSampletask	@pid,@CODE,@fscode,@sampleType,@skip,@step
				DELETE	@FSTABLE	WHERE	id=@i
				set	@i=@i+1
			END



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'BuilderSampletask')
   BEGIN
       DROP  Procedure  BuilderSampletask
	END
GO
create PROCEDURE [dbo].[BuilderSampletask]
@pid	varchar(100),
@curfscode	varchar(100),
@fscode	varchar(100),
@sampleType	int,	--0余额抽样(A类型), 1借方, 2贷方(BC类型)抽样 0: 取Acc/Aux的数据; 1: 取Voucher(JF); 2: 取Voucher(DF)
@skip decimal(20,2),  --样本间距
@step	int	--值区间1,2,3,4,5,6;小于1表示没有步骤;6固定样本抽样(步骤1)
AS

IF object_id('#data1') IS NOT NULL	
	DROP TABLE #data1
IF object_id('#idtable') IS NOT NULL
	DROP TABLE #idtable

IF object_id('#AccAux1') IS NOT NULL
DROP TABLE #AccAux1
IF object_id('#AccAux2') IS NOT NULL
DROP TABLE #AccAux2

create table #data1(sortid int , id varchar(100)  collate Chinese_PRC_CS_AS_KS_WS, val decimal(20, 2), sumval decimal(20, 2))
create table #idtable(id varchar(100) collate Chinese_PRC_CS_AS_KS_WS, floorval decimal(20, 2))

create table #AccAux1(AccountCode varchar(100) collate Chinese_PRC_CS_AS_KS_WS, AuxiliaryCode varchar(100) collate Chinese_PRC_CS_AS_KS_WS,IsRje int,Value decimal(20, 2))
create table #AccAux2(id varchar(100) collate Chinese_PRC_CS_AS_KS_WS, AccountCode varchar(100) collate Chinese_PRC_CS_AS_KS_WS, AuxiliaryCode varchar(100) collate Chinese_PRC_CS_AS_KS_WS,IsRje int, Value decimal(20, 2))



--取/设Random值
declare @random decimal(20, 2),@totalvalue decimal(20, 2),@yefx int

declare @prepid varchar(100)
select @prepid=CurrentyearPID	from	NeweasV5.dbo.projectsinfo	where		projectid=@pid

select @yefx=yefx,@random = isnull(Random, 0), @totalvalue = case @sampleType
        when 0 then isnull(Unchecked, 0) * Yefx
		when 1 then case when @prepid = '' then isnull(Jfje, 0) else isnull(Jfje2, 0) end
		when 2 then case when @prepid = '' then isnull(Dfje, 0) else isnull(Dfje2, 0) end
		else 0 end
    from VIEW_TBFS 
	where ProjectID = @pid and  FSCODE = @curfscode

if(@random = 0)
begin
    set @random = rand()
	update TBFS  set Random = @random where ProjectID = @pid and  FSCODE = @curfscode
end


--获取样本间距/样本量（样本量仅用于参考）
--declare @skip decimal(20, 2)
--declare @lines int
--select @lines = Samplesize from PMvalueofJ 
--    where ProjectID = @pid and  FSCODE = @fscode and Step = @step and TestObject = @sampleType
--update PMvalueofJ  set Memo = null
--    where ProjectID = @pid and FSCODE = @fscode and Step = @step and TestObject = @sampleType


	

if(@sampleType = 0)
begin
    insert into #AccAux1 select distinct  a.AccountCode, a.AuxiliaryCode,0, isnull(UnChecked, 0) * Yefx
	    from VIEW_TBDetail a
		join TBDetailExtra b
		on a.ID = b.ID 
        where a.ProjectID = @pid
			and a.FSCode like @fscode+'%'
		    and IsMx = 1
			and SourceFSCode = ''
			and (StepOfSample = 0 or StepOfSample >= @Step)
    

	--添加重分类数据
	insert into #AccAux1 select distinct  a.AccountCode, a.AuxiliaryCode,1, isnull(UnChecked, 0) * Yefx
	 from dbo.VIEW_TBDetail a left join dbo.TBDetailExtra b 
		on a.ID=b.ID and a.SourceFSCode != ''
		where a.projectid=@pid and a.DataType =2 and a.FSCode  like @fscode+'%' and (b.StepOfSample = 0 or b.StepOfSample >= @Step)

    insert into #AccAux2 select row_number() over (order by AccountCode, AuxiliaryCode), AccountCode, AuxiliaryCode,IsRje,Value
        from #AccAux1
	    where Value != 0

    
end

declare @sumval decimal(20, 2) 
insert #data1 exec dbo.GetOverallsample @pid=@pid,@fscode=@fscode,@sampleType=@sampleType,@step=@step,@sumval=@sumval output
--select @sumval = sumval from #data1

--每次执行统计抽样时，需要将每个报表项目计算的样本容量保存（并记录）表PMvalueofJ的字段Overallsample
--step<=1时，Overallsample数据来源表301
--if (@step <= 1)
--begin
--update PMvalueofJ  set Overallsample = isnull(@totalvalue,0)
--    where ProjectID = @pid and FSCODE = @fscode and Step = @step and TestObject = @sampleType
--end
--if (@step > 1)
--begin
--update PMvalueofJ  set Overallsample = isnull(@sumval,0)
--    where ProjectID = @pid and FSCODE = @fscode and Step = @step and TestObject = @sampleType
--end
--样本个数，样本间距
declare @samplesize int,@j decimal(20,2),@ValueofJ decimal(20,2)
set @j = 0
select @samplesize = samplesize,@ValueofJ = ValueofJ from PMvalueofJ
 where ProjectID = @pid and FSCODE = @fscode and Step = @step and TestObject = @sampleType


 --if(@samplesize != 0)
 --begin
	--set @j = isnull(@sumval,0)/@samplesize
	
 --end

  if (@step = 0 and @samplesize <=75)
	set @j = @ValueofJ 
  if((@step > 0 or (@step = 0 and @samplesize > 75)) and @samplesize != 0)
	set  @j = isnull(@sumval,0)/@samplesize

update PMvalueofJ  set Overallsample = isnull(@sumval,0),ValueofJ=ISNULL(@skip,0)
    where ProjectID = @pid and FSCODE = @fscode and Step = @step and TestObject = @sampleType


	--计算pv起始值
declare @pv decimal(20, 2)
--if(@totalvalue < @j)
--    set @j = @totalvalue

if (@totalvalue != 0 and @totalvalue < @j)
    set @j = @totalvalue

set @pv = @random * @j * (-1)	
--若存在原有统计抽样的样本标记清空
--余额样本标记清空
if(@sampleType = 0)
begin
    UPDATE b SET b.SampleSelectedYesNo=0,b.Stepofsample=0
	    FROM TBDetailExtra b  
	  	join VIEW_TBDetail a
	  	on a.ID = b.ID and  SourceFSCode = ''
        where a.ProjectID = @pid and a.FSCode = @curfscode
			and b.SampleSelectedYesNo=1 AND b.Stepofsample=@Step
    

    --重分类数据
	update b set b.SampleSelectedYesNo =0,b.Stepofsample =0
	from dbo.VIEW_TBDetail a 
	join dbo.TBDetailExtra b 
	on a.ID=b.ID and  SourceFSCode != ''
	where a.projectid=@pid and a.DataType =2 and a.FSCode=@curfscode 
	and b.SampleSelectedYesNo = 1 and b.Stepofsample = @step 

end 
--借方金额 样本标记清空
if(@sampleType = 1) 
begin
    UPDATE TBVoucher SET SampleSelectedYesNo=0,Stepofsample=0	
	where ProjectID = @pid
	and Jfje != 0 AND SampleSelectedYesNo=1 AND Stepofsample=@Step
	and AccountCode in (select AccountCode from TBDetail where ProjectID = @pid and fscode = @curfscode and IsAux = 0 and SourceFSCode = '')
end
--贷方金额 样本标记清空
if(@sampleType = 2)
begin
    UPDATE TBVoucher SET SampleSelectedYesNo=0,Stepofsample=0	
	where ProjectID = @pid
	and Dfje != 0 AND SampleSelectedYesNo=1 AND Stepofsample=@Step
	and AccountCode in (select AccountCode from TBDetail where ProjectID = @pid and fscode = @curfscode and IsAux = 0 and SourceFSCode = '')
end


--处理
delete #data1 where val < 0
if(@j != 0) 
begin
update #data1 set sumval = floor((sumval - (@j + @pv))/@j)
end
--select * from #data1
--insert into #idtable select min(id), sumval from #data1 where sumval >= 0 group by sumval
insert into #idtable select (select id from #data1 where sortid=t.sortid) as id,t.sumval from 
(select MIN(sortid) as sortid, sumval from #data1 t where sumval >= 0 group by sumval) t
--select * from #idtable

--回写数据库
if(@sampleType = 0)
begin
    update TBDetailExtra  set SampleSelectedYesNo = 1, Stepofsample = @step
	    from #idtable, #AccAux2,TBDetail
	    where  TBDetailExtra.ID = TBDetail.ID 
			and TBDetail.SourceFSCode = ''
			and TBDetail.ProjectID = @pid
			and TBDetail.AccountCode  = #AccAux2.AccountCode 
			and TBDetail.AuxiliaryCode  = #AccAux2.AuxiliaryCode 
		    and #AccAux2.id = #idtable.id
			and #AccAux2.IsRje=0   

	update dbo.TBDetailExtra  set SampleSelectedYesNo = 1, Stepofsample = @step
	    from #idtable, #AccAux2,dbo.TBDetail
	    where TBDetailExtra.ID = TBDetail.ID 
			and TBDetail.SourceFSCode != ''
			and TBDetail.ProjectID = @pid
			and TBDetail.AccountCode  = #AccAux2.AccountCode
			and TBDetail.AuxiliaryCode  = #AccAux2.AuxiliaryCode
		    and #AccAux2.id = #idtable.id
			and #AccAux2.IsRje=1			

end

if((@sampleType = 1) or (@sampleType = 2))
begin
    update TBVoucher  set SampleSelectedYesNo = 1, Stepofsample = @step
	    from #idtable
	    where TBVoucher.VoucherID = #idtable.id
end





GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'BuildFileScriptList')
   BEGIN
       DROP  Procedure  BuildFileScriptList
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2012 Huapu (Hefei)
  Customer  : Huapu
  Project   : EAS -更新文件
  Created   : 
  Updated	:
  Version   : 
********************************************************************************/

create procedure BuildFileScriptList
@ProjectID varchar(100),
@FileLibID varchar(128), 
@StruCode varchar(128),
@StruName varchar(500), 
@StruPreparer varchar(1000),
@PackID varchar(100),
@StruSize int
as
--更新文件
if exists(select 1 from dbo.FileScriptList where projectid=@ProjectID and StruCode=@StruCode)
begin
	update dbo.FileScriptList set StruName=@StruName, StruLastEditTime=getdate(),StruSize=@StruSize,StruPreparer=@StruPreparer
	where ProjectID=@ProjectID and StruCode=@StruCode 
	end 
else 
begin
	insert into FileScriptList(ProjectID,FileLibID,StruCode,StruCodeText,StruName,UpperStruCode,StruType,StruDescription,StruCriticalYesNO
	,StruTarget,BuildingType,Checkout,CheckedReviewer,StruPreparer,StruCreateTime,StruReviewer,StruMasterORCarbon,FlowExcutedState
	,OpenNotes,ClosedNotes,StruSize,StruLastEditTime,FlowID,FlowExcutedTime,Fsitem,FSCode,BCycleCode,AppScopeProject,NonAppScopeProject
	,AppCombineProject,BuildLevel,carrieddown,ConnectData)

	SELECT @ProjectID AS ProjectID
	,@FileLibID AS FileLibID
	,StruCode,StruCodeText,StruName,UpperStruCode,StruType,StruDescription,StruCriticalYesNO
	,'/'+@ProjectID+'/'+ @StruName as StruTarget
	,BuildingType,0 as Checkout,null as CheckedReviewer
	,@StruPreparer as StruPreparer
	,GetDate() as StruCreateTime,null as StruReviewer,StruMasterORCarbon,FlowExcutedState,OpenNotes,ClosedNotes,@StruSize,
	GetDate() as StruLastEditTime
	,FlowID,FlowExcutedTime,Fsitem,FSCode,BCycleCode,AppScopeProject,NonAppScopeProject,AppCombineProject,BuildLevel,carrieddown,ConnectData 
	FROM Atspackage.dbo.FileScriptList WHERE projectid=@PackID and strucode=@StruCode
end
--根据PACK包检查是否需要插入文件上级目录
;
with temp as 
(
	select *  from Atspackage.dbo.FileScriptList where projectid=@PackID AND strucode =@StruCode
	union all
	select b.*   from temp a,Atspackage.dbo.FileScriptList b
	where a.ProjectID=b.ProjectID and a.UpperStruCode = b.strucode  
)

insert into FileScriptList(ProjectID,FileLibID,StruCode,StruCodeText,StruName,UpperStruCode,StruType,StruDescription,StruCriticalYesNO
,StruTarget,BuildingType,Checkout,CheckedReviewer,StruPreparer,StruCreateTime,StruReviewer,StruMasterORCarbon,FlowExcutedState
,OpenNotes,ClosedNotes,StruSize,StruLastEditTime,FlowID,FlowExcutedTime,Fsitem,FSCode,BCycleCode,AppScopeProject,NonAppScopeProject
,AppCombineProject,BuildLevel,carrieddown,ConnectData)
SELECT @ProjectID AS ProjectID
,null AS FileLibID
,StruCode,StruCodeText,StruName,UpperStruCode,StruType,StruDescription,StruCriticalYesNO,StruTarget		
,BuildingType,0 as Checkout,null as CheckedReviewer,null as StruPreparer
,GetDate() as StruCreateTime,null as StruReviewer,StruMasterORCarbon,0 as FlowExcutedState,0 as OpenNotes,0 as ClosedNotes,StruSize,
GetDate() as StruLastEditTime
,FlowID,FlowExcutedTime,Fsitem,FSCode,BCycleCode,AppScopeProject,NonAppScopeProject,AppCombineProject,BuildLevel,carrieddown,ConnectData 
FROM temp
where strucode  not in (select strucode from FileScriptList where ProjectID = @ProjectID)



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'BuildFileScriptListPlusDBName')
   BEGIN
       DROP  Procedure  BuildFileScriptListPlusDBName
	END
GO

      
CREATE procedure [dbo].[BuildFileScriptListPlusDBName]      
@ProjectID varchar(100),      
@FileLibID varchar(128),       
@StruCode varchar(128),      
@StruName varchar(500),      
@StruPreparer varchar(1000),      
@PackID varchar(100),      
@StruSize int,      
@tvpFileScriptList  dbo.FileScriptListType readonly      
as      
--更新文件      
if exists(select 1 from dbo.FileScriptList where projectid=@ProjectID and StruCode=@StruCode)      
begin      
 update dbo.FileScriptList set StruName=@StruName, StruLastEditTime=getdate(),StruSize=@StruSize      
 where ProjectID=@ProjectID and StruCode=@StruCode       
 end       
else       
begin      
 insert into FileScriptList(ProjectID,FileLibID,StruCode,StruCodeText,StruName,UpperStruCode,StruType,StruDescription,StruCriticalYesNO      
 ,StruTarget,BuildingType,Checkout,CheckedReviewer,StruPreparer,StruCreateTime,StruReviewer,StruMasterORCarbon,FlowExcutedState      
 ,OpenNotes,ClosedNotes,StruSize,StruLastEditTime,FlowID,FlowExcutedTime,Fsitem,FSCode,BCycleCode,AppScopeProject,NonAppScopeProject      
 ,AppCombineProject,BuildLevel,carrieddown,ConnectData)      
      
       
 SELECT @ProjectID AS ProjectID      
 ,@FileLibID AS FileLibID      
 ,StruCode,StruCodeText,StruName,UpperStruCode,StruType,StruDescription,StruCriticalYesNO      
 ,'/'+@ProjectID+'/'+ @StruName as StruTarget      
 ,BuildingType,0 as Checkout,null as CheckedReviewer      
 ,@StruPreparer as StruPreparer      
 ,GetDate() as StruCreateTime,null as StruReviewer,StruMasterORCarbon,FlowExcutedState,OpenNotes,ClosedNotes,@StruSize,      
 GetDate() as StruLastEditTime      
 ,FlowID,FlowExcutedTime,Fsitem,FSCode,BCycleCode,AppScopeProject,NonAppScopeProject,AppCombineProject,BuildLevel,carrieddown,ConnectData       
 FROM @tvpFileScriptList  WHERE projectid=@ProjectID and strucode=@StruCode        
end      
--根据PACK包检查是否需要插入文件上级目录      
 
;      
with temp as       
(      
 select *  from  @tvpFileScriptList   where strucode =@StruCode      
 union all      
 select b.*   from temp a, @tvpFileScriptList  b      
 where a.UpperStruCode = b.strucode        
)      
      
insert into FileScriptList(ProjectID,FileLibID,StruCode,StruCodeText,StruName,UpperStruCode,StruType,StruDescription,StruCriticalYesNO      
,StruTarget,BuildingType,Checkout,CheckedReviewer,StruPreparer,StruCreateTime,StruReviewer,StruMasterORCarbon,FlowExcutedState      
,OpenNotes,ClosedNotes,StruSize,StruLastEditTime,FlowID,FlowExcutedTime,Fsitem,FSCode,BCycleCode,AppScopeProject,NonAppScopeProject      
,AppCombineProject,BuildLevel,carrieddown,ConnectData)      
SELECT @ProjectID AS ProjectID      
,null AS FileLibID      
,StruCode,StruCodeText,StruName,UpperStruCode,StruType,StruDescription,StruCriticalYesNO,StruTarget        
,BuildingType,0 as Checkout,null as CheckedReviewer,null as StruPreparer      
,GetDate() as StruCreateTime,null as StruReviewer,StruMasterORCarbon,0 as FlowExcutedState,0 as OpenNotes,0 as ClosedNotes,StruSize,      
GetDate() as StruLastEditTime      
,FlowID,FlowExcutedTime,Fsitem,FSCode,BCycleCode,AppScopeProject,NonAppScopeProject,AppCombineProject,BuildLevel,carrieddown,ConnectData       
FROM temp      
where strucode  not in (select strucode from FileScriptList where ProjectID = @ProjectID)    and (ProjectID =@ProjectID   or ProjectID =@PackID)
      
      
      
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'BulkImportAfterPeriodData')
   BEGIN
       DROP  Procedure  BulkImportAfterPeriodData
	END
GO
CREATE PROCEDURE [dbo].BulkImportAfterPeriodData
	@pid	varchar(1000)
	,@period	datetime
AS
	declare @sql	nvarchar(max)
	
	declare @Voucher            nvarchar(1000)=@pid+'Voucher';
	
	create table	#tmp	(pid varchar(100),period	datetime)
	insert	#tmp	
	select @pid,@period

	set @sql='
	insert	tempjzpz(pid,IncNo,Date,Period,Pzlx,Pzh,Djh,AccountCode,ProjectCode,Zy,Jfje,Dfje,Jfsl,Dfsl,zdr,dfkm)
	select '''+@pid+''',IncNo,Date, year(Date)*100+month(Date),Pzlx,Pzh,Djh,AccountCode,ProjectCode,Zy,Jfje,Dfje,Jfsl,Dfsl,zdr,dfkm from '+@Voucher+'	,#tmp
					where	[date]<#tmp.period	and year([date])<year(#tmp.period)
	
	'
	--print @sql
	exec(@sql)


RETURN 0






GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'BulkImportAfterProphaseData')
   BEGIN
       DROP  Procedure  BulkImportAfterProphaseData
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2010 Huapu (Beijing)
  Customer  : 
  Project   : EAS -处理前期\期后数据到t_fzye表
  Version   : 1.0.0
********************************************************************************/
CREATE Procedure BulkImportAfterProphaseData
@ProjectID	varchar(100),
@dateType int
AS

BEGIN	TRY

--BEGIN	TransAction
SET NOCOUNT ON
SET XACT_ABORT ON

declare	@t_itemclass	varchar(1000)=@ProjectID+'t_itemclass'
declare	@t_fzye	varchar(1000)=@ProjectID+'t_fzye'
declare	@t_itemdetail	varchar(1000)=@ProjectID+'t_itemdetail'
declare	@km	varchar(1000)=@ProjectID+'km'
declare @t_fzye_t			nvarchar(1000)=@ProjectID+'t_fzye_t';

DECLARE	@ID	INT,@COUNT	INT,@T1	VARCHAR(255),@A	VARCHAR(255),@sql	nvarchar(max)

DECLARE	@FNAME VARCHAR(1000)=''

IF OBJECT_ID('tempdb..#tmp') IS NOT NULL
	DROP TABLE #tmp
create	table	#tmp(fname	varchar(1000))

--把处理好的数据插入t_fzye
declare @year varchar(4)
select top 1	@year=kjdate	from	kjqj	where ProjectID=@ProjectID

--构造t_fzye表数据
SET	@sql='

IF EXISTS(Select 1 from '+@t_itemclass+')BEGIN

	DECLARE	@fid	varchar(100)
	SELECT @fid=stuff ((SELECT	'';''+CAST([FItemId] AS VARCHAR)
			FROM '+@t_itemclass+'
				FOR xml path ('''')), 1, 1,'''')
	from	'+@t_itemclass+'

	;WITH A1 AS(
	SELECT	''ltrim(rtrim(ISNULL(F''+CAST(t.FItemClassID AS VARCHAR(100))+''+@spl''+'',''+''space(1)''+'')))'' AS FT FROM '+@t_itemclass+'	t
	INNER	JOIN	DBO.fn_SplitTSQL(@fid,'';'')	t1
	ON  REPLACE(t.FItemId,'' '','''')	COLLATE Chinese_PRC_CS_AS_KS_WS=REPLACE(t1.Code,'' '',''''))

	insert	#tmp
	SELECT top 1 stuff ((SELECT ''+''+Ft
			FROM A1
				FOR xml path ('''')), 1, 1,'''')
	FROM A1;

END
'
exec(@sql)

select @FNAME=fname from #tmp

if(dbo.isnullempty(@FNAME,'')!='') begin

	set	@sql='
	DELETE '+@t_fzye_t+'
	IF EXISTS(Select 1 from '+@t_fzye+')begin

		DECLARE	@spl	VARCHAR(10)='';''
		DECLARE	@a2 table(kmdm varchar(1000)	COLLATE Chinese_PRC_CS_AS_KS_WS	NOT NULL,FID int,ProjectCode	varchar(1000)	COLLATE Chinese_PRC_CS_AS_KS_WS	NULL	)

		insert	@a2
		SELECT	ltrim(rtrim(a.kmdm)),idet.FDetailID,'+@FNAME+' as ProjectCode
					FROM	'+@t_itemdetail+'	idet
					join	'+@t_fzye+'	a
					on	a.FDetailID=idet.FDetailID

		insert		'+@t_fzye_t+'([ProjectID],[AccountCode],[FDetailID],[Yefx],[Ncye],[Ncsl],[ProjectCode],datatype,dataYear)
		SELECT 	'''+@ProjectID+''',ltrim(rtrim([Kmdm])),[FDetailID],[Yefx],
			[Ncye],[Ncsl],space(1),'+convert(nvarchar,@dateType)+','+convert(nvarchar,@year)+'	FROM '+@t_fzye+'

		UPDATE	FZ	SET	FZ.ProjectCode=left(X.ProjectCode,len(X.ProjectCode)-1)
		FROM	'+@t_fzye_t+'	FZ
		JOIN	@a2	X
		ON	FZ.FDETAILID=X.FID	and len(isnull(x.ProjectCode,space(1)))>0
		WHERE	fz.Projectid='''+@ProjectID+'''	
			and	FZ.AccountCode COLLATE Chinese_PRC_CS_AS_KS_WS=x.kmdm COLLATE Chinese_PRC_CS_AS_KS_WS 
			and fz.datatype='+convert(nvarchar,@dateType)+'	
			and	fz.dataYear='+convert(nvarchar,@year)+'
	end
	'

	exec(@sql)

end

if exists(select * from syscolumns where id=object_id(@km) and lower([name])='kmdm_jd')begin
	set @sql='
	if	exists(select * from '+@km+' where kmdm!=kmdm_jd)begin--  NOT like kmdm_JD+''%'')begin
			update a set a.AccountCode=ltrim(rtrim(k.kmdm_jd))
				from '+@t_fzye_t+'  a 
				inner join '+@km+' k 
				on a.AccountCode	COLLATE Chinese_PRC_CS_AS_KS_WS =ltrim(rtrim(k.Kmdm))	COLLATE Chinese_PRC_CS_AS_KS_WS
			where	a.datatype='+convert(nvarchar,@dateType)+'	and	a.projectid='''+@ProjectID+'''
		end
	'
	exec(@sql)
end


DELETE	dbo.t_fzye	WHERE	ProjectID=@ProjectID	and datatype=@dateType	and dataYear=@year
set @sql='
insert	dbo.t_fzye	([ProjectID],[AccountCode],[FDetailID],[Yefx],[Ncye],[Ncsl],[ProjectCode],datatype,dataYear)
SELECT 	ProjectID,ltrim(rtrim([AccountCode])),
	[FDetailID],[Yefx],[Ncye],[Ncsl],space(1),'+convert(nvarchar,@dateType)+','+convert(nvarchar,@year)+'	FROM '+@t_fzye_t+'
'
exec(@sql)

--EXEC dbo.SuspendIndex 't_fzye'

update T_FZYE set ProjectCode=LTRIM(rtrim(ProjectCode)) where projectid=@ProjectID and datatype=@dateType	and datatype=@year

--EXEC dbo.ResumeIndex 't_fzye'
--Commit TransAction
END	TRY

BEGIN CATCH	
--ROLLBACK TransAction
	EXEC DBO.[PRO_THROW] @ProjectID
END	CATCH


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'BulkImportJzpzdData')
   BEGIN
       DROP  Procedure  BulkImportJzpzdData
	END
GO

/*
	前期，期后，追加数据处理
*/

CREATE PROCEDURE [dbo].BulkImportJzpzdData
	@ProjectID	varchar(100),
	@dataType	int
AS
BEGIN TRY	
--BEGIN	TransAction
SET NOCOUNT ON
SET XACT_ABORT ON

declare @sql	nvarchar(max)
declare @Voucher            nvarchar(1000)=@ProjectID+'Voucher';
declare	@pzk	varchar(1000)=@ProjectID+'pzk'
declare @jzpz	nvarchar(1000)='Jzpz';
declare	@km	varchar(1000)=@ProjectID+'km'
IF object_id(@Voucher) IS NOT NULL
	EXEC('DROP TABLE '+@Voucher);

set	@sql='
CREATE TABLE '+@Voucher+' (
	[IncNo] INT null
	,[Date] VARCHAR(255) NULL
	,[Period] [int] NULL
	,[Pzlx] [varchar](255) 	NULL
	,[Pzh] [varchar](255) 	NULL
	,[Djh] [int] NULL
	,[AccountCode] [varchar](255)  NOT	NULL
	,[ProjectCode] [varchar](255) COLLATE Chinese_PRC_CS_AS_KS_WS	NULL
	,[Zy] [varchar](255) 	NULL
	,[Jfje] [decimal](20, 2) NULL
	,[Dfje] [decimal](20, 2) NULL
	,[Jfsl] [decimal](20, 4) NULL
	,[Dfsl] [decimal](20, 4) NULL
	,[ZDR] [varchar](255) NULL
	,[DFKM]	[varchar](100)	NULL
	,[FDetailID] INT NULL
	);'
exec(@sql)

exec dbo.ProcessVoucherData @ProjectID

declare	@PeriodTable	table(Period	int,StartDate	datetime,EndDate datetime)
declare @i int=1;
declare @kjdate varchar(10);
select top 1	@kjdate=kjdate	from	dbo.kjqj	where	ProjectID=@ProjectID
while(@i<=12)begin
	declare @date	varchar(10)
	if(@i>9)
		set @date=@kjdate+cast(@i as varchar(2))+'01'
	else 
		set @date=@kjdate+'0'+cast(@i as varchar(2))+'01'

	INSERT @PeriodTable
	select	cast(CONVERT(char(6),@date,112) as int),	
	convert(varchar(10),DATEADD(mm, DATEDIFF(mm,0,@date), 0),111),
	CONVERT(varchar(10),DATEADD(ms,-3,DATEADD(mm, DATEDIFF(m,0,@date)+1, 0)),111)
	set @i=@i+1
end

delete	dbo.accountperiod	where	ProjectID=@ProjectID	and	DateType=@dataType	and	year(StartDate)=year(@kjdate)

insert into dbo.accountperiod(ProjectID,accountperiod,Period,StartDate,EndDate,DateType,currentyearPID)
select @ProjectID,B.Period,0, B.StartDate, B.EndDate,@dataType ,@ProjectID
from  @PeriodTable B where	not exists
(select  A.accountperiod from  dbo.accountperiod A where	A.ProjectID=@ProjectID and B.period = A.accountperiod )
--Commit TransAction
end try
begin catch
--ROLLBACK TransAction
	EXEC DBO.[PRO_THROW] @ProjectID,'BulkImportJzpzdData'
end catch

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'BulkImportLocalPeriodData')
   BEGIN
       DROP  Procedure  BulkImportLocalPeriodData
	END
GO

CREATE PROCEDURE [dbo].BulkImportLocalPeriodData
	@ProjectID	varchar(100)
	,@Clientid	varchar(100)
	,@period	datetime	--本期项目截止日
AS
BEGIN TRY	
--BEGIN	TransAction
SET NOCOUNT ON
SET XACT_ABORT ON

	declare @sql	nvarchar(max)
	declare @ProjectType        nvarchar(1000)=@ProjectID+'ProjectType';
	declare @Project            nvarchar(1000)=@ProjectID+'Project';
	declare @Account            nvarchar(1000)=@ProjectID+'Account';
	declare @Voucher            nvarchar(1000)=@ProjectID+'Voucher';
	
	declare	@upyearpid varchar(100),@currentyearpid	varchar(100)
	select @upyearpid=upperyearProjectid,@currentyearpid=currentyearpid 
		from neweasv5..projectsinfo	where projectid=@ProjectID
	
	--本年前期--上年度
	create table #lastacc (accountcode varchar(1000) COLLATE Chinese_PRC_CS_AS_KS_WS	NULL,syjz int)
	if(@currentyearpid is not null and @currentyearpid!='')begin
		insert #lastacc
		select accountcode ,syjz from dbo.Account with(nolock) where Projectid=@currentyearpid
	end else if(@upyearpid is not null and @upyearpid!='')begin
		insert #lastacc
		select accountcode ,syjz from dbo.Account with(nolock) where Projectid=@upyearpid
	end 
	
	create table	#tmp	(ProjectID varchar(100),period	datetime)
	insert	#tmp	
	select @ProjectID,@period

	set @sql='
	
	SET ROWCOUNT 10000;
    WHILE 1 = 1
    BEGIN
	declare @ii int=0;
		
		delete dbo.ProjectType	where	ProjectID='''+@ProjectID+'''
		set @ii+=@@ROWCOUNT
		delete dbo.Project		where	ProjectID='''+@ProjectID+'''
		set @ii+=@@ROWCOUNT
		delete dbo.Account		where	ProjectID='''+@ProjectID+'''
		set @ii+=@@ROWCOUNT
		delete from dbo.TBVOUCHER	where ProjectID='''+@ProjectID+'''
		set @ii+=@@ROWCOUNT
		IF @ii = 0
			BREAK;
	END
    SET ROWCOUNT 0;

	declare	@currentyearPeriodEndDate	datetime=space(0)
	declare @currentyearpid	varchar(100)
	select @currentyearpid=currentyearpid
		from neweasv5..projectsinfo	where projectid='''+@ProjectID+'''
	
	if len(ISNULL(@currentyearpid,space(0)))>0
		select @currentyearPeriodEndDate=periodenddate from neweasv5..projectsinfo 
																		where projectid=@currentyearpid	
	
	insert	ProjectType(ProjectID,typecode,typename)
	select distinct '''+@ProjectID+''',typecode,typename from '+@ProjectType+'

	insert	Project(ProjectID,typecode,projectcode,projectname,uppercode,jb,ismx)
	select distinct '''+@ProjectID+''',typecode,projectcode,isnull(projectname,space(0)),uppercode,jb,ismx from '+@Project+'

	select DISTINCT	a.accountcode,ac.syjz
		into #tmp222
			from '+@Account+' a 
			inner join	neweasv5.dbo.Accountclass ac with(nolock)
			on a.Accountname like ac.AccountName+''%''
			where a.jb=1	
	
	insert	#tmp222
	select	DISTINCT a.accountcode,b.syjz
			from '+@Account+' a 
			inner join	#tmp222	b 
			on	left(a.accountcode,len(b.accountcode))=b.accountcode
			where a.jb>1

	insert	Account(ProjectID,[AccountCode],[AccountName],[jd],[hsxms],[TypeCode],[IsMx],[Ncye],[Jfje],[Dfje],[Ncsl],jb,syjz)
	select	distinct '''+@ProjectID+''',a.[AccountCode],[AccountName],[jd],[hsxms],[TypeCode],[IsMx],
											sum([Ncye]),sum([Jfje]),sum([Dfje]),sum([Ncsl]),jb,isnull(isnull(t1.syjz,t.syjz),0)syjz
		from '+@Account+'	a
		left join	#tmp222	t
		on a.AccountCode=t.accountcode
		left join	#lastacc	t1
		on a.AccountCode=t1.accountcode
			group by a.[AccountCode],[AccountName],[jd],[hsxms],[TypeCode],[IsMx],JB,t.syjz,t1.syjz
	
	select '''+@Clientid+''' as Clientid,'''+@ProjectID+''' as ProjectID,IncNo,Date, year(Date)*100+month(Date) as Period,Pzlx,Pzh,Djh,AccountCode,ProjectCode,Zy,Jfje,Dfje,Jfsl,Dfsl,
			zdr,dfkm,FDetailID,0 as fsje,0 as Hl,0 as jd
		into #p1
		from '+@Voucher+'	,#tmp
		where	[date]<=#tmp.period	and year([date])=year(#tmp.period)
	
	--分段审计
	if (len(isnull(@currentyearPeriodEndDate,space(0)))>0)begin
		Truncate table  #p1
		insert	 #p1
		select '''+@Clientid+''' as Clientid,'''+@ProjectID+''' as ProjectID,IncNo,Date, year(Date)*100+month(Date) as Period,Pzlx,Pzh,Djh,AccountCode,ProjectCode,Zy,Jfje,Dfje,Jfsl,Dfsl,
			zdr,dfkm,FDetailID,0 as fsje,0 as Hl,0 as jd
		from '+@Voucher+'	,#tmp
		where	[date]<=#tmp.period	and [date]>@currentyearPeriodEndDate	and year([date])=year(#tmp.period)	
	end
	
	alter table #p1 add ID int IDENTITY(1,1)

	declare @leve int=10000
	declare @ix int=1
	declare @ixend int=@leve 
	while (1=1)begin
		insert	dbo.TBVOUCHER(Clientid,ProjectID,IncNo,Date,Period,Pzlx,Pzh,Djh,AccountCode,ProjectCode,Zy,Jfje,Dfje,Jfsl,Dfsl,zdr,dfkm,FDetailID,fsje,Hl,jd)
		select Clientid,ProjectID,IncNo,Date,Period,Pzlx,Pzh,Djh,AccountCode,ProjectCode,Zy,Jfje,Dfje,Jfsl,Dfsl,zdr,dfkm,FDetailID,
				case when jfje<>0	then 1 else -1 end *(Jfje+Dfje) as fsje,Hl,
				case when jfje<>0	then 1 else -1 end	as jd
			 from #p1			where id BETWEEN @ix	and @ixend
		
		if @@ROWCOUNT=0
			break;
		set @ix+=@leve 
		set	@ixend+=@leve 
	end

	'
	exec(@sql)
	
	update dbo.tbwlzl		set	AgeAnalysis=0,BalanceAnalysis=0	where projectid=@ProjectID
	
	--更新account.uppercode
	exec dbo.UpdateAccountUpperCodeLevel1 @ProjectID
	
	exec dbo.UpdateAccountPeriod @ProjectID,0

	set @sql='
	drop table	'+@ProjectType+'
	drop table	'+@Project+'
	drop table	'+@Account+'
	drop table	'+@Voucher+'
	'
	exec (@sql)
	
	--Commit TransAction
end try
begin catch
	
	--ROLLBACK TransAction
	EXEC DBO.[PRO_THROW] @ProjectID,'BulkImportLocalPeriodData'
end catch

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'ByAccountCodeGetAuxiliaryAccounting')
   BEGIN
       DROP  Procedure  ByAccountCodeGetAuxiliaryAccounting
	END
GO
/********************************************************************************
  Copyright : Easy Audit System
  Customer  : Huapu Switzerland, Baden
  Project   : EAS -Module AuditPrograml
  Created   : 2017/09/13 通过accountcode获取
  Version   : 1.0.0
*********************************************************************************/
CREATE Procedure [dbo].[ByAccountCodeGetAuxiliaryAccounting]
	@PID nvarchar(50),
	@FsCode	varchar(100)=null
AS
BEGIN

CREATE TABLE #acc(accountcode VARCHAR(100) COLLATE Chinese_PRC_CS_AS_KS_WS NOT NULL,
uppercode	VARCHAR(100) COLLATE Chinese_PRC_CS_AS_KS_WS NULL,
typecode VARCHAR(100) COLLATE Chinese_PRC_CS_AS_KS_WS  NULL)

CREATE TABLE #tmpaccount(accountcode VARCHAR(100) COLLATE Chinese_PRC_CS_AS_KS_WS	NOT NULL,
uppercode	VARCHAR(100) COLLATE Chinese_PRC_CS_AS_KS_WS NULL,
typecode VARCHAR(100) COLLATE Chinese_PRC_CS_AS_KS_WS	 NULL)

if(len(isnull(@FsCode,''))=0)begin
INSERT	#tmpaccount
SELECT accountcode,uppercode,typecode  FROM dbo.ACCOUNT	WHERE ProjectID=@pid	
AND	 Hsxms>0 
end	else
	begin	 
INSERT	#tmpaccount
SELECT accountcode,uppercode,typecode  FROM dbo.ACCOUNT	WHERE ProjectID=@pid
AND	 Hsxms>0 
AND AccountCode in (select AccountCode from dbo.TBDetail where	Projectid=@pid and isAux=0 and left(fscode,len(@FsCode))=@FsCode) 
end

while(1=1)
BEGIN
	
	DECLARE @code VARCHAR(100),@tcode VARCHAR(100),@upperCode varchar(100)
	SELECT @code=accountcode,@tcode=typecode,@upperCode=upperCode FROM #tmpaccount
	IF(@@ROWCOUNT=0)BEGIN
		DROP TABLE #tmpaccount   
		BREAK;
	end
	
	INSERT #acc
	SELECT @code,@upperCode,* FROM dbo.fn_SplitTSQL(@tcode,';')
	
	INSERT #acc(accountcode,uppercode)
	SELECT @code,@upperCode
	
	DELETE #tmpaccount WHERE accountcode=@code
	
END

SELECT distinct
	a.accountcode
	,acc.AccountName
	,a.typecode,p.TypeName
	,cast(CASE WHEN	dbo.ISNullEmpty(pzb.TypeCode,'')!='' THEN 1 ELSE 0 END as bit) checked  
	FROM #acc	 a
	INNER JOIN DBO.ACCOUNT ACC
		ON ACC.ACCOUNTCODE=A.accountcode AND ACC.PROJECTID=@PID
	LEFT JOIN dbo.ProjectType p
		ON p.ProjectID=@pid AND REPLACE(p.TYPECODE,' ','')=REPLACE(a.TypeCode,' ','')
	LEFT JOIN dbo.KjKmPZB pzb
		ON	pzb.projectid=@PID and 	pzb.AccountCode=a.accountcode AND	CHARINDEX(a.typecode,dbo.ISNullEmpty(pzb.TypeCode,''))>0
	ORDER BY a.accountcode,a.typecode

if OBJECT_ID('#tmpaccount') is not null
	drop table #tmpaccount
if OBJECT_ID('#acc') is not null
	drop table #acc
END



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'ByAccountCodeGetVoucher')
   BEGIN
       DROP  Procedure  ByAccountCodeGetVoucher
	END
GO
/********************************************************************************  
 Copyright : huapu  
  Customer  : huapu  
  Project   : 获取分录 
  Created   : 20150408 by dengll	
  Updated	:	
  Updated   : 
*********************************************************************************/ 
CREATE PROCEDURE [dbo].[ByAccountCodeGetVoucher]
    @pid	varchar(max),
	@pageNumber	int,--页面数量
	@curPageNumber	int,--当前页
	@whereSql		varchar(max)--查询条件,不带where
AS 
	declare @sql  nvarchar(max) ,@sql1  nvarchar(max)
	

	SET NOCOUNT ON
	create	table	#t	(RowNumber int identity(1,1),code	varchar(1000),voucherid VARCHAR(100) collate Chinese_PRC_CS_AS_KS_WS,name	varchar(max),pzrq datetime,incno varchar(10),
		Pz varchar(255),Zy varchar(255),Jfje decimal(20,2),Dfje decimal(20,2),sampleselectedtype	int,sampleselectedyesno	int,
		yefx	as 
			case when (jfje-dfje)>0 then '借'
				when (jfje-dfje)<0 then '贷'
				when (jfje-dfje)=0		then '平'
				else '无'
			end,
			selectType	as case when sampleselectedtype>0 then 1 else 0 end)
	
	set	@sql='
		INSERT #t(code,voucherid,pzrq,incno,pz,zy,jfje,dfje,sampleselectedtype,sampleselectedyesno)
		SELECT	accountcode+''$''+isnull(projectcode,space(1)),voucherid,date,incno,isnull(pzlx,'''')+isnull(pzh,'''') AS pz,zy,jfje,dfje,sampleselectedtype,sampleselectedyesno
		from	TBVoucher
		where '+@whereSql+'		and Period <=year(date)*100+12 and projectID = '''+@pid+'''
	'
	set	@sql1='@whereSql		varchar(max)--查询条件
	'
	exec sp_executesql
			@sql,
			@sql1,
			@whereSql

	declare @startID int,@endID int
	set @startID=(@curPageNumber - 1) * @pageNumber + 1
	set @endID = @curPageNumber * @pageNumber

	select voucherid,code,incno,pzrq,pz,zy,jfje,dfje,yefx,selectType	from #t
	where RowNumber	between @startID	and @endID
	order by pzrq

	drop table #t



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'ByAccountCodeSavekjkmpzb')
   BEGIN
       DROP  Procedure  ByAccountCodeSavekjkmpzb
	END
GO
/********************************************************************************
  Copyright : Easy Audit System
  Customer  : Huapu Switzerland, Baden
  Project   : EAS -Module AuditPrograml
  Created   : 2017/09/13 通过accountcode获取
  Version   : 1.0.0
*********************************************************************************/
create Procedure [dbo].[ByAccountCodeSavekjkmpzb]
	@PID nvarchar(50),
	@AccountCode	varchar(1000),
	@TypeCodes	varchar(1000)
AS

BEGIN TRY
	
	declare @tmp	table(code	varchar(100))
	insert	@tmp
	select distinct a.code
	from	dbo.fn_SplitTSQL(@TypeCodes,';')a	WHERE dbo.isnullEmpty(a.code,'')!=''

	CREATE TABLE #pzb
	(
	ProjectID   VARCHAR (100) COLLATE Chinese_PRC_CS_AS_KS_WS NOT NULL,
	AccountCode VARCHAR (255) COLLATE Chinese_PRC_CS_AS_KS_WS NOT NULL,
	TypeCode    VARCHAR (255) COLLATE Chinese_PRC_CS_AS_KS_WS NOT NULL,
	ProjectCode VARCHAR (255) COLLATE Chinese_PRC_CS_AS_KS_WS NOT NULL,
	FdetailID   INT NOT NULL,
	CONSTRAINT PK_KJKMPZBr PRIMARY KEY (ProjectID,AccountCode,FdetailID)
	)

	SELECT fz.Projectid,fz.accountcode,fz.FDetailID,dbo.SubSplitLink(';',fz.projectcode,t.code) proCode
		into #tmpFzye from dbo.t_fzye fz,@tmp	t
	where fz.projectid=@PID	and	fz.AccountCode=@AccountCode	and fz.datatype=0

	--合半附注余额表里面相同的fdetailid的对应的procode
	;with a1 as (
	SELECT distinct a.Projectid,a.accountcode,a.FDetailID,stuff ((SELECT  ';'+proCode
		FROM	#tmpFzye b
			WHERE DBO.ISNULLEmpty(b.proCode,'')!='' and	b.FDetailID=a.FDetailID	AND a.AccountCode=b.AccountCode
			FOR xml path ('')), 1, 1,'')proCode
	from	#tmpFzye a	WHERE DBO.ISNULLEmpty(A.proCode,'')!='')

	insert  #pzb( Projectid,accountcode,TypeCode,FDetailID,ProjectCode)
	select Projectid,accountcode,@TypeCodes,FDetailID,proCode
		 from	a1
	
	delete dbo.kjkmpzb where projectid=@pid and accountcode=@AccountCode	and typecode=@TypeCodes

	insert	dbo.kjkmpzb (projectid,accountcode,FDetailID,ProjectCode,TypeCode)
	select distinct projectid,accountcode,FDetailID,ProjectCode,TypeCode from #pzb p	
		where not exists(select 1 from dbo.kjkmpzb where ProjectID=@pid and p.AccountCode=AccountCode and p.FdetailID=FdetailID)

	drop table #pzb
	drop table #tmpFzye
END TRY
BEGIN CATCH
	drop table #pzb
	drop table #tmpFzye
	EXEC dbo.LogWrongInfo @pid,'ByAccountCodeSavekjkmpzb';
	throw;
END CATCH





GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'byBcpInputData')
   BEGIN
       DROP  Procedure  byBcpInputData
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2010 Huapu (Beijing)
  Customer  : 
  Project   : EAS -使用bcp将xjy财务数据导入数据库
  Version   : 1.0.6
********************************************************************************/
CREATE Procedure byBcpInputData
@ProjectID	varchar(100),
@importTableName	nvarchar(1000),
@txtfilePath	nvarchar(1000)
AS
BEGIN	TRY

SET NOCOUNT ON
SET XACT_ABORT ON
declare	@tablename	varchar(1000)=@importTableName

declare	@sql	nvarchar(max)='
		TRUNCATE TABLE '+@tablename+'
		bulk insert	'+@tablename+'	from	'''+@txtfilePath+'''
'
	exec(@sql)

END	TRY
BEGIN CATCH	
	IF XACT_STATE()=-1
		ROLLBACK
    EXEC DBO.[PRO_THROW] @ProjectID,'byBcpInputData'
END	CATCH

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'ByCodeFindForACCAUXThisAfterCode')
   BEGIN
       DROP  Procedure  ByCodeFindForACCAUXThisAfterCode
	END
GO
/********************************************************************************
  Copyright : Easy Audit System
  Customer  : HuaPu
  Project   : 通过accountCode在tbacc表中找到之后的所有代码
  Created   : 2011/06/25 by len
  Update	:
  Version   : 1.0.0
*********************************************************************************/
CREATE Procedure ByCodeFindForACCAUXThisAfterCode
@ProjectID	varchar(100),
@Code	varchar(100),
@FSCODE	varchar(100)
AS

DECLARE	@T	TABLE(ACCOUNTCODE	VARCHAR(MAX) collate Chinese_PRC_CS_AS_KS_WS,TBGROUPING	VARCHAR(MAX) collate Chinese_PRC_CS_AS_KS_WS,ISAUX	INT)
DECLARE	@T1	TABLE(ACCOUNTCODE	VARCHAR(MAX) collate Chinese_PRC_CS_AS_KS_WS,TBGROUPING	VARCHAR(MAX) collate Chinese_PRC_CS_AS_KS_WS,ISAUX	INT)
DECLARE	@STACK	TABLE(ACCOUNTCODE VARCHAR(MAX) collate Chinese_PRC_CS_AS_KS_WS,TBGROUPING VARCHAR(MAX) collate Chinese_PRC_CS_AS_KS_WS,LEVELS INT) 
SET NOCOUNT ON  

DECLARE @TBGROUPING	VARCHAR(MAX)
DECLARE @LEVEL INT 
DECLARE @LINE VARCHAR(128) 
SELECT @CODE=ACCOUNTCODE,@TBGROUPING=TBGROUPING FROM VIEW_TBDetail WHERE ProjectID=@ProjectID and ACCOUNTCODE=@Code and IsAux = 0 and SourceFSCode = ''
IF(@CODE IS NOT NULL)	BEGIN
	INSERT INTO @STACK VALUES(@CODE,@TBGROUPING,1)
	SELECT @LEVEL=1 
	WHILE @LEVEL>0 BEGIN 
		IF EXISTS(SELECT * FROM @STACK WHERE LEVELS=@LEVEL) BEGIN 
			SELECT @CODE=ACCOUNTCODE,@TBGROUPING=TBGROUPING FROM @STACK WHERE LEVELS=@LEVEL 
			INSERT @T
			SELECT	@CODE,@TBGROUPING,0
			DELETE FROM @STACK WHERE LEVELS=@LEVEL AND ACCOUNTCODE=@CODE
			INSERT INTO @STACK 
			SELECT ACCOUNTCODE,[TBGROUPING],@LEVEL+1 FROM VIEW_TBDetail WHERE ProjectID=@ProjectID and [TBGROUPING]=@CODE  and IsAux = 0 and SourceFSCode = ''
		IF @@ROWCOUNT>0 
			SELECT @LEVEL=@LEVEL+1 
	END 
	ELSE 
		SELECT @LEVEL=@LEVEL-1 
	END  
END
IF	EXISTS(SELECT 1 FROM @T)
	INSERT	@T1
	SELECT	DISTINCT	AUX.AuxiliaryCode,AUX.ACCOUNTCODE,1	FROM VIEW_TBDetail AUX
	INNER	JOIN	@T	T
	ON	AUX.ACCOUNTCODE=T.ACCOUNTCODE	AND	FSCODE=@FSCODE and AUX.ProjectID=@ProjectID and aux.IsAux = 1 and SourceFSCode = ''
ELSE	
	INSERT	@T1
	SELECT	DISTINCT	AuxiliaryCode,ACCOUNTCODE,1	FROM	VIEW_TBDetail WHERE ProjectID=@ProjectID and AuxiliaryCode=@Code AND	FSCODE=@FSCODE and IsAux = 1 and SourceFSCode = ''

SELECT	ACCOUNTCODE,TBGROUPING,ISAUX	FROM	@T1
UNION
SELECT	ACCOUNTCODE,TBGROUPING,ISAUX	FROM	@T



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'ByCodeFindForACCThisAfterCode')
   BEGIN
       DROP  Procedure  ByCodeFindForACCThisAfterCode
	END
GO
/********************************************************************************
  Copyright : Easy Audit System
  Customer  : HuaPu
  Project   : 通过accountCode在tbacc表中找到之后的所有代码
  Created   : 2011/06/25 by len
  Update	:
  Version   : 1.0.0
*********************************************************************************/
CREATE Procedure ByCodeFindForACCThisAfterCode
@projectID	varchar(100),
@Code	varchar(1000)
AS

DECLARE	@T	TABLE(ACCOUNTCODE	VARCHAR(MAX),TBGROUPING	VARCHAR(MAX))
DECLARE	@STACK	TABLE(ACCOUNTCODE VARCHAR(MAX),TBGROUPING VARCHAR(MAX),LEVELS INT) 
SET NOCOUNT ON  

DECLARE @TBGROUPING	VARCHAR(MAX),@LEVEL INT ,@LINE VARCHAR(128) 
SELECT @CODE=ACCOUNTCODE,@TBGROUPING=TBGROUPING FROM VIEW_TBDetail WHERE ProjectID=@ProjectID and ACCOUNTCODE=@Code and IsAux = 0 and SourceFSCode = ''
IF(@CODE IS NOT NULL)	BEGIN
	INSERT INTO @STACK VALUES(@CODE,@TBGROUPING,1)
	SELECT @LEVEL=1 
	WHILE @LEVEL>0 
	BEGIN 
	IF EXISTS(SELECT * FROM @STACK WHERE LEVELS=@LEVEL) 
	BEGIN 
	SELECT @CODE=ACCOUNTCODE,@TBGROUPING=TBGROUPING FROM @STACK WHERE LEVELS=@LEVEL 
	INSERT @T
	SELECT	@CODE,@TBGROUPING
	DELETE FROM @STACK WHERE LEVELS=@LEVEL AND ACCOUNTCODE=@CODE
	INSERT INTO @STACK 
	SELECT ACCOUNTCODE,[TBGROUPING],@LEVEL+1 FROM VIEW_TBDetail WHERE ProjectID=@ProjectID and [TBGROUPING]=@CODE and IsAux = 0 and SourceFSCode = ''
	IF @@ROWCOUNT>0 
	SELECT @LEVEL=@LEVEL+1 
	END 
	ELSE 
	SELECT @LEVEL=@LEVEL-1 
	END  
END
SELECT	*	FROM	@T



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'ByCodeFindForACCThisUpperCode')
   BEGIN
       DROP  Procedure  ByCodeFindForACCThisUpperCode
	END
GO
/********************************************************************************
  Copyright : Easy Audit System
  Customer  : HuaPu
  Project   : 通过accountCode在tbacc表中找到之后的所有(上级)代码
  Created   : 2012/09/19 by len
  Update	:
  Version   : 1.0.0
*********************************************************************************/
CREATE PROCEDURE ByCodeFindForACCThisUpperCode
    @pid VARCHAR(1000) ,
    @Code VARCHAR(1000)
AS 

DECLARE	@T	TABLE(ACCOUNTCODE	VARCHAR(MAX),TBGROUPING	VARCHAR(MAX))
DECLARE	@STACK	TABLE(ACCOUNTCODE VARCHAR(MAX),TBGROUPING VARCHAR(MAX),LEVELS INT) 
SET NOCOUNT ON  

DECLARE @LEVEL INT ,@TBGROUPING	VARCHAR(MAX)
DECLARE @LINE VARCHAR(128) 
SELECT @CODE=ACCOUNTCODE,@TBGROUPING=TBGROUPING FROM VIEW_TBDetail WHERE PROJECTID=@PID AND ACCOUNTCODE=@Code and IsAux = 0 and SourceFSCode = ''
IF(@CODE IS NOT NULL)	BEGIN
	INSERT INTO @STACK VALUES(@CODE,@TBGROUPING,1)
	SELECT @LEVEL=1 
	WHILE @LEVEL>0 
	BEGIN 
	IF EXISTS(SELECT * FROM @STACK WHERE LEVELS=@LEVEL) 
	BEGIN 
	SELECT @CODE=ACCOUNTCODE,@TBGROUPING=TBGROUPING FROM @STACK WHERE LEVELS=@LEVEL 
	INSERT @T
	SELECT	@CODE,@TBGROUPING
	DELETE FROM @STACK WHERE LEVELS=@LEVEL AND ACCOUNTCODE=@CODE
	INSERT INTO @STACK 
	SELECT ACCOUNTCODE,[TBGROUPING],@LEVEL+1 FROM VIEW_TBDetail WHERE PROJECTID=@PID AND ACCOUNTCODE=@TBGROUPING and IsAux = 0 and SourceFSCode = ''
	IF @@ROWCOUNT>0 
	SELECT @LEVEL=@LEVEL+1 
	END 
	ELSE 
	SELECT @LEVEL=@LEVEL-1 
	END  
END
SELECT	*	FROM	@T



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'byCodefromAccounts')
   BEGIN
       DROP  Procedure  byCodefromAccounts
	END
GO
 /********************************************************************************
  Database  : EAS
  Copyright : 2010 Huapu (Beijing)
  Customer  : Huapu Chinese,bj
  Project   : EAS --根据accountcode获取account表内的上下级所有的代码
  Created   : 2013/03/08 by dengll
  Version   : 1.0.0
********************************************************************************/
CREATE Procedure byCodefromAccounts
@ProjectID	varchar(1000),
@oldcode	varchar(1000)
AS
SET	NOCOUNT	ON

DECLARE	@T	TABLE(ACCOUNTCODE	VARCHAR(MAX),TBGROUPING	VARCHAR(MAX))
DECLARE	@T1	TABLE(ACCOUNTCODE	VARCHAR(MAX),TBGROUPING	VARCHAR(MAX))
DECLARE	@STACK	TABLE(ACCOUNTCODE VARCHAR(MAX),TBGROUPING VARCHAR(MAX),LEVELS INT) 
SET NOCOUNT ON  

DECLARE @CODE VARCHAR(MAX),@TBGROUPING	VARCHAR(MAX)
DECLARE @LEVEL INT 
DECLARE @LINE VARCHAR(128) 

SELECT @CODE=ACCOUNTCODE,@TBGROUPING=UPPERCODE FROM Account WHERE	ProjectID=@ProjectID and	ACCOUNTCODE=@oldcode
IF(@CODE IS NOT NULL)	BEGIN
	INSERT INTO @STACK VALUES(@CODE,@TBGROUPING,1)
	SELECT @LEVEL=1 
	WHILE @LEVEL>0 BEGIN 
		IF EXISTS(SELECT * FROM @STACK WHERE LEVELS=@LEVEL) BEGIN 
			SELECT @CODE=ACCOUNTCODE,@TBGROUPING=TBGROUPING FROM @STACK WHERE LEVELS=@LEVEL 
			INSERT @T
			SELECT	@CODE,@TBGROUPING
			DELETE FROM @STACK WHERE LEVELS=@LEVEL AND ACCOUNTCODE=@CODE
			INSERT INTO @STACK 
			SELECT ACCOUNTCODE,UPPERCODE,@LEVEL+1 FROM Account WHERE ProjectID=@ProjectID and	UPPERCODE=@CODE 
		IF @@ROWCOUNT>0 
			SELECT @LEVEL=@LEVEL+1 
	END 
	ELSE 
		SELECT @LEVEL=@LEVEL-1 
	END  
END

SELECT	ACCOUNTCODE,TBGROUPING	FROM	@T




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'ByContinueDateUpdateTBAcc')
   BEGIN
       DROP  Procedure  ByContinueDateUpdateTBAcc
	END
GO
/********************************************************************************

  Database  : EAS

  Copyright : 2010　EAS (Beijing)

  Customer  : Huapu 

  Project   : 给样本分层赋值（连续审计项目根据上期项目赋值） 

  Created   : 2011/08/11 by  dshufa

  Updated   : 

  Version   : 1.0.0

********************************************************************************/

create Procedure [dbo].[ByContinueDateUpdateTBAcc]

@PID nvarchar(50)

AS



begin try	

--BEGIN	TransAction

SET NOCOUNT ON

SET XACT_ABORT ON



declare	@UpperYearProjectID	varchar(1000)

declare	@currentyearpid	varchar(1000)

SELECT @UpperYearProjectID=UpperYearProjectID,@currentyearpid=currentyearpid from neweasv5.dbo.Projectsinfo where projectid=@PID	

--如果有前期审计项目,在更新本期tbgoruping,fscode,kmsx,yefx时需要根据上期上下级关系来更新 by dengll

if	len(dbo.ISNullEmpty(@currentyearpid,@UpperYearProjectID))>0

begin
	--t:TBDetailExtra
	update ba set ba.SelectedSampleLebelYesNo=la.SelectedSampleLebelYesNo,
						ba.MaterialityProgram=la.MaterialityProgram,
						ba.SelectSampleMethod=la.SelectSampleMethod,
						ba.DrSelectedSampleLebelYesNo=la.DrSelectedSampleLebelYesNo,
						ba.DrMaterialityProgram=la.DrMaterialityProgram,
						ba.DrSelectSampleMethod=la.DrSelectSampleMethod,
						ba.CrSelectedSampleLebelYesNo=la.CrSelectedSampleLebelYesNo,
						ba.CrMaterialityProgram=la.CrMaterialityProgram,
						ba.CrSelectSampleMethod=la.CrSelectSampleMethod
		from ( ( (dbo.TBDetailExtra ba inner join dbo.TBDetail d1 on ba.ID = d1.ID )
		inner join dbo.TBDetail d2 on d1.AccountCode = d2.AccountCode and d1.isaux=0 and d2.isaux=0
 and d2.projectid=dbo.ISNullEmpty(@currentyearpid,@UpperYearProjectID) )
		inner join dbo.TBDetailExtra la on d2.ID = la.ID )
		where ba.projectid=@PID   and d1.isaux=0 and d2.isaux=0


	--t:TbAcc	根据上期与报表项目对应关系 设置为 本期与报表项目对应关系
	   update ba set ba.TBGrouping=la.TBGrouping,ba.fscode=la.fscode,ba.kmsx=la.kmsx,ba.yefx=la.yefx
			 from dbo.TBDetail  ba 
			 inner join dbo.TBDetail la  on ba.AccountCode=la.AccountCode	and la.projectid=dbo.ISNullEmpty(@currentyearpid,@UpperYearProjectID)
			  where	ba.projectid=@PID	and ba.datatype = 0 and la.datatype = 0 and (ba.TBGrouping is null or len(ba.TBGrouping)=0 or 
				ba.fscode is null or len(ba.fscode)=0 or la.kmsx='50')
				and (la.TBGrouping is not null and la.TBGrouping != '')
				and (la.fscode is not null and la.FSCode != '')
	--t:TBAccExtra
		update accex  set 
		accex.SelectedSampleLebelYesNo=1,
		accex.DrSelectedSampleLebelYesNo=1,
		accex.CrSelectedSampleLebelYesNo=1
		from	dbo.TBDetailExtra accex
		join	dbo.TBDetail acc

		on	acc.tbtype=1	and acc.id=accex.id and acc.isaux=0
where acc.projectid=@PID
and acc.accountcode not in (select accountcode from dbo.TBDetail	where projectid=dbo.ISNullEmpty(@currentyearpid,@UpperYearProjectID))
end	
else	begin--首次委托（首次使用EAS）项目 	--t:TBDetailExtra

 update accex  set 
		accex.SelectedSampleLebelYesNo=1,
		accex.DrSelectedSampleLebelYesNo=1,
		accex.CrSelectedSampleLebelYesNo=1
		from	dbo.TBDetailExtra accex
		join	dbo.TBDetail acc
		on	 acc.id=accex.id 
		where acc.projectid=@PID and acc.tbtype=1	and acc.isaux=0
end

	--COMMIT TRANSACTION

END TRY

BEGIN CATCH

	--ROLLBACK TRANSACTION

	EXEC DBO.[PRO_THROW] @pid,'ByContinueDateUpdateTBAcc'

END CATCH



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'ByFllxUpdateTbAccAndTbAux')
   BEGIN
       DROP  Procedure  ByFllxUpdateTbAccAndTbAux
	END
GO
 /********************************************************************************
  Database  : EAS
  Copyright : 2010 Huapu (Beijing)
  Customer  : Huapu Chinese,bj
  Project   : EAS -如果fllx作了修改需要把tbacc及tbaux的jdje更新
  Updated	: 过滤AuxiliaryFDetail数据
********************************************************************************/
CREATE Procedure [dbo].ByFllxUpdateTbAccAndTbAux
	@ProjectID nvarchar(50),
	@AccountCode varchar(100)=null
AS

begin try	
SET	NOCOUNT	ON

if not exists(select 1 from dbo.tbvoucher where projectid=@ProjectID)
	return;

select * into #accounting from dbo.Account where 1!=1

declare	@year	int,@currentyearpid varchar(100),@PeriodEndDate datetime,@clientid varchar(100)
select @year=year(PeriodEndDate),@PeriodEndDate=PeriodEndDate,
	@currentyearpid=currentyearpid,@clientid=clientid
			from neweasv5.dbo.projectsinfo where projectid=@ProjectID

if (len(isnull(@AccountCode,''))>0)begin
	insert	#accounting select *	from	dbo.Account with(nolock) 	where projectid=@ProjectID and accountcode=@AccountCode
end	else begin
	insert	#accounting select *	from	dbo.Account with(nolock) 	where projectid=@ProjectID
end

alter table #accounting add ID int IDENTITY(1,1)
create table #voucher(accountcode varchar(100)	collate Chinese_PRC_CS_AS_KS_WS,
	FDetailID int,fllx int,jfje decimal(20,2),dfje decimal(20,2),syjz int)

if(len(@currentyearpid)>0)
insert #voucher
select  v.accountcode,v.FDetailID,v.fllx,v.jfje,v.dfje,a.syjz from dbo.tbvoucher v  with(nolock)
	inner join #accounting	a
	on v.accountcode=a.accountcode
	where	v.[date]<=@PeriodEndDate	and year(v.date)=@year	and v.clientid=@clientid
else 
insert #voucher
select  v.accountcode,v.FDetailID,v.fllx,v.jfje,v.dfje,a.syjz from dbo.tbvoucher v  with(nolock)
	inner join #accounting	a
	on v.accountcode=a.accountcode
	where v.projectid=@ProjectID	and (year(v.date)=@year	and v.clientid=@clientid)	

--添加索引
--create index ix_apcode_voucher on #voucher (accountcode)

create table #tbvouchersum (ID int IDENTITY(1,1),AccountCode varchar(100) collate Chinese_PRC_CS_AS_KS_WS,
	FDetailID	int,jfje decimal(20,2),dfje decimal(20,2))
create table #account1 (projectid varchar(100),AccountCode varchar(100) collate Chinese_PRC_CS_AS_KS_WS)

;with a1 as (
select projectid,accountcode from account with(nolock)  where accountname='以前年度损益调整'	and projectid=@ProjectID
UNION ALL
select  a.projectid,a.accountcode from account a with(nolock) 
inner join a1 
on a.uppercode=a1.accountcode
and a.accountcode!=a.accountcode	and a.projectid=a1.projectid)
insert #account1
SELECT * FROM a1

insert	#tbvouchersum (AccountCode,jfje,dfje)
select	distinct	AccountCode ,sum(jfje)jfje,sum(dfje)dfje
	from #voucher	where fllx=1 and syjz=1
	AND	ACCOUNTCODE NOT in (select accountcode from #account1)
	group by AccountCode
union all
select	distinct	AccountCode ,sum(jfje)jfje,sum(dfje)dfje
	from #voucher	
		where  (fllx=1 or fllx=2) 
			and (syjz!=1 or ACCOUNTCODE in(select accountcode from #account1))
			group by AccountCode

declare @leve int=1000
declare @ix int=1
declare @ixend int=@leve 

update b set b.jfje=0,b.dfje=0 
	from	TBDetail 	 b	
	join #accounting	a
	on b.accountcode=a.accountcode	and b.projectid=a.ProjectID
	where b.projectid=@ProjectID	and b.isaux=0	and	b.auxiliarycode=''	and b.datatype=0

update acc set acc.jfje=tv.jfje,acc.dfje=tv.dfje
from dbo.TBDetail	acc with(nolock) 
join #tbvouchersum	tv
on acc.accountcode=tv.AccountCode	and acc.isaux=0	and	acc.auxiliarycode=''	and acc.datatype=0
where acc.projectid=@ProjectID

TRUNCATE TABLE #tbvouchersum
--update tbaux jfje,dfje

insert	#tbvouchersum (AccountCode,FDetailID,jfje,dfje)
select	distinct	vo.AccountCode,vo.FDetailID,sum(vo.jfje)jfje,sum(vo.dfje)dfje
	from #voucher	vo where vo.fllx=1 and vo.syjz=1
		AND	ACCOUNTCODE NOT in (select accountcode from #account1)
	group by vo.AccountCode,vo.FDetailID
union all
select	distinct	vo.AccountCode,vo.FDetailID,sum(vo.jfje)jfje,sum(vo.dfje)dfje
	from #voucher	vo
	WHERE (vo.FLLX=1 OR vo.FLLX=2)
			and (syjz!=1 or ACCOUNTCODE in(select accountcode from #account1))
	group by vo.AccountCode,vo.FDetailID

select af.accountcode,af.AuxiliaryCode,sum(v.jfje)jfje,sum(v.dfje)dfje
	into	#p0
	from	dbo.AuxiliaryFDetail af with(nolock) 
		inner join #tbvouchersum v
		on V.AccountCode=AF.accountcode	AND AF.FDetailID=V.FDetailID	AND AF.DATATYPE=0
		WHERE af.projectid=@ProjectID	and af.datayear=@year	--by dengll 2019/3/4
		group by af.accountcode,af.AuxiliaryCode

select ROW_NUMBER() OVER (ORDER BY accountcode) AS ID, accountcode,AuxiliaryCode,jfje,dfje 
	into #p1
	from	#p0

drop table #p0

--更新tbaux jfje,dfje
update  aux set aux.jfje=0,aux.dfje=0
from	dbo.TbAux aux
inner join #p1 AV
on av.AccountCode COLLATE Chinese_PRC_CS_AS_KS_WS=aux.AccountCode  COLLATE Chinese_PRC_CS_AS_KS_WS
where aux.Projectid=@ProjectID	

update  aux set aux.jfje=isnull(av.jfje,0),aux.dfje=isnull(av.dfje,0)
from	dbo.TbAux aux	with(nolock) 
inner join #p1 AV
on av.AccountCode COLLATE Chinese_PRC_CS_AS_KS_WS=aux.AccountCode  COLLATE Chinese_PRC_CS_AS_KS_WS
	and av.AuxiliaryCode COLLATE Chinese_PRC_CS_AS_KS_WS=aux.AuxiliaryCode COLLATE Chinese_PRC_CS_AS_KS_WS
where aux.Projectid=@ProjectID	

drop table #p1

--update jfje1,dfjfe1 
Update ac1 set ac1.jfje1=ac2.jfje,ac1.dfje1=ac2.dfje
From dbo.TBDetail ac1	with(nolock) 
Inner join TBDetail ac2  with(nolock) 
	on ac1.accountcode=ac2.accountcode	and ac2.projectid=@currentyearpid and ac2.isaux=0
Where ac1.projectid=@projectid	and ac1.isaux=0

Update dbo.TBDetail set jfje2=jfje-jfje1,dfje2=dfje-dfje1 
where projectid=@projectid and isaux=0

drop table #voucher
drop table #accounting

--只要修改了科目属性、凭证类型、和凭证金额都需要执行以下这个过程	by dengll
exec dbo.ByTBAuxUpdateTbDetailJFJEDFJE	@projectid

end try
begin catch
	EXEC DBO.[PRO_THROW] @ProjectID,'ByFllxUpdateTbAccAndTbAux'
end catch
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'ByFllxUpdateTbAccAndTbAuxQqccgz')
   BEGIN
       DROP  Procedure  ByFllxUpdateTbAccAndTbAuxQqccgz
	END
GO
 /********************************************************************************
  Database  : EAS
  Copyright : 2010 Huapu (Beijing)
  Customer  : Huapu Chinese,bj
  Project   : EAS -如果fllx作了修改需要把tbacc及tbaux的jdje更新
********************************************************************************/
CREATE Procedure [dbo].ByFllxUpdateTbAccAndTbAuxQqccgz
	@ProjectID nvarchar(50),
	@AccountCode varchar(100)=null
AS

begin try	
SET	NOCOUNT	ON

if not exists(select 1 from dbo.tbvoucher where projectid=@ProjectID)
	return;

select * into #accounting from dbo.Account where 1!=1

if (len(isnull(@AccountCode,''))>0)begin
	insert	#accounting select *	from	dbo.Account	 with(nolock) where projectid=@ProjectID and accountcode=@AccountCode
end	else begin
	insert	#accounting select *	from	dbo.Account  with(nolock) 	where projectid=@ProjectID
end

alter table #accounting add ID int IDENTITY(1,1)
--get periodenddate
declare	@year	int,
	@PeriodEndDate datetime,@clientid varchar(100),@currentyearpid varchar(100)

select @year=year(PeriodEndDate),
	@PeriodEndDate=PeriodEndDate,@clientid=clientid,
		@currentyearpid=currentyearpid
 from neweasv5.dbo.projectsinfo where projectid=@ProjectID

--本年度所有凭证数据
create table #voucher(accountcode varchar(100)	collate Chinese_PRC_CS_AS_KS_WS,
	FDetailID int,fllx int,jfje decimal(20,2),dfje decimal(20,2),syjz int)

if(len(@currentyearpid)>0)
insert #voucher
select v.accountcode,v.FDetailID,v.fllx,v.jfje,v.dfje,a.syjz from dbo.tbvoucher v   with(nolock)
	inner join #accounting	a
	on v.accountcode=a.accountcode
	where v.date<=@PeriodEndDate	and year(v.date)=@year	and v.clientid=@clientid
else 
insert #voucher
select v.accountcode,v.FDetailID,v.fllx,v.jfje,v.dfje,a.syjz from dbo.tbvoucher v   with(nolock)
	inner join #accounting	a
	on v.accountcode=a.accountcode
	where v.ProJectID=@ProjectID	and year(v.date)=@year	and v.clientid=@clientid

--todo:调用更新jfje,dfje
create table #tbvouchersum (ID int IDENTITY(1,1),AccountCode varchar(100) collate Chinese_PRC_CS_AS_KS_WS,
			AuxiliaryCode	varchar(100) collate Chinese_PRC_CS_AS_KS_WS,Qqccgz decimal(20,2))

insert	#tbvouchersum (AccountCode,Qqccgz)
select	distinct	vo.AccountCode,(sum(vo.jfje)-sum(vo.dfje))Qqccgz
	from #voucher vo	
	where vo.fllx=3
	group by vo.AccountCode
union all
select  distinct	AccountCode,(sum(jfje)-sum(dfje))Qqccgz 
	from dbo.TBAdjustedSubItems sub  with(nolock) 
	where projectid=@ProjectID and 
	AdjustedNO in (select AdjustedNO from TBAdjustedItems  with(nolock) where AdjustedType='BJE' and  projectid=@ProjectID )
	and	exists(select 1 from #accounting where AccountCode=sub.AccountCode)
	group by AccountCode

create table #a2(ID int IDENTITY(1,1),accountcode varchar(100) collate Chinese_PRC_CS_AS_KS_WS,
	AuxiliaryCode varchar(100) collate Chinese_PRC_CS_AS_KS_WS,Qqccgz decimal(20,2))
insert #a2(accountcode,Qqccgz)
select accountcode,sum(Qqccgz)Qqccgz from	#tbvouchersum group by accountcode

update b set b.Qqccgz=0
	from	TBDetail 	 b	
	join #accounting	a
	on b.accountcode=a.accountcode	and b.projectid=a.ProjectID
	where b.projectid=@ProjectID	and b.isaux=0	and	b.auxiliarycode=''	and b.datatype=0

update acc set acc.Qqccgz=tv.Qqccgz
from dbo.TBDetail	acc	with(nolock) 
join	#a2	tv
on acc.accountcode=tv.AccountCode	and acc.isaux=0
where acc.projectid=@ProjectID	and	exists(select 1 from #accounting where AccountCode=acc.AccountCode)
	
declare @leve int=1000
declare @ix int=1
declare @ixend int=@leve 

TRUNCATE TABLE  #tbvouchersum

--update tbaux jfje,dfje
insert	#tbvouchersum (AccountCode,AuxiliaryCode,Qqccgz)
select	distinct	af.AccountCode,af.AuxiliaryCode,(sum(vo.jfje)-sum(vo.dfje)) as Qqccgz
	from dbo.AuxiliaryFDetail af with(nolock) 
		inner join	#voucher vo 
		on vo.AccountCode=af.accountcode	AND vo.FDetailID=af.FDetailID	AND af.DATATYPE=0
		where vo.fllx=3	and af.datatype=@year
		group by af.AccountCode,af.AuxiliaryCode	--vo.AccountCode,vo.projectCode
union all
select  AccountCode,AuxiliaryCode,(sum(jfje)-sum(dfje)) as Qqccgz
	from dbo.TBAdjustedSubItems	tbadjsub  with(nolock) 
	where projectid=@ProjectID and 
		AdjustedNO in (select AdjustedNO from TBAdjustedItems   with(nolock) where AdjustedType='BJE' and  projectid=@ProjectID)
		and	exists(select 1 from #accounting where AccountCode=tbadjsub.AccountCode)
	group by AccountCode,AuxiliaryCode

insert #a2
select accountcode,AuxiliaryCode,sum(Qqccgz)Qqccgz from #tbvouchersum group by accountcode,AuxiliaryCode

update t set t.Qqccgz=a.Qqccgz
from dbo.TBDetail t	with(nolock) 
inner join #a2	a
on t.accountcode=a.accountcode	and t.AuxiliaryCode=a.AuxiliaryCode
where t.projectid=@ProjectID	and	exists(select 1 from #accounting where AccountCode=t.AccountCode)

drop table #tbvouchersum
drop table #voucher
drop table #a2

end try
begin catch
	EXEC DBO.[PRO_THROW] @ProjectID,'ByFllxUpdateTbAccAndTbAuxQqccgz'
end catch

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'ByFSCodeBatchSample')
   BEGIN
       DROP  Procedure  ByFSCodeBatchSample
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -Module 批量抽样过程
  Created   : 20150319	by dengll
  Version   : 1.0.0
********************************************************************************/
create Procedure [dbo].[ByFSCodeBatchSample]
@pid	varchar(100),
@fscode	varchar(100),
@sampleType	int	--0	余额抽样(A类型),1	借方,2	贷方(BC类型)抽样
AS
	--SET	NOCOUNT	ON
	--BEGIN	TRY
	declare	@J	decimal(20,2),@step	int

	declare @tmp	table(name varchar(100),V1	decimal(20,2),V2	decimal(20,2));
	insert	@tmp exec dbo.SelectBasicData @pid,@fscode--获取样本间距
	
	IF	NOT EXISTS(select 1	from @tmp)
		THROW 50000,'没有确定重要性水平！',1	;
	
	select	@J=V2 from @tmp
	exec	dbo.InitPM	@pid,@fscode,@J;

	--select	@step=max(step)		from	PMvalueofJ	where	ProjectID = @pid and fscode=@fscode	and	Testobject=@sampleType
	--exec dbo.BuilderSample	@pid,@fscode,@sampleType,@J,@step
	declare @minstep int,@maxstep int
	select	@minstep =min(step),@maxstep = max(step)	from	PMvalueofJ	where	ProjectID = @pid and fscode=@fscode	and	Testobject=@sampleType
	set @step=@minstep
	while (@step <= @maxstep )
	begin
		if exists (select	1	from	PMvalueofJ	where	ProjectID = @pid and fscode=@fscode	and	Testobject=@sampleType and step=@step)
		begin
			exec dbo.BuilderSample	@pid,@fscode,@sampleType,@J,@step
		end
		set @step = @step+1
	end
	--RETURN 1;
	--END TRY BEGIN CATCH
	--RETURN 0;
	--END CATCH

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'ByFSCodeGetAAge')
   BEGIN
       DROP  Procedure  ByFSCodeGetAAge
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 EAS (Beijing)
  Customer  : 
  Project   : eas
  Created   : 2013/10/15	bylen
  Version   : 1.0.0
********************************************************************************/
CREATE PROCEDURE [dbo].[ByFSCodeGetAAge]
    @pid VARCHAR(100) ,
    @fscode VARCHAR(100) 
AS 

if	(@fscode	is not null	and	len(@fscode)>0)
select	
ID
,[ORDER]
,FIELDNAME
,FIELDTEXT
,AGEMINIMUM
,AGECEILING
,BADDEBTRATE
,SAMPLING
,FsCode
,'' as NoteCode
,'' as UpperField
,ApplyYesno
from	AccountingAgeOfFscode
where ProjectID = @pid
and  fscode like @fscode+'%' and	applyyesno=1
else
select	
ID
,[ORDER]
,FIELDNAME
,FIELDTEXT
,AGEMINIMUM
,AGECEILING
,BADDEBTRATE
,SAMPLING
,FsCode
,'' as NoteCode
,'' as UpperField
,ApplyYesno
from	AccountingAgeOfFscode
where ProjectID = @pid
	

	










GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'ByfscodeGetRValue')
   BEGIN
       DROP  Procedure  ByfscodeGetRValue
	END
GO
/********************************************************************************
  Database  : newEAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : eas-rvalue
  Created   : 20150319 by dengll 使用fscode、CognizanceCode获取R值
  Version   : 1.0.0
********************************************************************************/
CREATE Procedure [dbo].[ByfscodeGetRValue]
@pid	varchar(100),
@fscode	varchar(100),
@CognizanceCode	varchar(100),
@RValue	decimal(20,2)	output
AS
	set nocount on

	create table #tmp	(R1 decimal(20,2),R2 decimal(20,2),R3 decimal(20,2),R as 3-r1-r2-r3)

	DECLARE @R1 decimal(20,2)=1
	DECLARE @R2 decimal(20,2)=0.3
	DECLARE @R3 decimal(20,2)=1	

    IF EXISTS (select 1 from  InherentRiskAccount ra  
	                   where projectID = @pid and  substring(ra.AccountID,1,5)=substring(@fscode,1,5) AND ra.CognizanceCode like '%'+@CognizanceCode+'%'
					   and	exists(select * from InherentRisk rr where projectID = @pid and ra.RiskID=rr.id AND rr.ImportantRiskYesNo=1))
		set @r1=0
	
	IF EXISTS (select 1 from  Riskfactor  a where a.projectID = @pid and
		a.risktype=2 and substring(a.fscode,1,5)=substring(@fscode,1,5) and a.CognizanceCode = @CognizanceCode)

		Select @R2=min(b.riskfactor) from  Riskfactor  a inner join RiskModel b 
		on a.ProjectID = b.ProjectID and a.risktype=b.risktype and a.riskvalue=b.riskvalue
			where a.projectID = @pid and a.risktype=2 and substring(a.fscode,1,5)=substring(@fscode,1,5) and a.CognizanceCode = @CognizanceCode 
	
	IF EXISTS (select 1 from  Riskfactor  a where a.projectID = @pid and
		a.risktype=3 and substring(a.fscode,1,5)=substring(@fscode,1,5) and a.CognizanceCode = @CognizanceCode)

		Select @R3=min(b.riskfactor) from  Riskfactor  a inner join RiskModel b 
			on a.ProjectID = b.ProjectID and a.risktype=b.risktype and a.riskvalue=b.riskvalue
			 where a.projectID = @pid and a.risktype=3 and substring(a.fscode,1,5)=substring(@fscode,1,5) and a.CognizanceCode = @CognizanceCode 
	
	insert	#tmp
	select @r1,@r2,@r3

	set @RValue=0
	select @RValue=r from #tmp
	drop table #tmp





GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'ByKMSXGetTBFSData')
   BEGIN
       DROP  Procedure  ByKMSXGetTBFSData
	END
GO

/********************************************************************************
  Database  : EAS
  Copyright : 2008 EAS (Beijing)
  Customer  : 
  Project   : eas
  Created   : 2013/10/15	bylen
  updated	: 2013/12/04	bylen
  Version   : 1.0.1
********************************************************************************/

CREATE PROCEDURE [dbo].[ByKMSXGetTBFSData]
    @pid VARCHAR(100) ,
    @kmsx VARCHAR(100) 
AS 
declare @sql varchar(max)
set @sql = '
select	
fsname,
fscode,
kmsx
from	TBFS
where	IsMx=1 and 
kmsx in ('+@kmsx+') 
and FsCode IN (SELECT FsCode FROM AccountingAgeOfFscode ) and 
FsCode IN (SELECT FsCode FROM FSCODECONFIG WHERE ISUSE=1)--后期修改 
and ProjectID = '''+@pid+'''
order by fscode'

exec (@sql)






GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'ByPidGetSample')
   BEGIN
       DROP  Procedure  ByPidGetSample
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -Module 获取批量抽样的待抽样数据
  Created   : 20150324	by dengll
  Updated	   : 20150407 by dengll	为满足原报的需求，添加了Q031条件.
  Version   : 1.0.1
********************************************************************************/
create Procedure [dbo].[ByPidGetSample]
@pid	varchar(100)
AS
	SET	NOCOUNT	ON
declare @CurrentyearPID  varchar(max)
select  @CurrentyearPID=CurrentyearPID from NeweasV5.dbo.projectsinfo where  projectid=@pid
if @CurrentyearPID=SPACE(1)
	set @CurrentyearPID=null;
if (@CurrentyearPID is  null)
begin
	with #tmp as (
	select  distinct fi.fscode,'' as strucode,fi.FsName  as proName,fs.yefx*fs.unchecked as sampleNum,	
	case when (t2.SampleSelectedYesNo=1) then 1 else 0 end as restSample
	from FSCodeConfig fi
	inner join VIEW_TBFS fs  on fi.ProjectID = fs.ProjectID and  fi.fscode=fs.fscode
	join TBDetail t1
	on t1.ProjectID = fi.ProjectID and t1.fscode like fi.fscode+'%' 
	left join TBDetailExtra t2	
	on   t1.ID = t2.ID  and  t2.SampleSelectedYesNo=1
	
	where fi.ProjectID = @pid  and  fi.isuse=1 and fi.IsAuditplan = 1 and fs.unchecked<>0
	and EXISTS(select 1 from AccountQues aq where aq.ProjectID = fi.ProjectID   and aq.quesid='Q011' and aq.selectedyesno=1 and aq.accountcode=fi.fscode )
	and EXISTS(select 1 from AccountQues aq where aq.ProjectID = fi.ProjectID   and aq.quesid='Q031' and aq.selectedyesno=1 and aq.accountcode=fi.fscode )

	union
	select distinct fi.fscode,'' as strucode,fi.fsname+'(借方)'  as proName,
	fs.jfje	    as  sampleNum,vou.SampleSelectedYesNo as restSample 
	from FSCodeConfig fi 
	inner join TBFS fs  on fi.projectID = fs.projectID and fi.fscode=fs.fscode	
	left join TBDetail acc  on fi.projectID = acc.ProjectID  and  acc.fscode like fi.fscode+'%' and acc.IsAux = 0 and acc.SourceFSCode = ''
	left join	 TBVoucher vou  on acc.ProjectID = vou.ProjectID and  acc.accountcode=vou.accountcode and vou.SampleSelectedYesNo=1 and vou.jd=1
	where fi.ProjectID = @pid  and fi.isuse=1 and fi.IsAuditplan = 1 and	fs.jfje<>0  
	and EXISTS(select 1 from AccountQues aq where aq.ProjectID = fi.ProjectID and  aq.quesid in ('Q012','Q013') and aq.selectedyesno=1 and aq.accountcode=fi.fscode)
	and EXISTS(select 1 from AccountQues aq where aq.ProjectID = fi.ProjectID and aq.quesid='Q031' and aq.selectedyesno=1 and aq.accountcode=fi.fscode )

	union 
	select   DISTINCT fi.fscode,'' as strucode,fi.fsname+'(贷方)'  as proName,
	fs.dfje   as sampleNum,vou.SampleSelectedYesNo as restSample
	from FSCodeConfig fi
	inner join TBFS fs  on fi.projectID = fs.projectID and  fi.fscode=fs.fscode	
	left join TBDetail acc  on fi.projectID = acc.ProjectID  and acc.fscode like fi.fscode+'%' and acc.IsAux = 0 and acc.SourceFSCode = ''
	left join	 TBVoucher vou  on acc.ProjectID = vou.ProjectID and acc.accountcode=vou.accountcode and vou.SampleSelectedYesNo=1 and vou.jd=-1
	where fi.ProjectID = @pid  and fi.isuse=1 and fi.IsAuditplan = 1  and fs.dfje<>0 
	and EXISTS(select 1 from AccountQues aq where aq.ProjectID = fi.ProjectID and aq.quesid in ('Q012','Q013') and aq.selectedyesno=1 and aq.accountcode=fi.fscode )
	and EXISTS(select 1 from AccountQues aq where aq.ProjectID = fi.ProjectID and aq.quesid='Q031' and aq.selectedyesno=1 and aq.accountcode=fi.fscode )
	)
	,
	#tmp1 as (select fscode,strucode,proname,sampleNum,sum(isnull(restSample,0))restSample from #tmp group by  fscode,strucode,proname,sampleNum)
	select fscode,strucode,proname,sampleNum,restSample	from #tmp1 where restSample=0;
end

	else if (@CurrentyearPID	is not null)
begin
	declare  @PeriodEndDate1 datetime,@PeriodEndDate2 datetime;
	select  @PeriodEndDate2=PeriodEndDate from NeweasV5.dbo.projectsinfo where  projectid=@pid;
	select  @PeriodEndDate1=PeriodEndDate from NeweasV5.dbo.projectsinfo where  projectid=@CurrentyearPID;
	select @PeriodEndDate1 as end1,@PeriodEndDate2 as end2 into #Period;

	with #tmp as (
		select  distinct fi.fscode,'' as strucode,fi.FsName  as proName,fs.yefx*fs.unchecked as sampleNum,		
		case when (auxex.SampleSelectedYesNo=1) then 1 else 0 end as restSample
		from FSCodeConfig fi
		inner join VIEW_TBFS fs  on fi.ProjectID = fs.ProjectID and  fi.fscode=fs.fscode
		join TBDetail t
		on t.ProjectID = fi.ProjectID and t.fscode like fi.fscode+'%' 
		left join TBDetailExtra auxex   
		on t.ID = auxex.ID and  auxex.SampleSelectedYesNo=1
		
		where fi.ProjectID = @pid  and fi.isuse=1 and fi.IsAuditplan = 1 and fs.unchecked<>0
		and EXISTS(select 1 from AccountQues aq where aq.ProjectID = fi.ProjectID   and aq.quesid='Q011' and aq.selectedyesno=1 and aq.accountcode=fi.fscode )
	    and EXISTS(select 1 from AccountQues aq where aq.ProjectID = fi.ProjectID   and aq.quesid='Q031' and aq.selectedyesno=1 and aq.accountcode=fi.fscode )

	
	union
	select   distinct  fi.fscode,'' as strucode,fi.fsname+'(借方)'    as proName,
	fs.jfje	    as  sampleNum,vou.SampleSelectedYesNo as restSample 
	from FSCodeConfig fi 
	inner join TBFS fs  on fi.ProjectID = fs.ProjectID and fi.fscode=fs.fscode	
	left join TBDetail acc  on fi.ProjectID = acc.ProjectID and acc.fscode like fi.fscode+'%' and IsAux = 0 and SourceFSCode = ''
	left join	 (select ProjectID,accountcode,SampleSelectedYesNo from TBVoucher v 
				where  v.ProjectID = @pid and v.SampleSelectedYesNo=1 and v.jd=1 and exists(select 1 from	#Period	where v.date>end1 and v.date<=end2))vou  
		on acc.projectID = vou.projectID and  acc.accountcode=vou.accountcode
	where fi.ProjectID = @pid and fi.isuse=1 and fi.IsAuditplan = 1 	and	fs.jfje<>0  
	and EXISTS(select 1 from AccountQues aq where aq.ProjectID = fi.ProjectID   and aq.quesid in ('Q012','Q013') and aq.selectedyesno=1 and aq.accountcode=fi.fscode)
	and EXISTS(select 1 from AccountQues aq where aq.ProjectID = fi.ProjectID   and aq.quesid='Q031' and aq.selectedyesno=1 and aq.accountcode=fi.fscode )

	union 
	select   DISTINCT fi.fscode,'' as strucode,fi.fsname+'(贷方)'  as proName,
		   fs.dfje   as sampleNum,vou.SampleSelectedYesNo as restSample
	from FSCodeConfig fi
	inner join TBFS fs  on fi.ProjectID = fs.ProjectID and fi.fscode=fs.fscode	
	left join TBDetail acc  on  fi.ProjectID = acc.ProjectID and acc.fscode like fi.fscode+'%' and IsAux = 0 and SourceFSCode = ''
	left join	 (select ProjectID,accountcode,SampleSelectedYesNo from TBVoucher v 
				where  v.ProjectID = @pid and v.SampleSelectedYesNo=1 and v.jd=-1 and exists(select 1 from	#Period	where v.date>end1 and v.date<=end2)) vou  
		on acc.ProjectID = vou.ProjectID and acc.accountcode=vou.accountcode
	where fi.ProjectID = @pid and fi.isuse=1 and fi.IsAuditplan = 1 and fs.dfje<>0 
	and EXISTS(select 1 from AccountQues aq where aq.ProjectID = fi.ProjectID   and aq.quesid in ('Q012','Q013') and aq.selectedyesno=1 and aq.accountcode=fi.fscode )
	and EXISTS(select 1 from AccountQues aq where aq.ProjectID = fi.ProjectID   and aq.quesid='Q031' and aq.selectedyesno=1 and aq.accountcode=fi.fscode )
	),

	#tmp1 as (select fscode,strucode,proname,sampleNum,sum(isnull(restSample,0))restSample from #tmp group by  fscode,strucode,proname,sampleNum)
	select fscode,strucode,proname,sampleNum,restSample	from #tmp1 where restSample=0;
	end
if OBJECT_ID('#Period')is not null
	drop table #Period




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'ByPidStatisticsSampling')
   BEGIN
       DROP  Procedure  ByPidStatisticsSampling
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -对整个项目做统计抽样
  Created   : 20150505	by dengll
  Version   : 1.0.0
********************************************************************************/
create Procedure [dbo].[ByPidStatisticsSampling]
	@pid	varchar(100)
AS
	--SET	NOCOUNT	ON
	--BEGIN	TRY
	    declare @CurrentAdjustedTax decimal(20,2)
		if not exists (select 1  from PmPlanningMateriality where ProjectID =  @pid)
			throw 50000,'未设置重要性水平',1
		else 
			select @CurrentAdjustedTax = CurrentAdjustedTax  from PmPlanningMateriality where ProjectID =  @pid

		if @CurrentAdjustedTax = 0
			throw 50000,'未设置重要性水平',1


		CREATE	TABLE	#sampling(fscode	varchar(100),strucode	varchar(100),proname	varchar(1000),sampleNum	decimal(20,2),restSample	int)
		
		--待抽科目
		insert	#sampling
		exec dbo.ByPidGetSample	@pid

		--开始抽样
		while	exists(select	* from	#sampling)begin
			declare	@fscode	varchar(100),@proname	varchar(2000)
			select	top 1 @fscode=fscode,@proname=proname from #sampling
			if(CHARINDEX('借方',@proname)>0)
				exec dbo.ByFSCodeBatchSample	@pid,@fscode,1
			else if(CHARINDEX('贷方',@proname)>0)
				exec dbo.ByFSCodeBatchSample	@pid,@fscode,2
			else
				exec dbo.ByFSCodeBatchSample	@pid,@fscode,0
			delete #sampling where fscode=@fscode and proname=@proname
		end

	--RETURN 1;
	--END TRY BEGIN CATCH
	--RETURN 0;
	--END CATCH






GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'ByTBAuxUpdateTbDetailJFJEDFJE')
   BEGIN
       DROP  Procedure  ByTBAuxUpdateTbDetailJFJEDFJE
	END
GO
 /********************************************************************************
  Database  : EAS
  Copyright : 2010 Huapu (Beijing)
  Customer  : Huapu Chinese,bj
  Project   : EAS -by tbaux update tbdetail jfje,dfje
********************************************************************************/
CREATE Procedure [dbo].ByTBAuxUpdateTbDetailJFJEDFJE
	@ProjectID nvarchar(50)
AS

begin try	
SET	NOCOUNT	ON

update  ad set ad.jfje=isnull(av.jfje,0),ad.dfje=isnull(av.dfje,0)
from	dbo.tbdetail ad	with(nolock) 
inner join dbo.TbAux av	with(nolock) 
on av.AccountCode COLLATE Chinese_PRC_CS_AS_KS_WS=ad.AccountCode  COLLATE Chinese_PRC_CS_AS_KS_WS
	and av.AuxiliaryCode COLLATE Chinese_PRC_CS_AS_KS_WS=ad.AuxiliaryCode COLLATE Chinese_PRC_CS_AS_KS_WS
	and av.projectid=ad.projectid
	and	ad.datatype=0
where ad.Projectid=@ProjectID	and ad.datatype=0

end try
begin catch
	EXEC DBO.[PRO_THROW] @ProjectID,'ByTBAuxUpdateTbDetailJFJEDFJE'
end catch
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'ByVoucherIDUpdateVoucher')
   BEGIN
       DROP  Procedure  ByVoucherIDUpdateVoucher
	END
GO

/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -xxx64 使用这个过程，通过voucherid更新样本标志
  Created   : 20150409 by dengll
  ********************************************************************************/

CREATE Procedure [dbo].[ByVoucherIDUpdateVoucher]
	@pid	VARCHAR(100),
	@voucherid	varchar(50),
	@sampleselectedtype	int
AS
	update	TBVoucher	set	
		sampleselectedtype=@sampleselectedtype
		where	ProjectID = @pid and  voucherid=@voucherid




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'calculateBad42DataLevel')
   BEGIN
       DROP  Procedure  calculateBad42DataLevel
	END
GO
/********************************************************************************
  Project   : EAS -Module WLYE  计算坏帐准备
********************************************************************************/

create Procedure [dbo].[calculateBad42DataLevel]
	@projectid	varchar(100),
	@FSCode varchar(255)
AS
SET NOCOUNT ON

declare @max int;
declare @baddebtrate1 decimal(20,2);
declare @baddebtrate2 decimal(20,2);
declare @baddebtrate3 decimal(20,2);
declare @baddebtrate4 decimal(20,2);
declare @baddebtrate5 decimal(20,2);
declare @baddebtrate6 decimal(20,2);
declare @baddebtrate7 decimal(20,2);
declare @baddebtrate8 decimal(20,2);
declare @baddebtrate9 decimal(20,2);


--读取有效账龄段数
select @max = count(*) from AccountingAgeOfFscode
	where ProjectID = @ProjectID
		and fscode = @FSCode
		and applyyesno = 1;


--构造坏账准备比例
if(@max >= 1)
	select @baddebtrate1 = cast([BADDEBTRATE] as decimal(20,2)) from AccountingAgeOfFscode
		where ProjectID = @ProjectID
			and fscode = @FSCode
			and applyyesno = 1
			and [ORDER] = 1;
else
	set @baddebtrate1 = 0;

if(@max >= 2)
	select @baddebtrate2 = cast([BADDEBTRATE] as decimal(20,2)) from AccountingAgeOfFscode
		where ProjectID = @ProjectID
			and fscode = @FSCode
			and applyyesno = 1
			and [ORDER] = 2;
else
	set @baddebtrate2 = 0;

if(@max >= 3)
	select @baddebtrate3 = cast([BADDEBTRATE] as decimal(20,2)) from AccountingAgeOfFscode
		where ProjectID = @ProjectID
			and fscode = @FSCode
			and applyyesno = 1
			and [ORDER] = 3;
else
	set @baddebtrate3 = 0;

if(@max >= 4)
	select @baddebtrate4 = cast([BADDEBTRATE] as decimal(20,2)) from AccountingAgeOfFscode
		where ProjectID = @ProjectID
			and fscode = @FSCode
			and applyyesno = 1
			and [ORDER] = 4;
else
	set @baddebtrate4 = 0;

if(@max >= 5)
	select @baddebtrate5 = cast([BADDEBTRATE] as decimal(20,2)) from AccountingAgeOfFscode
		where ProjectID = @ProjectID
			and fscode = @FSCode
			and applyyesno = 1
			and [ORDER] = 5;
else
	set @baddebtrate5 = 0;

if(@max >= 6)
	select @baddebtrate6 = cast([BADDEBTRATE] as decimal(20,2)) from AccountingAgeOfFscode
		where ProjectID = @ProjectID
			and fscode = @FSCode
			and applyyesno = 1
			and [ORDER] = 6;
else
	set @baddebtrate6 = 0;

if(@max >= 7)
	select @baddebtrate7 = cast([BADDEBTRATE] as decimal(20,2)) from AccountingAgeOfFscode
		where ProjectID = @ProjectID
			and fscode = @FSCode
			and applyyesno = 1
			and [ORDER] = 7;
else
	set @baddebtrate7 = 0;

if(@max >= 8)
	select @baddebtrate8 = cast([BADDEBTRATE] as decimal(20,2)) from AccountingAgeOfFscode
		where ProjectID = @ProjectID
			and fscode = @FSCode
			and applyyesno = 1
			and [ORDER] = 8;
else
	set @baddebtrate8 = 0;

if(@max >= 9)
	select @baddebtrate9 = cast([BADDEBTRATE] as decimal(20,2)) from AccountingAgeOfFscode
		where ProjectID = @ProjectID
			and fscode = @FSCode
			and applyyesno = 1
			and [ORDER] = 9;
else
	set @baddebtrate9 = 0;


update Tbwlzl set HZZBZLD1 = CASE WHEN ZLD1 > 0 THEN cast(round(ZLD1 * @baddebtrate1 /100,2) as numeric(20,2)) ELSE 0 END,
		HZZBZLD2 = CASE WHEN ZLD2 > 0 THEN cast(round(ZLD2 * @baddebtrate2 /100,2) as numeric(20,2)) ELSE 0 END,
		HZZBZLD3 = CASE WHEN ZLD3 > 0 THEN cast(round(ZLD3 * @baddebtrate3 /100,2) as numeric(20,2)) ELSE 0 END,
		HZZBZLD4 = CASE WHEN ZLD4 > 0 THEN cast(round(ZLD4 * @baddebtrate4 /100,2) as numeric(20,2)) ELSE 0 END,
		HZZBZLD5 = CASE WHEN ZLD5 > 0 THEN cast(round(ZLD5 * @baddebtrate5 /100,2) as numeric(20,2)) ELSE 0 END,
		HZZBZLD6 = CASE WHEN ZLD6 > 0 THEN cast(round(ZLD6 * @baddebtrate6 /100,2) as numeric(20,2)) ELSE 0 END,
		HZZBZLD7 = CASE WHEN ZLD7 > 0 THEN cast(round(ZLD7 * @baddebtrate7 /100,2) as numeric(20,2)) ELSE 0 END,
		HZZBZLD8 = CASE WHEN ZLD8 > 0 THEN cast(round(ZLD8 * @baddebtrate8 /100,2) as numeric(20,2)) ELSE 0 END,
		HZZBZLD9 = CASE WHEN ZLD9 > 0 THEN cast(round(ZLD9 * @baddebtrate9 /100,2) as numeric(20,2)) ELSE 0 END,
		BalanceAnalysis = 1
	where ProjectID = @ProjectID
		and fscode = @FSCode
		and BalanceAnalysis = 0

update Tbwlzl
    set impairmentamount = HZZBZLD1 + HZZBZLD2 + HZZBZLD3 + HZZBZLD4 + HZZBZLD5 + HZZBZLD6 + HZZBZLD7 + HZZBZLD8 + HZZBZLD9
	where ProjectID = @ProjectID
		and fscode = @FSCode;








GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'CalculateBadDebt')
   BEGIN
       DROP  Procedure  CalculateBadDebt
	END
GO
--计算坏账准备
create PROCEDURE CalculateBadDebt
	@ProjectID	varchar(100),
	@FSCode varchar(255)
AS
BEGIN	
	declare @BalanceAnalysis  int;
	declare @row_index int;
	declare @row_maxindex int;
    declare @FieldName varchar(50);
	declare @BadDebtRate decimal(20,2);
	
	select @BalanceAnalysis = BalanceAnalysis  from Tbwlzl where  ProjectID = @ProjectID and fscode = @FSCode
	 if		(@BalanceAnalysis =0)
	 begin
	 set @row_index = 1
	 select @row_maxindex = count(*)  from AccountingAgeOfFscode where ProjectID = @ProjectID and FsCode = @FSCode  and applyyesno  = 1
	 while (@row_index <= @row_maxindex)
		begin
			select @FieldName = FieldName ,@BadDebtRate = BADDEBTRATE  from AccountingAgeOfFscode
			where ProjectID = @ProjectID
				and FsCode = @FSCode
				and [ORDER] = @row_index				
			if  @FieldName = 'ZLD1'
				update  Tbwlzl set HZZBZLD1 = ZLD1*@BadDebtRate*0.01 where  ProjectID = @ProjectID and fscode = @FSCode
			else if  @FieldName = 'ZLD2'
				update  Tbwlzl set HZZBZLD2 = ZLD2*@BadDebtRate*0.01 where  ProjectID = @ProjectID and fscode = @FSCode
			else if  @FieldName = 'ZLD3'
				update  Tbwlzl set HZZBZLD3 = ZLD3*@BadDebtRate*0.01 where  ProjectID = @ProjectID and fscode = @FSCode
			else if  @FieldName = 'ZLD4'
				update  Tbwlzl set HZZBZLD4 = ZLD4*@BadDebtRate*0.01 where  ProjectID = @ProjectID and fscode = @FSCode
			else if  @FieldName = 'ZLD5'
				update  Tbwlzl set HZZBZLD5 = ZLD5*@BadDebtRate*0.01 where  ProjectID = @ProjectID and fscode = @FSCode
			else if  @FieldName = 'ZLD6'
				update  Tbwlzl set HZZBZLD6 = ZLD6*@BadDebtRate*0.01 where  ProjectID = @ProjectID and fscode = @FSCode
			else if  @FieldName = 'ZLD7'
				update  Tbwlzl set HZZBZLD7 = ZLD7*@BadDebtRate*0.01 where  ProjectID = @ProjectID and fscode = @FSCode
			else if  @FieldName = 'ZLD8'
				update  Tbwlzl set HZZBZLD8 = ZLD8*@BadDebtRate*0.01 where  ProjectID = @ProjectID and fscode = @FSCode
			else if  @FieldName = 'ZLD9'
				update  Tbwlzl set HZZBZLD9 = ZLD9*@BadDebtRate*0.01 where  ProjectID = @ProjectID and fscode = @FSCode
			set @row_index = @row_index+1
		end
	 end
	 update Tbwlzl set impairmentamount = HZZBZLD1+HZZBZLD2+HZZBZLD3+HZZBZLD4+HZZBZLD5+HZZBZLD6+HZZBZLD7+HZZBZLD8+HZZBZLD9
	 where  ProjectID = @ProjectID and fscode = @FSCode

END




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'CalculateTBWlzl')
   BEGIN
       DROP  Procedure  CalculateTBWlzl
	END
GO
/*--------------------------------------------------*/
--账龄分析 V5
/*--------------------------------------------------*/
CREATE Procedure [dbo].[CalculateTBWlzl]
	@ProjectID	varchar(100),
	@FSCode varchar(255)
AS
SET NOCOUNT ON


declare @LastPID varchar(100);
declare @ClientID varchar(100);
declare @BeginDate datetime;
declare @EndDate datetime;
declare @FisttimeAudit int;
declare @max_define int;
declare @max_actual int;
declare @row_index int;
declare @FieldName varchar(50);
declare @AgeMinimum int;
declare @AgeCeiling int;
declare	@maxAge int;


--调整前期凭证ProjectCode字段
exec  UpdateVoucherProjectCode @projectid, @FSCode,-1;


--初始化往来单位信息

CREATE TABLE #temp0
	(
	ID INT,
	Code VARCHAR (100),
	UpperCode VARCHAR (100),
	Title VARCHAR (1000),
	Yefx int,
	IsMx INT,
	fsCode VARCHAR (100) COLLATE Chinese_PRC_CS_AS_KS_WS,
	AccountCode VARCHAR (100) COLLATE Chinese_PRC_CS_AS_KS_WS,
	AuxiliaryCode VARCHAR (255) COLLATE Chinese_PRC_CS_AS_KS_WS,
	UnChecked DECIMAL (20, 2),
	Aje DECIMAL (20, 2),
	Rje DECIMAL (20, 2),
	Checked DECIMAL (20, 2),
	AgeAnalysis INT,
	ZLD1 DECIMAL (20, 2),
	ZLD2 DECIMAL (20, 2),
	ZLD3 DECIMAL (20, 2),
	ZLD4 DECIMAL (20, 2),
	ZLD5 DECIMAL (20, 2),
	ZLD6 DECIMAL (20, 2),
	ZLD7 DECIMAL (20, 2),
	ZLD8 DECIMAL (20, 2),
	ZLD9 DECIMAL (20, 2),
	IsAgeEqual INT,
	significant INT,
	Impairmenttestmethod INT,
	impairmentamount DECIMAL (20, 2),
	BalanceAnalysis INT,
	HZZBZLD1 DECIMAL (20, 2),
	HZZBZLD2 DECIMAL (20, 2),
	HZZBZLD3 DECIMAL (20, 2),
	HZZBZLD4 DECIMAL (20, 2),
	HZZBZLD5 DECIMAL (20, 2),
	HZZBZLD6 DECIMAL (20, 2),
	HZZBZLD7 DECIMAL (20, 2),
	HZZBZLD8 DECIMAL (20, 2),
	HZZBZLD9 DECIMAL (20, 2),
	IsHzzbEqual INT,
	memo NVARCHAR (500)
	);

CREATE TABLE #temp1
	(
	AccountCode varchar(255) COLLATE Chinese_PRC_CS_AS_KS_WS,
	AuxiliaryCode varchar(255) COLLATE Chinese_PRC_CS_AS_KS_WS,
	checked decimal(20,2),
	yefx int
	);

insert into #temp0
	exec GetAgingAndBaddebt @ProjectID, @FSCode;

insert #temp1
	select distinct B.AccountCode, B.AuxiliaryCode, B.Checked * B.Yefx, B.Yefx
		from TBwlzl A, #temp0 B
		where A.FSCode = B.FSCode
			and A.AccountCode = B.AccountCode
			and isnull(A.AuxiliaryCode, '') = isnull(B.AuxiliaryCode, '')
			and B.Checked != 0
			and A.ProjectID = @ProjectID
			and A.FSCode = @FSCode
			and A.AgeAnalysis = 0;

CREATE CLUSTERED INDEX idx_ac1 ON #temp1(AccountCode, AuxiliaryCode);


--insert into temp1 select * from #temp1;


--初始化凭证库信息

CREATE TABLE #temp2
	(
	ProjectID varchar(100) COLLATE Chinese_PRC_CS_AS_KS_WS,
	VProjectID varchar(100) COLLATE Chinese_PRC_CS_AS_KS_WS,
	AccountCode varchar(255) COLLATE Chinese_PRC_CS_AS_KS_WS,
	ProjectCode varchar(255) COLLATE Chinese_PRC_CS_AS_KS_WS,
	Fsje decimal(20,2),
	AccountingAge int,
	TableID int,
	VoucherID varchar(50) COLLATE Chinese_PRC_CS_AS_KS_WS,
	[Date] datetime,
	Jfje decimal(20,2),
	Dfje decimal(20,2)
	);

select @ClientID = ClientID, @BeginDate = dateadd(year, -5, PeriodEnddate), @EndDate = PeriodEndDate, @FisttimeAudit = ContinueDate,
		@LastPID = case when(isnull(LastPeriodPID, '') = '') then isnull(UpperYearProjectID, '') else isnull(LastPeriodPID, '') end
	from NeweasV5.dbo.ProjectsInfo
	where ProjectID = @ProjectID;

--是否首次审计
if (@FisttimeAudit = 0)
begin
	insert #temp2
		select @ProjectID, ProjectID, AccountCode, isnull(ProjectCode,'') as ProjectCode, fsje, AccountingAge, 304, VoucherID, [Date], Jfje, Dfje
			from TBVoucher
			where ClientID = @ClientID
				and AccountCode in (select distinct AccountCode from TBwlzl where AccountCode is not null)
				and ([Date] >= @BeginDate and [Date] <= @EndDate)
			order by AccountCode, ProjectCode, AccountingAge, rank() over (ORDER BY DATE desc);

	insert #temp2
		select @ProjectID, ProjectID, AccountCode, isnull(ProjectCode,'') as ProjectCode, fsje, AccountingAge, 351, VoucherID, [Date], Jfje, Dfje
			from Qcwljzpz
			where ClientID = @ClientID
				and AccountCode in (select distinct AccountCode from TBwlzl where AccountCode is not null)
				and ([Date] >= @BeginDate and [Date] <= @EndDate)
			order by AccountCode, ProjectCode, AccountingAge, rank() over (ORDER BY DATE desc);
end
else
begin
	insert #temp2
		select @ProjectID, VProjectID, AccountCode, isnull(ProjectCode,'') as ProjectCode, fsje, AccountingAge, 351, VoucherID, [Date], Jfje, Dfje
			from qmyegc
			where ProjectID = @LastPID
			order by AccountCode, ProjectCode, AccountingAge, rank() over (ORDER BY DATE desc);

	insert #temp2
		select @ProjectID, ProjectID, AccountCode, isnull(ProjectCode,'') as ProjectCode, fsje, AccountingAge, 304, VoucherID, [Date], Jfje, Dfje
			from TBVoucher
			where ProjectID = @ProjectID
				and AccountCode in (select distinct AccountCode from TBwlzl where AccountCode is not null)
			order by AccountCode, ProjectCode, AccountingAge, rank() over (ORDER BY DATE desc);
end

--调整AccountingAge
update #temp2
	set AccountingAge = datediff(month, [Date], @EndDate);

CREATE CLUSTERED INDEX idx_ac ON #temp2(AccountCode, ProjectCode);


--insert into temp2 select * from #temp2;


--整理账龄段定义信息

--取凭证表中最大的账龄值
select @maxAge = max(AccountingAge) from #temp2;

if @maxAge is null
	set @maxAge = 0;

--初始化账龄段表
CREATE TABLE #temp3
	(
	[order] int,
	FieldName varchar(100),
	AgeMinimum int,
	AgeCeiling int
	);

insert #temp3
	select [order], FieldName, AgeMinimum, AgeCeiling
		from AccountingAgeOfFscode
		where ProjectID = @ProjectID
			and fscode = @FSCode
			and applyyesno = 1
			and ageminimum <= @maxAge
		order by [order];

--计算实际数据包含的有效账龄段总数
select @max_actual = count(*) from #temp3;

--计算账龄段表中定义的有效账龄段数
select @max_define = count(*) from AccountingAgeOfFscode
	where ProjectID = @ProjectID
		and FsCode = @FSCode
		and ApplyYesno = 1; 


--以下对表126中，把凭证数据实际有效的账龄段﹑账龄段定义表所定义的无效帐龄段都清空

set	@row_index = 1;
while (@row_index <= 9)
begin
	if((@row_index <= @max_actual) or (@row_index > @max_define))
	begin
		select @FieldName = FieldName from AccountingAgeOfFscode
			where ProjectID = @ProjectID
				and FsCode = @FSCode
				and [ORDER] = @row_index;

		if @FieldName = 'ZLD1'
			UPDATE Tbwlzl SET ZLD1 = 0
				where AgeAnalysis = 0
					and ProjectID = @ProjectID
					and fscode = @FSCode;
		else if @FieldName = 'ZLD2'
			UPDATE Tbwlzl SET ZLD2 = 0
				where AgeAnalysis = 0
					and ProjectID = @ProjectID
					and fscode = @FSCode;
		else if @FieldName = 'ZLD3'
			UPDATE Tbwlzl SET ZLD3 = 0
				where AgeAnalysis = 0
					and ProjectID = @ProjectID
					and fscode = @FSCode;
		else if @FieldName = 'ZLD4'
			UPDATE Tbwlzl SET ZLD4 = 0
				where AgeAnalysis = 0
					and ProjectID = @ProjectID
					and fscode = @FSCode;
		else if @FieldName = 'ZLD5'
			UPDATE Tbwlzl SET ZLD5 = 0
				where AgeAnalysis = 0
					and ProjectID = @ProjectID
					and fscode = @FSCode;
		else if @FieldName = 'ZLD6'
			UPDATE Tbwlzl SET ZLD6 = 0
				where AgeAnalysis = 0
					and ProjectID = @ProjectID
					and fscode = @FSCode;
		else if @FieldName = 'ZLD7'
			UPDATE Tbwlzl SET ZLD7 = 0
				where AgeAnalysis = 0
					and ProjectID = @ProjectID
					and fscode = @FSCode;
		else if @FieldName = 'ZLD8'
			UPDATE Tbwlzl SET ZLD8 = 0
				where AgeAnalysis = 0
					and ProjectID = @ProjectID
					and fscode = @FSCode;
		else if @FieldName = 'ZLD9'
			UPDATE Tbwlzl SET ZLD9 = 0
				where AgeAnalysis = 0
					and ProjectID = @ProjectID
					and fscode = @FSCode;
	end

	set	@row_index = @row_index + 1;
end


--如下针对每个账龄段，对往来单位、凭证做聚合操作，把每往来单位、每账龄段期间的所有与余额同方向的记录进行聚合，到表#temp4中

CREATE TABLE #temp4
	(
	AccountCode varchar(255) COLLATE Chinese_PRC_CS_AS_KS_WS,
	AuxiliaryCode varchar(255) COLLATE Chinese_PRC_CS_AS_KS_WS,
	checked decimal(20,2),
	idx int,
	zdlvalue decimal(20,2)
	);

set @row_index = 1;
while(@row_index <= @max_actual)
begin
	select @FieldName = FieldName, @AgeMinimum = AgeMinimum, @AgeCeiling = AgeCeiling
		from #temp3
		where [order] = @row_index;

	insert into #temp4
		select t1.AccountCode, t1.AuxiliaryCode, t1.checked, @row_index, isnull(sum(t2.fsje),0)
			from #temp1 t1, #temp2 t2
			where t1.AccountCode = t2.AccountCode
				and isnull(t1.AuxiliaryCode, '') = isnull(t2.ProjectCode, '')
				and t1.checked * t2.fsje > 0
				and t2.AccountingAge >= @AgeMinimum and t2.AccountingAge < @AgeCeiling
			group by t1.AccountCode, t1.AuxiliaryCode, t1.checked;

	set @row_index = @row_index + 1;
end


--insert into temp4 select * from #temp4;


--把#temp4表做对每往来单位的开窗操作，计算跨账龄段的累计值（当前账龄段之前的累计值：lastsumvalue）
CREATE TABLE #temp5
	(
	AccountCode varchar(255) COLLATE Chinese_PRC_CS_AS_KS_WS,
	AuxiliaryCode varchar(255) COLLATE Chinese_PRC_CS_AS_KS_WS,
	checked decimal(20,2),
	idx int,
	zdlvalue decimal(20,2),		--段内累计
	lastsumvalue decimal(20,2)	--跨段合计
	);

insert into #temp5
	select AccountCode, AuxiliaryCode, checked, idx, zdlvalue,
			isnull(sum(zdlvalue) over (partition by AccountCode, AuxiliaryCode order by idx rows between unbounded preceding and 1 preceding), 0)
		from #temp4;


--insert into temp51 select * from #temp5;


--根据账龄段计算规则，计算每个账龄段的有效值（zdlvalue）
update #temp5 set zdlvalue = 
			case
			when abs(lastsumvalue) > abs(checked)
				then 0
			when abs(zdlvalue + lastsumvalue) < abs(checked)
				then zdlvalue
			when abs(zdlvalue + lastsumvalue) >= abs(checked)
				then checked - lastsumvalue
			end;


--insert into temp52 select * from #temp5;


--把账龄分析的数据写入表126

set @row_index = 1;
while(@row_index <= @max_actual)
begin
	select @FieldName = FieldName from #temp3 where [order] = @row_index;

	begin
		if @FieldName = 'ZLD1'
			update Tbwlzl set ZLD1 = t1.zdlvalue
				from #temp5 t1, Tbwlzl t2
				where t2.ProjectID = @ProjectID
					and t2.fsCode = @FSCode
					and t1.accountcode = t2.accountcode
					and isnull(t1.AuxiliaryCode, '') = isnull(t2.AuxiliaryCode, '')
					and t1.idx = @row_index;
		else if @FieldName = 'ZLD2'
			update Tbwlzl set ZLD2 = t1.zdlvalue
				from #temp5 t1, Tbwlzl t2
				where t2.ProjectID = @ProjectID
					and t2.fsCode = @FSCode
					and t1.accountcode = t2.accountcode
					and isnull(t1.AuxiliaryCode, '') = isnull(t2.AuxiliaryCode, '')
					and t1.idx = @row_index;
		else if @FieldName = 'ZLD3'
			update Tbwlzl set ZLD3 = t1.zdlvalue
				from #temp5 t1, Tbwlzl t2
				where t2.ProjectID = @ProjectID
					and t2.fsCode = @FSCode
					and t1.accountcode = t2.accountcode
					and isnull(t1.AuxiliaryCode, '') = isnull(t2.AuxiliaryCode, '')
					and t1.idx = @row_index;
		else if @FieldName = 'ZLD4'
			update Tbwlzl set ZLD4 = t1.zdlvalue
				from #temp5 t1, Tbwlzl t2
				where t2.ProjectID = @ProjectID
					and t2.fsCode = @FSCode
					and t1.accountcode = t2.accountcode
					and isnull(t1.AuxiliaryCode, '') = isnull(t2.AuxiliaryCode, '')
					and t1.idx = @row_index;
		else if @FieldName = 'ZLD5'
			update Tbwlzl set ZLD5 = t1.zdlvalue
				from #temp5 t1, Tbwlzl t2
				where t2.ProjectID = @ProjectID
					and t2.fsCode = @FSCode
					and t1.accountcode = t2.accountcode
					and isnull(t1.AuxiliaryCode, '') = isnull(t2.AuxiliaryCode, '')
					and t1.idx = @row_index;
		else if @FieldName = 'ZLD6'
			update Tbwlzl set ZLD6 = t1.zdlvalue
				from #temp5 t1, Tbwlzl t2
				where t2.ProjectID = @ProjectID
					and t2.fsCode = @FSCode
					and t1.accountcode = t2.accountcode
					and isnull(t1.AuxiliaryCode, '') = isnull(t2.AuxiliaryCode, '')
					and t1.idx = @row_index;
		else if @FieldName = 'ZLD7'
			update Tbwlzl set ZLD7 = t1.zdlvalue
				from #temp5 t1, Tbwlzl t2
				where t2.ProjectID = @ProjectID
					and t2.fsCode = @FSCode
					and t1.accountcode = t2.accountcode
					and isnull(t1.AuxiliaryCode, '') = isnull(t2.AuxiliaryCode, '')
					and t1.idx = @row_index;
		else if @FieldName = 'ZLD8'
			update Tbwlzl set ZLD8 = t1.zdlvalue
				from #temp5 t1, Tbwlzl t2
				where t2.ProjectID = @ProjectID
					and t2.fsCode = @FSCode
					and t1.accountcode = t2.accountcode
					and isnull(t1.AuxiliaryCode, '') = isnull(t2.AuxiliaryCode, '')
					and t1.idx = @row_index;
		else if @FieldName = 'ZLD9'
			update Tbwlzl set ZLD9 = t1.zdlvalue
				from #temp5 t1, Tbwlzl t2
				where t2.ProjectID = @ProjectID
					and t2.fsCode = @FSCode
					and t1.accountcode = t2.accountcode
					and isnull(t1.AuxiliaryCode, '') = isnull(t2.AuxiliaryCode, '')
					and t1.idx = @row_index;
	end

	set @row_index = @row_index + 1;
end


--写入qmyegc（期末余额构成）表

CREATE TABLE #temp6
	(
	ProjectID varchar(100) COLLATE Chinese_PRC_CS_AS_KS_WS,
	VProjectID varchar(100) COLLATE Chinese_PRC_CS_AS_KS_WS,
	AccountCode varchar(255) COLLATE Chinese_PRC_CS_AS_KS_WS,
	AuxiliaryCode varchar(255) COLLATE Chinese_PRC_CS_AS_KS_WS,
	AccountingAge int,
	TableID int,
	VoucherID varchar(50),
	[Date] datetime,
	checked decimal(20,2),
	Fsje decimal(20,2),
	Jfje decimal(20,2),
	Dfje decimal(20,2)
	);

insert into #temp6
	select t2.ProjectID, t2.VProjectID, t1.AccountCode, t1.AuxiliaryCode, t2.AccountingAge, t2.TableID, t2.VoucherID, t2.[Date], t1.checked, t2.fsje, t2.Jfje, t2.Dfje
		from #temp1 t1, #temp2 t2
		where t2.AccountCode = t1.AccountCode
			and isnull(t2.ProjectCode, '') = isnull(t1.AuxiliaryCode, '')
--			and t2.fsje * t1.checked > 0
--			and ((t1.yefx = 1 and t2.jfje <> 0) or (t1.yefx = -1 and t2.dfje <> 0))
			and ( (t1.checked > 0 and t2.jfje <> 0 ) or (t1.checked < 0 and t2.dfje <> 0 ) )
			and t2.AccountingAge < @AgeCeiling;


--insert into temp6 select * from #temp6;


CREATE TABLE #temp7
	(
	ProjectID varchar(100) COLLATE Chinese_PRC_CS_AS_KS_WS,
	VProjectID varchar(100) COLLATE Chinese_PRC_CS_AS_KS_WS,
	AccountCode varchar(255) COLLATE Chinese_PRC_CS_AS_KS_WS,
	AuxiliaryCode varchar(255) COLLATE Chinese_PRC_CS_AS_KS_WS,
	AccountingAge int,
	TableID int,
	VoucherID varchar(50),
	[Date] datetime,
	checked decimal(20,2),
	Fsje decimal(20,2),
	FsjeSum decimal(20,2),
	rowid int,
	Jfje decimal(20,2),
	Dfje decimal(20,2)
	);

/*
insert into #temp7
	select ProjectID, VProjectID, AccountCode, AuxiliaryCode, AccountingAge, TableID, VoucherID, [Date], checked, Fsje,
			isnull(sum(Fsje) over (partition by AccountCode, AuxiliaryCode order by [Date] desc, TableID, VoucherID desc rows between unbounded preceding and 1 preceding), 0),
			row_number() over (partition by AccountCode, AuxiliaryCode order by [Date] desc, TableID, VoucherID desc),
			Jfje, Dfje
		from #temp6;
*/

insert into #temp7
	select ProjectID, VProjectID, AccountCode, AuxiliaryCode, AccountingAge, TableID, VoucherID, [Date], checked, Fsje,
			isnull(sum(Fsje) over (partition by AccountCode, AuxiliaryCode order by [Date] desc, TableID, VoucherID desc rows between unbounded preceding and 1 preceding), 0),
			row_number() over (partition by AccountCode, AuxiliaryCode order by [Date] desc, TableID, VoucherID desc),
			Jfje, Dfje
		from #temp6
		where Fsje * checked > 0;


--insert into temp7 select * from #temp7;


update #temp7 set checked = 0.00
	where abs(FsjeSum) >= abs(checked);

--防止重复回写
delete qmyegc from qmyegc tt, #temp1 t1, #temp2 t2
	where tt.ProjectID = t2.ProjectID
		and tt.VProjectID = t2.VProjectID
		and tt.VoucherID = t2.VoucherID
		and t2.AccountCode = t1.AccountCode
		and isnull(t2.ProjectCode, '') = isnull(t1.AuxiliaryCode, '');

insert into qmyegc
	select ProjectID, VProjectID, AccountCode, AuxiliaryCode, AccountingAge, TableID, VoucherID, [Date], Jfje, Dfje, Fsje
		from #temp7
		where checked <> 0


--置126表的处理标志AgeAnalysis
update Tbwlzl set AgeAnalysis = 1
	from #temp1 t1, Tbwlzl tt
	where tt.ProjectID = @ProjectID
		and tt.FSCode = @FSCode
		and t1.AccountCode = tt.accountcode
		and isnull(t1.AuxiliaryCode, '') = isnull(tt.AuxiliaryCode, '');


DROP TABLE #temp0;
DROP TABLE #temp1;
DROP TABLE #temp2;
DROP TABLE #temp3;
DROP TABLE #temp4;
DROP TABLE #temp5;
DROP TABLE #temp6;
DROP TABLE #temp7;
--DROP TABLE #temp8;



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'CheckSample')
   BEGIN
       DROP  Procedure  CheckSample
	END
GO

/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -检查是否需要抽样
  Created   : by jpeng
  Version   : 1.0.0
********************************************************************************/
create PROCEDURE [dbo].[CheckSample]
@pid	varchar(100),
@fscode	varchar(100),
@sampleType	int,	--0余额抽样(A类型), 1借方, 2贷方(BC类型)抽样 0: 取Acc/Aux的数据; 1: 取Voucher(JF); 2: 取Voucher(DF)
@info varchar(100)  output

AS

set @info =''

--确定重要性水平
declare @CurrentMateriality decimal(20,2)
select @CurrentMateriality = CurrentMateriality from PmPlanningMateriality where ProjectID = @pid
if @CurrentMateriality = 0
begin
	set @info = @info+'没有确定重要性水平'
	return
end

--确定分段审计时当期的时间范围
declare @prepid varchar(100)
declare @predate varchar(10)
declare @enddate varchar(10)

--获取原始样本总体
declare @totalvalue decimal(20,2)
select @totalvalue = case @sampleType
        when 0 then isnull(Unchecked, 0) * Yefx
		when 1 then case when @prepid = '' then isnull(Jfje, 0) else isnull(Jfje2, 0) end
		when 2 then case when @prepid = '' then isnull(Dfje, 0) else isnull(Dfje2, 0) end
		else 0 end
    from VIEW_TBFS 
	where ProjectID = @pid and  FSCODE = @fscode

--获取原始样本间距
declare  @j	decimal(20,2)
declare @tmp	table(name varchar,v1	decimal(20,2),v2	decimal(20,2))
insert	@tmp	
	exec dbo.SelectBasicData		@pid,@fscode
	if	exists(select 1 from @tmp )
		select	@j=v2 from @tmp
	else	
		set @j = 0

--获取比较的样本总体和样本间距（step=1）
declare @Overallsample decimal(20,2),@ValueofJ decimal(20,2)
SELECT @Overallsample=Overallsample ,@ValueofJ=ValueofJ  FROM PMvalueofJ 
WHERE ProjectID=@pid AND FSCODE=@fscode AND Testobject=@sampleType and Step = 1

--比较样本总体和样本间距
if (@totalvalue !=@Overallsample)
	set @info =  @info+ '样本总体发生变化,'
if (@j != @ValueofJ)
	set  @info =  @info+ '样本间距发生变化,'
if (@info != '')
begin
	set  @info =  @info+ '请重新抽样'
	return
end

select @prepid=CurrentyearPID	from	NeweasV5.dbo.projectsinfo	where		projectid=@pid
if(@prepid <> '')
    select @predate=convert(char(10),PeriodEndDate,111)	from	NeweasV5.dbo.projectsinfo	where		projectid=@prepid
else
    set @predate = ''
select @enddate=convert(char(10),PeriodEndDate,111)	from	NeweasV5.dbo.projectsinfo	where		projectid=@pid

--获取是否存在错报
declare @maxstep int,@Overallsample1 decimal(20,2)
declare @temptable table(ID int)
----获取最大步数
SELECT top 1 @Overallsample1 = Overallsample ,@maxstep=step  FROM PMvalueofJ WHERE ProjectID=@pid AND FSCODE=@fscode AND Testobject=@sampleType 
order by step desc
--已是最大步数，不提示存在错报
if (@maxstep = 5  and @Overallsample1 != 0)
return
if(@sampleType = 0)
begin
	insert into @temptable
	select 1 from TBDetailExtra a
	join TBDetail b
	on a.ID = b.ID 
	 where a.projectid = @pid  and fscode like @fscode+'%' 
	and  stepofsample = @maxstep and erroryesno  = 1  and SampleSelectedYesNo = 1
	
end
else if (@sampleType = 1)
begin 
	insert into @temptable 
	select 1
	from TBVoucher 
	where ProjectID = @pid
	and Jfje != 0	
	and ([Date] > @predate and [Date] <= @enddate)
	and AccountCode in (select AccountCode from TBDetail where ProjectID = @pid and fscode like @fscode+'%' and IsAux = 0 and SourceFSCode = '')
	and Stepofsample = @maxstep and ErrorYesNo = 1 and SampleSelectedYesNo = 1
end
else if (@sampleType = 2)
begin 
	insert into @temptable 
	select 1
	from TBVoucher 
	where ProjectID = @pid
	and Dfje != 0	
	and ([Date] > @predate and [Date] <= @enddate)
	and AccountCode in (select AccountCode from TBDetail where ProjectID = @pid and fscode like @fscode+'%' and IsAux = 0 and SourceFSCode = '')
	and Stepofsample = @maxstep and ErrorYesNo = 1 and SampleSelectedYesNo = 1
end

if exists(select 1 from @temptable) or (@maxstep > 1 and @Overallsample1 = 0)
	set  @info =  @info+ '发现错报，请根据分步抽样法补充下一步统计抽样'






GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'CreateFinTable')
   BEGIN
       DROP  Procedure  CreateFinTable
	END
GO
--exec dbo.CreateFinTable

CREATE PROCEDURE [dbo].[CreateFinTable]

AS

BEGIN

	IF object_id('KjKmPZB') IS NOT NULL
		DROP TABLE KjKmPZB

	CREATE TABLE [dbo].[KjKmPZB](
		[pid]	[varchar](1000) NULL,
		[Kmdm] [varchar](1000) NULL,
		[TypeCode] [varchar](1000) NULL,
		[ProjectCode]	[varchar](1000) NULL
	) ON [PRIMARY]

	IF object_id('t_fzye') IS NOT NULL
		DROP TABLE t_fzye

	CREATE TABLE [dbo].[t_fzye](
		[pid]	[varchar](1000) NULL,
		[Kmdm] [varchar](1000) NULL,
		[FDetailID] [varchar](1000) NULL,
		[ProjectCode]	[varchar](1000) NULL,
		[Yefx] [varchar](1000) NULL,
		[Ncye] [float] NULL,
		[Ncsl] [float] NULL
	) ON [PRIMARY]

	IF object_id('MainDefine') IS NOT NULL
		DROP TABLE MainDefine

	CREATE TABLE MainDefine (
		pid	varchar(100)
		,DefineType VARCHAR(255)	
		)

	IF object_id('PROJECTTYPE') IS NOT NULL
		DROP TABLE PROJECTTYPE

	CREATE TABLE PROJECTTYPE (
		pid	varchar(100)
		,ID INT IDENTITY(1, 1)
		,TYPECODE VARCHAR(255)	
		,TYPENAME VARCHAR(1000)	
		)

	IF object_id('PROJECT') IS NOT NULL
		DROP TABLE PROJECT

	CREATE TABLE PROJECT (
		pid	varchar(100)
		,TYPECODE VARCHAR(255)	 NOT NULL
		,PROJECTCODE VARCHAR(255)		NOT NULL
		,PROJECTNAME VARCHAR(255)		null
		,UPPERCODE VARCHAR(255)	 NULL
		,JB INT
		,ISMX INT
		)

	IF object_id('ACCOUNT') IS NOT NULL
		DROP TABLE ACCOUNT

	CREATE TABLE ACCOUNT (
		pid	varchar(100)
		,[AccountCode] [varchar](255)  NOT NULL
		,[UpperCode]	[varchar](255)   NULL
		,[AccountName] [varchar](1000) 	NULL
		,[Attribute] [int] NULL
		,[Jd] [int] DEFAULT(1)
		,[Hsxms] [int] NOT NULL	DEFAULT(0)
		,[TypeCode] [varchar](255) 	NULL
		,[Jb] [int] DEFAULT(1)
		,[IsMx]	int
		,[Ncye]	 [decimal](20, 2) DEFAULT((0))
		,[Qqccgz]	 [decimal](20, 2) DEFAULT((0))
		,[Jfje]	 [decimal](20, 2) DEFAULT((0))
		,[Dfje]	 [decimal](20, 2) DEFAULT((0))
		,[Ncsl]	 int DEFAULT((0))
		)

	IF object_id('tempJzpz') IS NOT NULL
		DROP TABLE tempJzpz

	CREATE TABLE tempJzpz(
	[IncNo] [varchar] (50) null,
	[Date] [datetime]	null,
	[Period] [int] not null,
	[Pzlx] [varchar] (255)  null,
	[Pzh] [varchar] (255)  null,
	[Djh] [int] null,
	[AccountCode] [varchar] (255)  null,
	[ProjectCode]	varchar(255)   null,
	[Zy] [varchar] (255)  null,
	[Jfje] [decimal] (20,2) null,
	[Dfje] [decimal] (20,2) null,
	[Jfsl] [decimal] (20,4) null,
	[Dfsl] [decimal] (20,4) null,
	[ZDR] [varchar] (255)  null,
	[dfkm] [varchar] (200)  null,
	[VoucherID]	int	IDENTITY(1,1) not null,
	[FLLX]	int	default((1)) NULL,
	
) ON [PRIMARY] 


	IF object_id('QhJzpz') IS NOT NULL
		DROP TABLE QhJzpz

	CREATE TABLE QhJzpz(
	[pid]	[varchar] (100) null,
	[IncNo] [varchar] (50) null,
	[Date] [datetime]	null,
	[Period] [int] not null,
	[Pzlx] [varchar] (255)  null,
	[Pzh] [varchar] (255)  null,
	[Djh] [int] null,
	[AccountCode] [varchar] (255)  null,
	[ProjectCode]	varchar(255)   null,
	[Zy] [varchar] (255)  null,
	[Jfje] [decimal] (20,2) null,
	[Dfje] [decimal] (20,2) null,
	[Jfsl] [decimal] (20,4) null,
	[Dfsl] [decimal] (20,4) null,
	[ZDR] [varchar] (255)  null,
	[dfkm] [varchar] (200)  null,
	[VoucherID]	int	IDENTITY(1,1) not null,
	[FLLX]	int	default((1)) NULL,
	
) ON [PRIMARY] 

IF object_id('accountperiod') IS NOT NULL
		DROP TABLE accountperiod

 CREATE TABLE accountperiod(
	[pid]	varchar(100) not null,
	[accountperiod] [int] NOT NULL,
	[Period] [int] NOT NULL,
	[StartDate] [datetime] NOT NULL,
	[EndDate] [datetime] NOT NULL,
	[DateType] [int] NOT NULL,
	[currentyearPID] [nvarchar](50)  NULL,	
 CONSTRAINT [PK_accountperiod] PRIMARY KEY CLUSTERED 
(
	[accountperiod] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]

IF object_id('Qcwljzpz') IS NOT NULL
		DROP TABLE Qcwljzpz

CREATE TABLE Qcwljzpz(
	[pid]	[varchar] (50)  not null,
	[IncNo] [varchar] (50)  not null,
	[Date] [datetime]	null,
	[Period] [int] not null,
	[Pzlx] [varchar] (255)  null,
	[Pzh] [varchar] (255)  null,
	[Djh] [int] null,
	[AccountCode] [varchar] (255)  null,
	[ProjectCode]	[varchar]	(255)  null,
	[Zy] [varchar] (255)  null,
	[Jfje] [decimal] (20,2) null,
	[Dfje] [decimal] (20,2) null,
	[Jfsl] [decimal] (20,4) null,
	[Dfsl] [decimal] (20,4) null,
	[ZDR] [varchar] (255)  null,
	[dfkm] [varchar] (200)  null,
	[AccountingAge]	[int]	null,
	[qmyegc]	[int]	default(0),
	[Fsje]	[decimal]	(20,2) null,
	[Jd]	[int]	null,
	[VoucherID]	[int]	IDENTITY(1,1)  not null,
	
) ON [PRIMARY]


END






GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'CreateTableCognizance')
   BEGIN
       DROP  Procedure  CreateTableCognizance
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2010 EAS (Beijing)
  Customer  : 
  Project   : 由表10创建原表45
  Created   : 20170706 by jpeng
  Updated   : 
********************************************************************************/
create Procedure [dbo].[CreateTableCognizance]
AS
create table #t1
(
cognizancecode varchar(50),
cognizancefor50000 varchar(50),
cognizancefor60000 varchar(50),
cognizancefor70000 varchar(50),
cognizancefor80000 varchar(50)
)
insert into #t1 values('A','--','--','--','--')
insert into #t1 values('B','--','--','--','--')
insert into #t1 values('C','--','--','--','--')
insert into #t1 values('D','--','--','--','--')
insert into #t1 values('E','--','--','--','--')
insert into #t1 values('F','--','--','--','--')
insert into #t1 values('G','--','--','--','--')
update   a
set a.cognizancefor50000 =b.Cognizance
from #t1 a
join AuditGoalandCognizance b
on a.cognizancecode = b.auditgoalcode
where b.classcode = '50000'

update   a
set a.cognizancefor60000 =b.Cognizance
from #t1 a
join AuditGoalandCognizance b
on a.cognizancecode = b.auditgoalcode
where b.classcode = '60000'

update   a
set a.cognizancefor70000 =b.Cognizance
from #t1 a
join AuditGoalandCognizance b
on a.cognizancecode = b.auditgoalcode
where b.classcode = '70000'

update   a
set a.cognizancefor80000 =b.Cognizance
from #t1 a
join AuditGoalandCognizance b
on a.cognizancecode = b.auditgoalcode
where b.classcode = '80000'
select cognizancecode
		,cognizancefor50000
		,cognizancefor60000
		,cognizancefor70000
		,cognizancefor80000  from #t1
drop table #t1







GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DeleteAccountingPolicies_batch')
   BEGIN
       DROP  Procedure  DeleteAccountingPolicies_batch
	END
GO

/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : 
  Project   : EAS -删除 被审计单位选择和运用的会计政策
  Created   : Dengll PM 2009/07/24
  Updated   : 2009/11/28  by dengll
  Updated	: 2012/04/25  by Huasheng
  Updated	: 2013/12/04  by dengll
  Version   : 1.0.1
********************************************************************************/
CREATE Procedure [dbo].[DeleteAccountingPolicies_batch]
	@PID	VARCHAR(100),
	@ID INT,
	@POLICIESID varchar(max)
AS

delete AccountingPolicies	where	ProjectID = @PID and ID=@ID







GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DeleteAccountingPoliciesChange_Batch')
   BEGIN
       DROP  Procedure  DeleteAccountingPoliciesChange_Batch
	END
GO

/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : 
  Project   : EAS -删除 被审计单位选择和运用的会计政策
  Updated	:	2009/11/09 更新为没有变更
  Created   : Dengll PM 2009/07/24
  Updated   : 2009/11/09	by dengll	
			edit code	delete '+@AccountingPoliciesChangename+'    where	id='+convert(nvarchar,@id)+'
	Updated	: DENGLL 2011/08/23
  Version   : 1.0.0
********************************************************************************/

create Procedure [dbo].[DeleteAccountingPoliciesChange_Batch]
	@PID	varchar(100),
	@ID int,
	@UpperID int,
	@PoliciesID int
AS

		update AccountingPolicies    set
			ChangeDate=null,
			ChangeReasons=null,
			ChangeResults=null,
			ChangeEvaluation=null,
			change=null
		where	id=@ID and ProjectID = @PID








GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DeleteCutoffTest')
   BEGIN
       DROP  Procedure  DeleteCutoffTest
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : 获取.OS 从账到单的数据
  Created   : 
********************************************************************************/

CREATE Procedure [dbo].DeleteCutoffTest
  @VoucherID           varchar(50) ,
  @ProjectID    varchar(100)      
AS
  DELETE FROM Cutofftest WHERE VoucherID = @VoucherID -- varchar(50)
    AND ProjectID =@ProjectID -- varchar(100)
      



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DeletePercentSample')
   BEGIN
       DROP  Procedure  DeletePercentSample
	END
GO



/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : 删除比例抽样样本标记
  Created   : 20180802 hhy
  Version   : 1.0
********************************************************************************/
CREATE Procedure [dbo].[DeletePercentSample]
@projectid	varchar(100),
@fscode	varchar(100),
@sampleType	int		--0	余额抽样(A类型),1借方,2贷方(BC类型)抽样
AS

SET	NOCOUNT	ON

begin

if (@sampleType = 0)	-- (@sampleType = 0)
begin
	update a 
		set a.SampleSelectedType = 0
    from TBdetailExtra a
    join tbdetail b
    on a.id=b.id
		where a.ProjectID = @projectid
			and  b.FSCode  in (select fscode from GetAllChildFSInfo(@projectid, @fscode))
			and a.SampleSelectedType = 2;
end
else	-- (@sampleType != 0)
begin
	update TBVoucher
		set SampleSelectedType = 0
		from
			(
				select a.AccountCode as AccCode,
						'' as AuxCode
					from VIEW_TBDetail a, TBDetailExtra b
					where a.id=b.id
						and a.ProjectID = @projectid
						and a.FSCode in (select fscode from GetAllChildFSInfo(@projectid, @fscode))
						and a.IsMx = 1
						and a.isaux=0
						and a.AccountCode not in 
							(select AccountCode from VIEW_TBDetail where ProjectID = @projectid and isaux=1)
				union
				select a.AccountCode as AccCode,
						a.AuxiliaryCode as AuxCode
					from VIEW_TBDetail a, TBDetailExtra b
					where a.id=b.id
						and a.isaux=1
						and a.ProjectID = @projectid
						and a.FSCode in (select fscode from GetAllChildFSInfo(@projectid, @fscode))
			)t
		where ProjectID = @projectid
			and AccountCode = t.AccCode
			and ProjectCode = t.AuxCode
			and ((@sampleType = 1 and Jfje != 0) or (@sampleType = 2 and Dfje != 0))
			and SampleSelectedType = 2;
end

end







GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASAnnouceDelete')
   BEGIN
       DROP  Procedure  DSEASAnnouceDelete
	END
GO

/********************************************************************************
  Copyright : Easy Audit System
  Customer  : HuaPu
  Project   : Easy Audit System 
  Created   : 董晓庆  日期：2009.6.9
  Descrip	: 删除审计声明
  Update	:
  Version	: 1.0.0
  *********************************************************************************/
create Procedure [dbo].[DSEASAnnouceDelete]
	@PID nvarchar(50),
	@ID int
AS

delete from Announce where ID=@ID and ProjectID = @PID










GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASAnnouceInsert')
   BEGIN
       DROP  Procedure  DSEASAnnouceInsert
	END
GO
/********************************************************************************
  Copyright : Easy Audit System
  Customer  : HuaPu
  Project   : Easy Audit System 
  Created   : 董晓庆  日期：2009.6.9
  Descrip	: 插入 审计声明
  Update	:
  Version	: 1.0.0
  *********************************************************************************/
create Procedure [dbo].[DSEASAnnouceInsert]
	@PID nvarchar(50),
	@StruCode nvarchar(50),
	@AnnounceContent text,
	@RoleName nvarchar(50),
	@LoginName nvarchar(50),
	@SignOffTime datetime,
	@SignOffSequence int
AS

INSERT INTO  Announce
(ProjectID,StruCode,AnnounceContent, RoleName, LoginName, SignOffTime, SignOffSequence)
VALUES (@PID,@StruCode,@AnnounceContent,@RoleName,@LoginName,@SignOffTime,@SignOffSequence)
	









GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASAnnouceUpdate')
   BEGIN
       DROP  Procedure  DSEASAnnouceUpdate
	END
GO
/********************************************************************************
  Copyright : Easy Audit System
  Customer  : HuaPu
  Project   : Easy Audit System 
  Created   : 董晓庆  日期：2009.6.9
  Descrip	: 更新 审计声明
  Update	:
  Version	: 1.0.0
  *********************************************************************************/
create Procedure [dbo].[DSEASAnnouceUpdate]
	@PID nvarchar(50),
	@ID int,
	@AnnounceContent text,
	@LoginName nvarchar(50),
	@SignOffTime datetime,
	@SignOffSequence int
AS

UPDATE  Announce
SET SignOffTime = @SignOffTime, SignOffSequence = @SignOffSequence,AnnounceContent=@AnnounceContent,LoginName=@LoginName
where ID=@ID










GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASBusinessCycleAccountsDelete')
   BEGIN
       DROP  Procedure  DSEASBusinessCycleAccountsDelete
	END
GO

create Procedure [dbo].[DSEASBusinessCycleAccountsDelete]
	@PID nvarchar(50),
	@BusinessCycleID nvarchar(50),
	@AccountID nvarchar(50)
AS

if	exists(select	1 from BCycleAndAccounts where ProjectID = @PID and BusinessCycleID = @BusinessCycleID and AccountID=@AccountID)
delete from BCycleAndAccounts where ProjectID = @PID and BusinessCycleID = @BusinessCycleID and AccountID=@AccountID










GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASBusinessCycleAccountsInsert')
   BEGIN
       DROP  Procedure  DSEASBusinessCycleAccountsInsert
	END
GO
/********************************************************************************
  Copyright : Easy Audit System(beijing)
  Customer  : HuaPu
  Project   : EAS -  插入　业务循环相关的账户
  Created   :　董晓庆　2009.7.6
  Updated	:	20121204 by dengll
*********************************************************************************/
create Procedure [dbo].[DSEASBusinessCycleAccountsInsert]
	@PID nvarchar(50),
	@BusinessCycleID nvarchar(50),
	@AccountID nvarchar(50),
	@AccountName nvarchar(50),
	@Memo text,
	@SelectedYesNO  bit   

AS
	
if	not exists(select 1 from BCycleAndAccounts	where	BusinessCycleID=@BusinessCycleID	and	AccountID=@AccountID and ProjectID = @PID)
INSERT INTO  BCycleAndAccounts(ProjectID,BusinessCycleID, AccountID, AccountName, Memo, SelectedYesNO)
VALUES (@PID, @BusinessCycleID,@AccountID,@AccountName,@Memo,@SelectedYesNO)   
  
						









GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASBusinessCycleAccountsUpdate')
   BEGIN
       DROP  Procedure  DSEASBusinessCycleAccountsUpdate
	END
GO

/********************************************************************************
  Copyright : Easy Audit System(beijing)
  Customer  : HuaPu
  Project   : EAS -  更新　业务循环相关的账户
  Created   :　董晓庆　2009.7.6
  Updated	:	
*********************************************************************************/

create Procedure [dbo].[DSEASBusinessCycleAccountsUpdate]
	@PID nvarchar(50),
	@BusinessCycleID nvarchar(50),
	@AccountID nvarchar(50),
	@Memo text,
	@SelectedYesNO  bit   

AS
                    
Update BCycleAndAccounts set Memo=@Memo, SelectedYesNO=@SelectedYesNO	 
where ProjectID = @PID and BusinessCycleID = @BusinessCycleID and AccountID = @AccountID
	







GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASBussinessCycleDelete')
   BEGIN
       DROP  Procedure  DSEASBussinessCycleDelete
	END
GO

create Procedure [dbo].[DSEASBussinessCycleDelete]
	@PID nvarchar(50),
	@BusinessCycleID nvarchar(50)
	
AS

if	exists(select	1 from BusinessCycle where ProjectID = @PID and BusinessCycleID = @BusinessCycleID )
delete from BusinessCycle where ProjectID = @PID and BusinessCycleID = @BusinessCycleID 










GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASBussinessCycleInsert')
   BEGIN
       DROP  Procedure  DSEASBussinessCycleInsert
	END
GO
create PROCEDURE [dbo].[DSEASBussinessCycleInsert]
	/*
	存储过程名称：DSEASBussinessCycleUpdate
	描述：更新业务循环表
	作者：董晓庆
	日期：2009.7.6
	参数：	
	*/
	@PID nvarchar(50),
	@BusinessCycleID nvarchar(50),
	@Memo text,
	@FileCodeFor15000 nvarchar(50),  
	@FileCodeFor40000 nvarchar(50), 
	@TotalInitialConslusion int

AS
                      
insert  BusinessCycle (ProjectID,BusinessCycleID,Memo,FileCodeFor15000,FileCodeFor40000,TotalInitialConslusion)
values(@PID, @BusinessCycleID,@Memo,@FileCodeFor15000,@FileCodeFor40000,@TotalInitialConslusion)

	









GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASBussinessCycleUpdate')
   BEGIN
       DROP  Procedure  DSEASBussinessCycleUpdate
	END
GO
CREATE PROCEDURE [dbo].[DSEASBussinessCycleUpdate] 
	/*
	存储过程名称：DSEASBussinessCycleUpdate
	描述：更新业务循环表
	作者：董晓庆
	日期：2009.7.6
	参数：	
	*/
	@PID nvarchar(50),
	@BusinessCycleID nvarchar(50),
	@Memo text,
	@FileCodeFor15000 nvarchar(50),  
	@FileCodeFor40000 nvarchar(50), 
	@LastExecutedYear int,
	@ExecutedYesNo bit,
	@NextExecutedYear int,
	@TotalInitialConslusion int

AS
                   
Update  BusinessCycle
SET Memo = @Memo, FileCodeFor15000 = @FileCodeFor15000, 
FileCodeFor40000 = @FileCodeFor40000, LastExecutedYear = @LastExecutedYear, 
ExecutedYesNo = @ExecutedYesNo, 
NextExecutedYear = @NextExecutedYear,
TotalInitialConslusion=@TotalInitialConslusion
WHERE (ProjectID = @PID and BusinessCycleID = @BusinessCycleID)













GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASClientMaintainProposedDelete')
   BEGIN
       DROP  Procedure  DSEASClientMaintainProposedDelete
	END
GO
/********************************************************************************
  Copyright : Easy Audit System
  Customer  : HuaPu
  Project   : Easy Audit System 
  Descrip	: 删除 合伙人对下一年度审计业务保持的建议
  Created   : 董晓庆  日期：2009.7.24
  Update	:
  Version	: 1.0.0
  *********************************************************************************/
CREATE Procedure [dbo].[DSEASClientMaintainProposedDelete]

	@PID nvarchar(50),
	@ID int
AS
	
delete from ClientMaintainProposed where ID=@ID and ProjectID = @PID










GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASClientMaintainProposedInsert')
   BEGIN
       DROP  Procedure  DSEASClientMaintainProposedInsert
	END
GO
/********************************************************************************
  Copyright : Easy Audit System
  Customer  : HuaPu
  Project   : Easy Audit System 
  Descrip	: 插入 合伙人对下一年度审计业务保持的建议
  Created   : 董晓庆  日期：2009.7.24
  Update	:
  Version	: 1.0.0
  *********************************************************************************/
CREATE Procedure [dbo].[DSEASClientMaintainProposedInsert]

	@PID nvarchar(50),
	@ID int, 
	@UpperID int,
	@ConsiderElement text,
	@Existence bit,
	@IsTitle bit

AS
INSERT INTO  ClientMaintainProposed(ProjectID,ID, UpperID, ConsiderElement, Existence, IsTitle)
VALUES (@PID,@ID,@UpperID,@ConsiderElement,@Existence,@IsTitle)








GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASClientMaintainProposedUpdate')
   BEGIN
       DROP  Procedure  DSEASClientMaintainProposedUpdate
	END
GO
/********************************************************************************
  Copyright : Easy Audit System
  Customer  : HuaPu
  Project   : Easy Audit System 
  Descrip	: 更新 合伙人对下一年度审计业务保持的建议
  Created   : 董晓庆  日期：2009.7.24
  Update	:
  Version	: 1.0.0
  *********************************************************************************/
create Procedure [dbo].[DSEASClientMaintainProposedUpdate]

	@PID nvarchar(50),
	@ID int, 
	@ConsiderElement text,
	@Existence bit,
	@IsTitle bit
	

AS
Update ClientMaintainProposed
SET ConsiderElement =@ConsiderElement, Existence = @Existence, IsTitle = @IsTitle
where ID=@ID and ProjectID = @PID
	









GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASFraudR1RisksDelete')
   BEGIN
       DROP  Procedure  DSEASFraudR1RisksDelete
	END
GO

/********************************************************************************
  Copyright : HuaPu
  Customer  : HuaPu
  Project   : Easy Audit System - FraudRisks管理
  Created   : dxq, CTM, 30.07.2008
  Update	:	2010/06/28 by len 
  ver:1.0.0.1
*********************************************************************************/
CREATE Procedure [dbo].[DSEASFraudR1RisksDelete]
	@PID nvarchar(50),
	@ID int,
	@RiskLevelType int
AS
	
if	EXISTS (select	1	from	InherentRisk where ID=Convert(nvarchar,@ID)  and ProjectID=@PID)
begin
delete from InherentRisk where ID=Convert(nvarchar,@ID) and ProjectID=@PID
END	









GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASFraudR1RisksInsert')
   BEGIN
       DROP  Procedure  DSEASFraudR1RisksInsert
	END
GO
/********************************************************************************
  Copyright : Easy Audit System
  Customer  : HuaPu
  Project   : Risk管理--插入InherentRisk
  Created   : dxq, CTM, 2008/7/30
  Update	:
--------------------------------------------------------------------------------*/
CREATE Procedure [dbo].[DSEASFraudR1RisksInsert]
	@PID nvarchar(50),
	 @ID int,
	 @RiskLevelID int,
	 @RiskLevelType int,
	 @RiskYesNO bit,
	 @RiskSource varchar(50),
	 @RiskDescription text,
	 @ImportantRiskYesNo bit,
	 @SpecialRiskYesNo bit,
	 @ReportSeverityYesNo bit,
	 @FinalcialRiskYesNo bit,
	 @Solution text,
	 @Countermeasure text,
	 @Referencelist text
AS


IF not EXISTS(select 1 from InherentRisk	where ID=@ID  and ProjectID = @PID)	
begin
INSERT INTO  InherentRisk
(RiskLevelID,RiskLevelType, RiskYesNO,RiskSource, RiskDescription, ImportantRiskYesNo, 
ReportSeverityYesNo,SpecialRiskYesNo,FinalcialRiskYesNo, Solution,
Countermeasure,Referencelist,ProjectID,ID)
VALUES (@RiskLevelID,@RiskLevelType,@RiskYesNO,@RiskSource,@RiskDescription,@ImportantRiskYesNo,
@ReportSeverityYesNo,@SpecialRiskYesNo,@FinalcialRiskYesNo,@Solution,@Countermeasure,@Referencelist,@PID,@ID)
end
else
begin
Update InherentRisk 
SET RiskLevelID = @RiskLevelID, RiskLevelType =@RiskLevelType, RiskYesNO = @RiskYesNO, 
RiskSource = @RiskSource,RiskDescription = @RiskDescription, 
ImportantRiskYesNo = @ImportantRiskYesNo, 
SpecialRiskYesNo = @SpecialRiskYesNo,
ReportSeverityYesNo = @ReportSeverityYesNo,
FinalcialRiskYesNo=@FinalcialRiskYesNo, Solution = @Solution,
Countermeasure=@Countermeasure,Referencelist=@Referencelist	
where ID=@ID and  ProjectID = @PID
end









GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASFraudR1RisksUpdate')
   BEGIN
       DROP  Procedure  DSEASFraudR1RisksUpdate
	END
GO

/********************************************************************************
  Copyright : Easy Audit System
  Customer  : HuaPu
  Project   : FraudRisks管理
  Created   : dxq, CTM, 2008/7/30
  Update	:
*********************************************************************************/
CREATE Procedure [dbo].[DSEASFraudR1RisksUpdate]
	 @PID nvarchar(50),
	 @ID int,
	 @RiskLevelID int,
	 @RiskYesNO bit,
	 @RiskSource varchar(50),
	 @RiskDescription text,
	 @ImportantRiskYesNo bit,
	 @SpecialRiskYesNo bit,
	 @ReportSeverityYesNo bit,
	 @FinalcialRiskYesNo bit,
	 @Solution text,
	 @Countermeasure text,
	 @Referencelist text,
	 @Results text,
	 @Conclusion1 text,
	 @Conclusion2 text
AS


IF EXISTS(select 1 from InherentRisk	where ID=@ID  and ProjectID = @PID)	
Update InherentRisk 
SET RiskLevelID = @RiskLevelID, RiskYesNO = @RiskYesNO, 
RiskDescription = @RiskDescription, 
ImportantRiskYesNo = @ImportantRiskYesNo, 
SpecialRiskYesNo = @SpecialRiskYesNo,
ReportSeverityYesNo = @ReportSeverityYesNo,
FinalcialRiskYesNo=@FinalcialRiskYesNo, Solution = @Solution,
Countermeasure=@Countermeasure,Referencelist=@Referencelist,
Results=@Results ,Conclusion1=@Conclusion1 , Conclusion2 =@Conclusion2 			
where ID=@ID and  ProjectID = @PID







GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASFraudRiskAccountDelete')
   BEGIN
       DROP  Procedure  DSEASFraudRiskAccountDelete
	END
GO
/********************************************************************************
  Copyright : Easy Audit System
  Customer  : HuaPu
  Project   : Easy Audit System - FraudRisks管理
  Created   : dxq, CTM, 2008/7/30
  Update	:
*********************************************************************************/
create Procedure [dbo].[DSEASFraudRiskAccountDelete]
	@PID nvarchar(50),
	@ID int
AS
delete from InherentRiskAccount where ID=@ID and projectID = @PID







GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASGetAllBussinessCycleSelect')
   BEGIN
       DROP  Procedure  DSEASGetAllBussinessCycleSelect
	END
GO
/********************************************************************************
  Copyright : Easy Audit System
  Customer  : HuaPu
  Project   : 获取总体审计计划相关信息
  Created   : 董晓庆 	日期：2009.7.6
  Update	: 2011/07/16 by len
  
--------------------------------------------------------------------------------*/
CREATE Procedure [dbo].[DSEASGetAllBussinessCycleSelect]
	@PID nvarchar(50)
AS


select ID
,RiskType
,RiskText
,RiskValue
,Riskfactor 
from RiskModel
where ProjectID = @PID
		
select ID
,FSCode
,CognizanceCode
,RiskType
,RiskValue
,LastRiskValue
,BCycleCode 
from Riskfactor
where ProjectID = @PID
		
select 1 as ID, ClassCode, AuditGoalCode as CognizanceCode, AuditGoalName, Cognizance as CognizanceValue 
from AuditGoalandCognizance
where ProjectID = @PID
		
select FSCode as accountcode
,FsName as accountname
,null as classCode
from TBFS 
where [IsMx]=1 AND [FSType]<3
and ProjectID = @PID
		
select 1 as ID
,BusinessCycleID
,BusinessCycleName
,Memo
,FileCodeFor15000
,FileCodeFor40000
,LastExecutedYear
,ExecutedYesNo
,NextExecutedYear
,TotalInitialConslusion 
from BusinessCycle
where ProjectID = @PID

select 1 as ID, BusinessCycleID, AccountID, AccountName, Memo, SelectedYesNO 
from BCycleAndAccounts
where ProjectID = @PID
	
exec CreateTableCognizance









GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASGetAllR1RiskDataSetSelect')
   BEGIN
       DROP  Procedure  DSEASGetAllR1RiskDataSetSelect
	END
GO
/********************************************************************************
  Copyright : HuaPu
  Customer  : HuaPu
  Project   : Easy Audit System - 获取InherentRisk
  Created   : dxq, CTM, 29.05.2008
  Updated	:	2010/07/12 by len
  Update	: remove where RiskYesNO=1
*********************************************************************************/

CREATE Procedure [dbo].[DSEASGetAllR1RiskDataSetSelect]
@PID nvarchar(50)
AS

select * from InherentRisk where ProjectID = @PID;
select * from InherentRiskAccount where ProjectID = @PID order by AccountID;
select * from AuditGoalandCognizance where ProjectID = @PID;









GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASGetBussinessCycleByCycleIDSelect')
   BEGIN
       DROP  Procedure  DSEASGetBussinessCycleByCycleIDSelect
	END
GO
/********************************************************************************
	存储过程名称：DSEASGetBussinessCycleByCycleIDSelect
	描述：获取业务循环信息
	作者：董晓庆
	日期：2009.7.6
	Updated: Huasehng by 2012.08.01
	Updated: 20121207 by dengll
	参数：
********************************************************************************/
create Procedure [dbo].[DSEASGetBussinessCycleByCycleIDSelect]
	@PID nvarchar(50),
	@BusinessCycleID nvarchar(50)
AS

select * from RiskModel where ProjectID=@PID;
select * from Riskfactor 
where	FSCode in (select AccountID from BCycleAndAccounts where BusinessCycleID=@BusinessCycleID) and  ProjectID=@PID;
select 1 as ID, ClassCode, AuditGoalCode as CognizanceCode, AuditGoalName, Cognizance as CognizanceValue 
from AuditGoalandCognizance
where ProjectID=@PID;
select fscode as AccountCode,fsname as AccountName from TBFS where TBType=2 and  ProjectID=@PID;
select * from BusinessCycle where BusinessCycleID=@BusinessCycleID and  ProjectID=@PID;
select 1 as ID, BusinessCycleID, AccountID, AccountName, Memo, SelectedYesNO from BCycleAndAccounts 
where BusinessCycleID=@BusinessCycleID and  ProjectID=@PID;
exec CreateTableCognizance;







GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASGetCognizanceInfoDataSet')
   BEGIN
       DROP  Procedure  DSEASGetCognizanceInfoDataSet
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2010 EAS (Beijing)
  Customer  : 
  Project   : 获取报表项目及相关认定
  Created   : 20170706 by jpeng
  Updated   : 
********************************************************************************/
CREATE Procedure [dbo].[DSEASGetCognizanceInfoDataSet]
	@PID nvarchar(50)
AS

SELECT	FSCODE AS	ACCOUNTCODE,FSNAME AS ACCOUNTNAME 
FROM  TBFS
WHERE ISMX=1	AND	FSTYPE<3 and projectid = @PID
	
SELECT 
--ID,
CLASSCODE,
AUDITGOALCODE,
AUDITGOALNAME,
COGNIZANCE 
FROM AuditGoalandCognizance 
where projectid = @PID

exec CreateTableCognizance



	









GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASGetEnvironmentR1RiskDataSetSelect')
   BEGIN
       DROP  Procedure  DSEASGetEnvironmentR1RiskDataSetSelect
	END
GO
/********************************************************************************
  Copyright : HuaPu
  Customer  : HuaPu
  Project   : Easy Audit System - 环境相关风险对应的文档
  Created   : dxq, CTM, 15.09.2009
  Update	:2011/07/17 by eln
--------------------------------------------------------------------------------*/
create Procedure [dbo].[DSEASGetEnvironmentR1RiskDataSetSelect]
	@PID nvarchar(50) --项目编号
	
AS
	
select ID
,RiskLevelID
,RiskLevelType
,RiskSource
,RiskYesNO
,RiskDescription
,ImportantRiskYesNo
,SpecialRiskYesNo
,ReportSeverityYesNo
,Solution
,Countermeasure
,case when Referencelist is null then '' else (select distinct isnull(strucodeText,'')+'$'+isnull(strucode,'')+';'   
from FileScriptList where StruCode is not null and charindex(';'+StruCode+';',';'+cast(Referencelist as varchar(max))+';' )>0 FOR XML PATH(''))   end  as Referencelist 
,FinalcialRiskYesNo
,Results
,Conclusion1
,Conclusion2 
from  InherentRisk
where ProjectID = @PID
				
select ID
,RiskID
,RiskSource
,AccountID
,AccountName
,CognizanceCode
,AuditMethod
,ControlTestProgram
,MaterialityTestProgramYesNo
,DetailTestYesNo
,Memo
,CGoalID
,Referencelist1
,Referencelist2
,Referencelist3
,TotalConclusion
,Countermeasure 
from InherentRiskAccount 
where ProjectID = @PID
order by AccountID
				
select '1' as ID
,ClassCode
,AuditGoalCode
,AuditGoalName
,Cognizance 
from AuditGoalandCognizance
where ProjectID = @PID



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASGetFileStructByQuerySelect')
   BEGIN
       DROP  Procedure  DSEASGetFileStructByQuerySelect
	END
GO
/********************************************************************************
  Copyright : EAS
  Customer  : HuaPu
  Project   : Easy Audit System - 文件管理
  Created   : 20170706 by jpeng
  Updated	: 
*********************************************************************************/
create Procedure [dbo].[DSEASGetFileStructByQuerySelect]
	@PID varchar(50),
	@QueryString nvarchar(max)
AS
declare @sql nvarchar(max)

IF(@QueryString	is null or @QueryString='')
BEGIN
set @sql='select StruCode
		,StruName
		,UpperStruCode
		,StruType
		,StruDescription
		,StruCriticalYesNO
		,StruTarget
		,StruPreparer
		,StruReviewer
		,StruMasterORCarbon
		,FlowExcutedState
		,OpenNotes
		,ClosedNotes
		,StruSize
		,StruCreateTime
		,StruLastEditTime
		,FlowID
		,FlowExcutedTime
		,isnull(AppScopeProject,0) as AppScopeProject
		,isnull(NonAppScopeProject,0) as NonAppScopeProject
		,isnull(AppCombineProject,0) as AppCombineProject,Fscode,BCycleCode from FileScriptList where projectid='''+@pid+''''
EXEC(@sql);	
END
ELSE 
begin
set @sql= 
	'select StruCode
	,StruName
	,UpperStruCode
	,StruType
	,StruDescription
	,StruCriticalYesNO
	,StruTarget
	,StruPreparer
	,StruReviewer
	,StruMasterORCarbon
	,FlowExcutedState
	,(SELECT COUNT(StruCode) FROM FileReviews WHERE StruCode=T1.StruCode AND OPENCLOSE=1 AND ISDELETE=0)+T1.OpenNotes OpenNotes
	,(SELECT COUNT(StruCode) FROM FileReviews WHERE StruCode=T1.StruCode AND OPENCLOSE=0 AND  ISDELETE=0)+T1.ClosedNotes ClosedNotes
	,StruSize
	,StruCreateTime
	,StruLastEditTime
	,FlowID
	,FlowExcutedTime
	,isnull(AppScopeProject,0) as AppScopeProject
	,isnull(NonAppScopeProject,0) as NonAppScopeProject
	,isnull(AppCombineProject,0) as AppCombineProject,Fscode,BCycleCode from FileScriptList	T1 where '+@QueryString+' and projectid='''+@pid+''' order by StruCode'
	exec(@sql);
end










GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASGetFraudR1RiskDataSetSelect')
   BEGIN
       DROP  Procedure  DSEASGetFraudR1RiskDataSetSelect
	END
GO

/********************************************************************************
  Copyright : EAS
  Customer  : HuaPu
  Project   : Easy Audit System - 舞弊风险对应的文档
  Created   : 20170706 by jpeng
  Updated	:	
--------------------------------------------------------------------------------*/
CREATE Procedure [dbo].[DSEASGetFraudR1RiskDataSetSelect]
@PID nvarchar(50)  --项目编号
AS


select ProjectID
,ID
,RiskLevelID
,RiskLevelType
,RiskSource
,RiskYesNO
,RiskDescription
,ImportantRiskYesNo
,SpecialRiskYesNo
,ReportSeverityYesNo
,Solution
,Countermeasure
,case when Referencelist is null then '' else (select distinct isnull(strucodeText,'')+'$'+isnull(strucode,'')+';'   
from FileScriptList where StruCode is not null and charindex(';'+StruCode+';',';'+cast(Referencelist as varchar(max))+';' )>0 FOR XML PATH(''))   end  as Referencelist 
,FinalcialRiskYesNo
,Results
,Conclusion1
,Conclusion2 from InherentRisk	where RiskLevelType=0 and projectID=@PID;
select * from InherentRiskAccount		
where	RiskID in (select	RiskLevelID	from	InherentRisk	where RiskLevelType=0 and projectID=@PID) 
and projectID=@PID
order by AccountID;
select * from AuditGoalandCognizance where projectID=@PID;





GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASGetFraudRiskDataSetSelect')
   BEGIN
       DROP  Procedure  DSEASGetFraudRiskDataSetSelect
	END
GO

 /********************************************************************************
  Database  : EAS
  Copyright :
  Customer  : Huapu 
  Project   : 舞弊风险获取 
  Created   : 20170705 by jpeng
  Updated   : 
  Version   : 
********************************************************************************/
CREATE PROCEDURE [dbo].[DSEASGetFraudRiskDataSetSelect] 
@pid varchar(255)
AS

select ID,UpperID,Riskcase,RiskID,RiskYesNO, ImportantRiskYesNo,isnull(Reference,'') as Reference 
from   ERisksLevel
where  ProjectID = @pid


	










GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASGetFraudRiskRelatedAuditProgramsSelect')
   BEGIN
       DROP  Procedure  DSEASGetFraudRiskRelatedAuditProgramsSelect
	END
GO

/********************************************************************************
  Copyright : Easy Audit System 
  Customer  : HuaPu
  Project   : 获取针对舞弊风险的实质性审计程序
  Created   : 20170706 by jpeng
  Update	: 
--------------------------------------------------------------------------------*/
CREATE Procedure [dbo].[DSEASGetFraudRiskRelatedAuditProgramsSelect]
	@PID nvarchar(50)
	
AS

--select * from AuditProgramLibrary where AuditProgramCode like'%09_' and ProjectID = @PID

select a.ProjectID ,b.FSCodeOrCycleCode as AccountCode,a.AuditProgramCode ,a.AuditProgramName ,a.AuditProgramGuideline ,b.Category ,b.ApplyYesNo,b.SelectedYesNo  
from AuditProgramLibrary a 
join AuditProgramConfig b
on a.ProjectID = b.ProjectID 
and a.AuditProgramCode = b.AuditProgramCode 
and a.ProjectID = @PID
and b.Category = 3--应对舞弊程序
    

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASGetMisEvaluationDataSetSelect')
   BEGIN
       DROP  Procedure  DSEASGetMisEvaluationDataSetSelect
	END
GO
/********************************************************************************
  Copyright : Easy Audit System （Beijing）
  Customer  : HuaPu
  Project   :  错报评估管理
  Created   : dxq, CTM, 11.12.2008
  Update	: by jpeng 2011/10/27
--------------------------------------------------------------------------------*/
CREATE PROCEDURE DSEASGetMisEvaluationDataSetSelect

	@PID nvarchar(50)
AS

	SELECT AdjustedNO, AdjustedType, ReferenceList, AdjustedDetails, TaxYesNo, 
			EvaluationType=Case AdjustedType
							when 'AJE' then 1
							when 'RJE' then 1
							when 'EE' then 2
							when 'PE' then 3
						end,
			0 as Capital,0 as Debt,0 as UnDivideProfit,0 as OtherAccount,0 as Profit,0 as Total,
			0 as DebtAfter,0 as UnDivideProfitAfter,0 as OtherAccountAfter,0 as ProfitAfter
	FROM DBO.TBAdjustedItems WHERE ProjectID=@pid AND AdjustedyesNo=0
		
	SELECT a.ID,a.AdjustedNO,a.FSCode,a.JD,a.fsje as RMB
	FROM DBO.TBAdjustedSubItems a WHERE a.ProjectID=@pid AND 
	 exists (select b.AdjustedNO from DBO.TBAdjustedItems b WHERE b.ProjectID=@pid AND b.AdjustedyesNo=0 and a.AdjustedNO=b.AdjustedNO)
	
	select * from (
	select i.ID,i.errorID,i.ErrorType
	,(select fsname from FSCodeConfig t where t.projectid=e.projectid and t.fscode=e.fscode) as title
	,i.fscode,i.JD,i.JE
	from ErrorRelationItem i left join EvaluationError e on i.ProjectID = e.ProjectID and i.ErrorID=e.ID
	where i.ProjectID=@PID and i.ErrorType=0 and e.isuse = 1
	union
	select i.ID,i.errorID,i.ErrorType
	,(select fsname from FSCodeConfig t where t.projectid=e.projectid and t.fscode=e.fscode) as title
	,i.fscode,i.JD,i.JE
	from ErrorRelationItem i left join ProjectError e on i.ProjectID = e.ProjectID and i.ErrorID=e.ID
	where i.ProjectID=@PID and i.ErrorType=1 and e.isuse = 1) t order by t.errorID


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASGetRiskAccountByQueryingSelect')
   BEGIN
       DROP  Procedure  DSEASGetRiskAccountByQueryingSelect
	END
GO
/********************************************************************************
  Copyright : 青松审信
  Customer  : HuaPu
  Project   : Easy Audit System - 风险管理
  Created   : dxq, CTM, 15.07.2009
  Update	: 2010/11/29 by len
  Version	: 1.0.1
*********************************************************************************/
CREATE PROCEDURE [dbo].[DSEASGetRiskAccountByQueryingSelect]
    @PID NVARCHAR(50) ,
    @Querystring NVARCHAR(100)
AS 
   
	 
    exec ('select ID
    ,RiskLevelID
    ,RiskLevelType
    ,RiskSource
    ,RiskYesNO
    ,RiskDescription
    ,ImportantRiskYesNo
    ,SpecialRiskYesNo
    ,ReportSeverityYesNo
    ,Solution
    ,Countermeasure
    ,Referencelist
    ,FinalcialRiskYesNo
    ,Results
    ,Conclusion1
    ,Conclusion2 from InherentRisk  where ProjectID = '''+@PID+'''
	and ID in (select RiskID from InherentRiskAccount where '+@Querystring+' and ProjectID = '''+@PID+''' )') ;
    
    exec ('select ID
    ,RiskID
    ,RiskSource
    ,AccountID
    ,AccountName
    ,CognizanceCode
    ,AuditMethod
    ,ControlTestProgram
    ,MaterialityTestProgramYesNo
    ,DetailTestYesNo
    ,Memo
    ,CGoalID
    ,Referencelist1
    ,Referencelist2
    ,Referencelist3
    ,TotalConclusion
    ,Countermeasure from InherentRiskAccount where '+@Querystring+' and ProjectID = '''+@PID+''' order by AccountID ') ;






GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASGetRiskfactorSelect')
   BEGIN
       DROP  Procedure  DSEASGetRiskfactorSelect
	END
GO
/********************************************************************************
  Copyright : QingSong
  Customer  : HuaPu
  Project   : Easy Audit System
  Created   : dxq, CTM, 2009/7/19
  Descrip	: 获取风险模型、R值
  Update	:	20121129 by dengll
  Version	: 1.0.1
*********************************************************************************/
create Procedure [dbo].[DSEASGetRiskfactorSelect]
	@PID nvarchar(500),
	@accountCode	varchar(1000)
AS
        select [ID] ,
        [RiskType] ,
        [RiskText] ,
        [RiskValue] ,
        [Riskfactor] from RiskModel where ProjectID = @PID
 
        
        select [ID] ,
		fscode as	[AccountID] ,
        [CognizanceCode] ,
        [RiskType] ,
        [RiskValue] ,
        [LastRiskValue] from Riskfactor
	where	ProjectID = @PID and fscode=@accountCode






GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASGetRiskModelSelect')
   BEGIN
       DROP  Procedure  DSEASGetRiskModelSelect
	END
GO
/********************************************************************************
  Copyright : QingSong
  Customer  : HuaPu
  Project   : Easy Audit System
  Created   : dxq, CTM, 01.07.2009
  Descrip	: 获取风险定义模型
  Update	:	2010/11/29	by len
  Version	: 1.0.1
*********************************************************************************/
CREATE PROCEDURE [dbo].[DSEASGetRiskModelSelect] @PID NVARCHAR(100)
AS 
select ID
			,RiskType
			,RiskText
			,RiskValue
			,Riskfactor from RiskModel where ProjectID = @PID






GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASGetRiskReponseSelect')
   BEGIN
       DROP  Procedure  DSEASGetRiskReponseSelect
	END
GO
/********************************************************************************
  Copyright : Easy Audit System
  Customer  : HuaPu
  Project   : 获取财务报表层次舞弊风险的应对措施
  Created   : dxq, CTM, 2009/8/18
  Update	: 
  
--------------------------------------------------------------------------------*/
create Procedure [dbo].[DSEASGetRiskReponseSelect]
	@PID nvarchar(50)
AS


	--舞弊风险应对措施
select * from RiskResponse where ProjectID = @PID






GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASGetSAFDocAnnouceDataSetSelect')
   BEGIN
       DROP  Procedure  DSEASGetSAFDocAnnouceDataSetSelect
	END
GO
/********************************************************************************
  Copyright :  Easy Audit System
  Customer  : HuaPu
  Project   : SAF文档声明
  Created   : dxq, CTM, 2009.1.3
  Update	:
  Update	: 
  
--------------------------------------------------------------------------------*/
CREATE Procedure [dbo].[DSEASGetSAFDocAnnouceDataSetSelect]
	@PID nvarchar(50),
	@StruCode nvarchar(50)
AS
select ID
,StruCode
,AnnounceContent
,RoleName
,LoginName
,SignOffTime
,SignOffSequence from Announce where StruCode=@StruCode and ProjectID = @PID









GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASGetSampleTest')
   BEGIN
       DROP  Procedure  DSEASGetSampleTest
	END
GO
/********************************************************************************
  Copyright : HuaPu
  Customer  : HuaPu
  Project   : Easy Audit System - 获取样本测试数据
  Created   : by pwg 2017/10/16
*********************************************************************************/
CREATE Procedure [dbo].[DSEASGetSampleTest]
(
	@Pid nvarchar(50),
	@FSCode nvarchar(50),
	@sampleType	varchar(10)='A',	--A 余额测试,B发生额测试 又分借贷方测试,1 表示借,2表示贷
	@notIncludeHand int=0  --不包含选取特定项目，如果该参数=1时，获取样本不包括选取特项目（借推断错报使用）
)
AS
DECLARE @sql nvarchar(MAX),@JD INT

--区分借贷方
if(CHARINDEX(';',@sampleType)>-1 and 
	right(@sampleType,1)='1')
	set	@JD=1;
else if(CHARINDEX(	';',@sampleType)>-1 and 
	right(@sampleType,1)='2')---1
	set	@JD=-1;

create table	#VOUCHER	(accountcode	varchar(max) collate Chinese_PRC_CS_AS_KS_WS,accountname	varchar(max),fscode	varchar(max) collate Chinese_PRC_CS_AS_KS_WS,date	varchar(50),
	pzlx	varchar(max),pzh	varchar(max),pzlxpzh	varchar(max),jd	varchar(2),fsje	decimal(20,2),je	decimal(20,2),
	zy	varchar(max),sampleselectedyesno	int,voucherid	varchar(100) collate Chinese_PRC_CS_AS_KS_WS,incno	varchar(max) collate Chinese_PRC_CS_AS_KS_WS,stepofsample	int,erroryesno	int,adjustedno	varchar(max),dfkm varchar(1000))

DECLARE @QuesID nvarchar(50),@tmpfscode	varchar(max),@tmpstruCode	varchar(max),@Ques031	INT=0,@Ques033	INT=0
--获取当前报表项目所有子报表
DECLARE	@FSTMP	TABLE(FSCODE	VARCHAR(MAX) collate Chinese_PRC_CS_AS_KS_WS)
INSERT	@FSTMP select fscode from dbo.GetAllChildFSInfo(@pid,@fscode)

SELECT @Ques031 = SelectedYesNo FROM DBO.AccountQues where ProjectID=@pid and AccountCode=@FSCode and QuesID in('Q031')
if(@notIncludeHand=0) begin
	SELECT @Ques033 = SelectedYesNo FROM DBO.AccountQues where ProjectID=@pid and AccountCode=@FSCode and QuesID in('Q033')
end

--获取全部项目的所有accountcode及子集
declare	@tmp	table(code	varchar(max) collate Chinese_PRC_CS_AS_KS_WS,isa	int,isb int)
if  (@sampleType='A') BEGIN
  insert	@tmp
select	t2.accountcode,dbo.ifnull(t1.SelectSampleMethod),dbo.ifnull(t1.crSelectSampleMethod)+dbo.ifnull(t1.drSelectSampleMethod)	
	from DBO.TBDetailExtra t1 left join dbo.TBDetail t2 on t1.ID = t2.ID  and IsAux = 0 and SourceFSCode = ''
	where t1.projectid=@pid and	t2.fscode	in	(select	fscode	from	@fstmp)	
	and t1.materialityProgram=0 and	t1.SelectSampleMethod=3	and t2.DataType <> 3
end
--借方
if(CHARINDEX(';',@sampleType)>-1 and 
	right(@sampleType,1)='1')
	BEGIN
  insert	@tmp
select	t2.accountcode,dbo.ifnull(t1.SelectSampleMethod),dbo.ifnull(t1.crSelectSampleMethod)+dbo.ifnull(t1.drSelectSampleMethod)	
	from DBO.TBDetailExtra t1 left join dbo.TBDetail t2 on t1.ID = t2.ID and IsAux = 0 and SourceFSCode = ''
	where t1.projectid=@pid and	t2.fscode	in	(select	fscode	from	@fstmp)	
	and t1.drmaterialityProgram=0 and 	t1.drSelectSampleMethod=3 and t2.DataType <> 3
  end
  --贷方
 if(CHARINDEX(	';',@sampleType)>-1 and 
	right(@sampleType,1)='2')---1
	BEGIN
  insert	@tmp
select	t2.accountcode,dbo.ifnull(t1.SelectSampleMethod),dbo.ifnull(t1.crSelectSampleMethod)+dbo.ifnull(t1.drSelectSampleMethod)	
	from DBO.TBDetailExtra t1 left join dbo.TBDetail t2 on t1.ID = t2.ID and IsAux = 0 and SourceFSCode = ''
	where t1.projectid=@pid and	t2.fscode	in	(select	fscode	from	@fstmp)	
	and	 t1.crmaterialityProgram=0 and t1.crSelectSampleMethod=3	and t2.DataType <> 3
  end

insert	@tmp
select	accountcode,dbo.ifnull(SelectSampleMethod),dbo.ifnull(crSelectSampleMethod)+dbo.ifnull(drSelectSampleMethod)	
	from	DBO.TBDetailExtra	t1	
	join TBDetail t3
	on t1.ID = t3.ID and IsAux = 0 and SourceFSCode = '' and t3.DataType <> 3
	where t1.projectID=@pid and	exists(select	1	from	@tmp t2	
		where	t3.accountcode!=t2.code	and	left(t3.accountcode,len(t2.code))=t2.code)



if(@sampleType='A') BEGIN
	declare @yefx int
	select @yefx=yefx from dbo.fscodeconfig where projectid=@pid and fscode=@fscode

	DECLARE	@accx	table(accountcode1	varchar(max) collate Chinese_PRC_CS_AS_KS_WS,AuxiliaryCode	varchar(max) collate Chinese_PRC_CS_AS_KS_WS,AccountCode	varchar(max) collate Chinese_PRC_CS_AS_KS_WS,FSCode	varchar(max) collate Chinese_PRC_CS_AS_KS_WS,
	AccountName	varchar(max),je	decimal(20,2),SampleSelectedYesNo	int,StepofSample	int,ErrorYesNo	int,adjustedNo	varchar(max))

	--余额测试数据获取方法
	insert	@accx
	
	 SELECT
		t2.AccountCode as AccountCode1,
		t2.AuxiliaryCode,
		case when isaux=0 and SourceFSCode = '' then  t2.AccountCode else  t2.AccountCode + '_' +t2.AuxiliaryCode end as AccountCode,
		t2.FSCode,
		t2.AccAuxName as AccountName,
		t2.Yefx*t2.Unchecked as je,
		1	as	SampleSelectedYesNo,
		t1.StepofSample,
		t1.ErrorYesNo,
		t1.adjustedNo		
	FROM DBO.TBDetailExtra t1
	 left join DBO.VIEW_TBDetail t2 
	 on t1.ID  =t2.ID and t2.DataType <> 3 	
	where t1.projectID=@pid and
	t2.fscode IN (SELECT	FSCODE FROM	@FSTMP) and (
		(ISNULL(t1.materialityProgram,0) * t1.SampleSelectedYesNo*@Ques031=1)	or	
		(ISNULL(t1.materialityProgram,0) * t1.SAMPLESELECTEDTYPE*@Ques033>=1)
		)	

	UNION  
	SELECT
		t2.AccountCode as AccountCode1,
		t2.AuxiliaryCode,
		case when isaux=0 and SourceFSCode = '' then  t2.AccountCode else  t2.AccountCode + '_' +t2.AuxiliaryCode end as AccountCode,
		t2.FSCode,
		t2.AccAuxName as accountName,
		t2.Yefx*t2.Unchecked as je,
		1	as	SampleSelectedYesNo,
		t1.StepofSample,
		t1.ErrorYesNo,
		t1.adjustedNo
	FROM DBO.TBDetailExtra  t1 left join DBO.VIEW_TBDetail t2
		on t1.ID  =t2.ID and t2.DataType <> 3 	
	where t1.projectID=@pid and	exists(select	1	from	@tmp	where	t2.accountcode=code	and isa=1)

	delete @ACCX where accountcode1=accountcode and auxiliarycode = '' 
		and accountcode in (select accountcode1 from @ACCX where accountcode1<>accountcode)
	SELECT	*	FROM	@ACCX

END ELSE BEGIN

	--发生额测试数据获取方法
	insert	#VOUCHER
	SELECT
			t.AccountCode,
			t.AccAuxName,
			t.FSCode,
			CONVERT(varchar(10),c.Date,21) as Date,
			c.Pzlx,
			c.pzh,
			isnull(c.Pzlx,'') + isnull(c.Pzh,'') as PzlxPzh,
			case when c.Jd=-1 then '贷' else '借' END AS Jd,
			c.Fsje,
			c.Jd * c.Fsje as je,
			c.zy,
			1	as	SampleSelectedYesNo,
			c.VoucherID,
			c.IncNo,
			c.StepofSample,
			c.ErrorYesNo,
			'' as adjustedNo,
			c.dfkm 
	FROM
	(SELECT t2.AccountCode,t2.AccAuxName,t2.FSCode,t1.crmaterialityProgram,t1.drmaterialityProgram
	FROM DBO.TBDetailExtra t1 LEFT JOIN DBO.VIEW_TBDetail t2 ON t1.ID = t2.ID and IsAux = 0 and SourceFSCode = ''
		WHERE T1.projectID=@pid) t		
	INNER JOIN DBO.TBVoucher c ON c.ProjectID=@pid and t.AccountCode=c.AccountCode AND JD=@JD
	and ((case when c.Jd=-1 
				then ISNULL(t.crmaterialityProgram,0) 
					else ISNULL(t.drmaterialityProgram,0) END) * c.SampleSelectedYesNo*@Ques031=1	OR	((case when c.Jd=-1 
				then ISNULL(t.crmaterialityProgram,0) 
					else ISNULL(t.drmaterialityProgram,0) END)*c.sampleselectedtype*@Ques033>=1))
	where t.FSCode	IN (SELECT	FSCODE FROM	@FSTMP) order by c.VoucherID,c.IncNo

	--获取全部项目的样本数据
	if exists(select 1 from @tmp where isb>0)begin
		insert	#VOUCHER
		SELECT
				b.AccountCode,
				b.AccAuxName,
				b.FSCode,
				CONVERT(varchar(10),c.Date,21) as Date,
				c.Pzlx,
				c.pzh,
				isnull(c.Pzlx,'') + isnull(c.Pzh,'') as PzlxPzh,
				case when c.Jd=-1 then '贷' else '借' END AS Jd,
				c.Fsje,
				c.Jd * c.Fsje as je,
				c.zy,
				1	as	SampleSelectedYesNo,
				c.VoucherID,
				c.IncNo,
				c.StepofSample,
				c.ErrorYesNo,
				b.adjustedNo,
				c.dfkm
			FROM DBO.TBVoucher c 
			 JOIN ( select te.AdjustedNo , t.* from  DBO.TBDetailExtra te inner join  DBO.TBDetail  t on  te.ID = t.ID and IsAux = 0 and SourceFSCode = '' and te.projectid=@Pid) b		ON b.AccountCode=c.AccountCode 
			where	c.fllx!=2 and	
					 b.accountcode	IN (SELECT	code FROM	 @tmp	where isb>0) and	not exists(select	1	from	#VOUCHER	where	voucherid=c.voucherid)
					 AND JD=@JD
			order by c.VoucherID,c.IncNo
	end

	insert	#VOUCHER
	SELECT DISTINCT
			a.AccountCode,
			c.AccountName,
			a.FSCode,
	null as Date,
			null	as	Pzlx,
			null	as	pzh,
			null as PzlxPzh,
			null AS Jd,
			null	as	Fsje,
			null as je,
			null	as	zy,
			null	as	SampleSelectedYesNo,
			null	as	VoucherID,
			null	as	IncNo,
			null	as	StepofSample,
			null	as	ErrorYesNo,
			null	as	adjustedNo,
			null
		FROM DBO.TBDetailExtra b
		join TBDetail a
		on a.ID = b.ID  and IsAux = 0 and SourceFSCode = ''
		Inner JOIN	#VOUCHER c	ON a.AccountCode=c.AccountCode 
END	

--对于是bc类抽样的需要把dfkm转换成对应的科目名称 by dengll151124
	if	exists(select 1 from #voucher)begin
		declare	@tmpDFKM table(dfkmcode varchar(1000))
		insert @tmpDFKM
		select distinct dfkm from #voucher where dfkm is not null and dfkm!=space(1)
		DECLARE @dont VARCHAR(1)=''''
		while exists(select 1 from @tmpDFKM)begin
			declare	@dfkm varchar(1000),@initDfkm varchar(1000)
			select @dfkm=dfkmcode from @tmpdfkm
			set @initDfkm=@dfkm
			set @dfkm=@dont+@dfkm+@dont
			SET	@dfkm=replace(@dfkm,',',@dont+','+@dont)
			set @sql='
			update #voucher set dfkm=(
				SELECT TOP 1
					STUFF((SELECT ''/''+AccAuxName FROM dbo.TBDetail t 
				WHERE projectID='''+@pid+''' and IsAux = 0 and SourceFSCode = '''' and AccountCode IN ('+@dfkm+') FOR XML PATH('''')), 1, 1, '''')
					FROM  dbo.TBDetail WHERE projectid='''+@pid+''' and IsAux = 0 and SourceFSCode = '''' and  AccountCode IN ('+@dfkm+'))
					where dfkm='''+@initDfkm+''''
			exec(@sql)
			delete @tmpDFKM where dfkmcode=@initDfkm
		end
		update #VOUCHER set fscode='' where date is null
		SELECT	distinct *	FROM	#VOUCHER where len(fscode)=0 or date is not null ORDER BY accountcode, [date]
	end

	drop table #voucher
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASGetTBTableByProjectIDSelect')
   BEGIN
       DROP  Procedure  DSEASGetTBTableByProjectIDSelect
	END
GO
/********************************************************************************
  Copyright : Easy Audit System
  Customer  : HuaPu
  Project   : 审计文档中关联的报表项目（如表0.fscode），FSType AS TBType是比较严重的逻辑错误，fstype tbtype完全是两个不同概念。
  Created   : 20170706 by jpeng
  Update	: 
  Version   : 1.0.0
--------------------------------------------------------------------------------*/
create Procedure [dbo].[DSEASGetTBTableByProjectIDSelect]
	@PID nvarchar(50),
	@Condition nvarchar(max),
	@ExistByPack bit
	
AS

DECLARE @sql NVARCHAR(max)
	
DECLARE @PackID varchar(100),@existyesno bit
SELECT @PackID=packid,@existyesno=0 from neweasv5.dbo.projectsinfo where projectid=@PID
	
IF(@existyesno=0) SET @PackID=@PID
	
IF(@ExistByPack=1)
BEGIN
SET @sql='select FSCode AS FSLinesCode  , FsName  AS FSLinesName , FSType AS TBType, 
ISNULL(Unchecked,0) as UncheckedData, ISNULL((AjeJF-AjeDF),0) as AJE, 
ISNULL(Adjusted,0) as Adjusted,ISNULL((RjeJF-RjeDF),0) as RJE, 
ISNULL(Checked,0) as CheckedData, 
0 as PY1, 0 as PY2, 0 as PY3,
0 as PY4, 0 as PY5, 
TBGrouping,ISNULL(jfje,0) as jfje,ISNULL(dfje,0) as dfje,
ISNULL(qcye,0) as qcye,ISNULL(Sqqmye,0) as Sqqmye,
ISNULL(Qqccgz,0) as Qqccgz ,ISNULL(Qmye,0) as Qmye,
IsMx,
Kmsx ,yefx from view_tbfs where '+@Condition+'
and projectid='''+@PID+'''
AND FSCODE IN (SELECT fscode FROM FSCODECONFIG WHERE ISUSE=1)
order by FSLinesCode'
	
END
ELSE 
BEGIN
SET @sql='select FSCode AS FSLinesCode  , FsName  AS FSLinesName , FSType AS TBType, 
ISNULL(Unchecked,0) as UncheckedData, ISNULL((AjeJF-AjeDF),0) as AJE, 
ISNULL(Adjusted,0) as Adjusted,ISNULL((RjeJF-RjeDF),0) as RJE, 
ISNULL(Checked,0) as CheckedData, 
0 as PY1, 0 as PY2, 0 as PY3,
0 as PY4, 0 as PY5, 
TBGrouping,ISNULL(jfje,0) as jfje,ISNULL(dfje,0) as dfje,
ISNULL(qcye,0) as qcye,ISNULL(Sqqmye,0) as Sqqmye,
ISNULL(Qqccgz,0) as Qqccgz ,ISNULL(Qmye,0) as Qmye,
IsMx,
Kmsx ,yefx from view_tbfs where '+@Condition +'and projectid='''+@PID+'
order by FSLinesCode'
END	
	
EXEC (@sql)		
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASLoadPacksInfoSelect')
   BEGIN
       DROP  Procedure  DSEASLoadPacksInfoSelect
	END
GO
/********************************************************************************
  Copyright : EAS
  Customer  : HuaPu
  Project   : 
  Created   : 20170706 by jpeng
  Updated	: 
*********************************************************************************/
CREATE PROCEDURE [dbo].[DSEASLoadPacksInfoSelect] 
@PackID varchar(50)
AS 
    SELECT ProjectID AS [PackID],ProjectName AS [PackName],'' as [PackVersion],PeriodEndDate AS [CreateTime],'' AS [Creator],GETDATE() AS [BeginDate]
		,GETDATE() AS [EndDate],ClientChineseName AS [ValidationScope],[Profession],ClientID AS [ClientScale],0 as [ExistYesNo],'' AS [Manager]
		,'' AS [Member],'' AS [Memo],'' as [Location],PackID AS [Inheritance],UpperProjectID,LastUpdateTime,ServiceType
		FROM NeweasV5.dbo.ProjectsInfo WHERE ProjectID=@PackID 
		--AND ExistYesNo = 0
       








GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASR1RiskAccountInsert')
   BEGIN
       DROP  Procedure  DSEASR1RiskAccountInsert
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu Switzerland, Baden
  Project   : 插入InherentRisk风险相关的账户及认定
  Created   : 2010/09/17	by	len
  Version   : 1.0.0
********************************************************************************/
CREATE Procedure [dbo].[DSEASR1RiskAccountInsert]
@PID nvarchar(50),
@ID int,
	@RiskID int,
	@RiskSource nvarchar(50),
	@AccountID varchar(50),
	@AccountName varchar(50),
	@CognizanceCode varchar(50),
	@AuditMethod varchar(50),
	@ControlTestProgram varchar(50),
	@MaterialityTestProgramYesNo bit,
	@DetailTestYesNo bit,
	@Memo text,
	@CGoalID varchar(50),
	@Referencelist1 text,
	@Referencelist2 text,
	@Referencelist3 text,
	@TotalConclusion text,
	@Countermeasure text
AS


--if	not	exists(select	1	from	InherentRiskAccount where	RiskID=@RiskID	and	RiskSource=@RiskSource	and	AccountID=@AccountID and projectID = @PID)
if	not exists(select	1	from	InherentRiskAccount where	projectID = @PID and ID=@ID)
begin
INSERT INTO InherentRiskAccount
(RiskID,RiskSource,AccountID,AccountName,CognizanceCode,AuditMethod,ControlTestProgram ,
MaterialityTestProgramYesNo ,DetailTestYesNo ,Memo ,CGoalID ,Referencelist1 ,
Referencelist2 ,Referencelist3 ,TotalConclusion,Countermeasure,ProjectID,ID)
values(@RiskID,@RiskSource,@AccountID,
@AccountName,@CognizanceCode,@AuditMethod,@ControlTestProgram ,@MaterialityTestProgramYesNo ,
@DetailTestYesNo ,@Memo ,@CGoalID ,@Referencelist1 ,@Referencelist2 ,@Referencelist3 ,
@TotalConclusion ,@Countermeasure,@PID,@ID)
end
else 
begin 
Update InherentRiskAccount
SET RiskID=@RiskID,RiskSource=@RiskSource,AccountID=@AccountID,AccountName=@AccountName,
CognizanceCode=@CognizanceCode,AuditMethod=@AuditMethod,
ControlTestProgram=@ControlTestProgram ,MaterialityTestProgramYesNo=@MaterialityTestProgramYesNo ,
DetailTestYesNo=@DetailTestYesNo ,Memo=@Memo ,CGoalID=@CGoalID ,
Referencelist1=@Referencelist1 ,Referencelist2=@Referencelist2 ,Referencelist3=@Referencelist3 ,
TotalConclusion =@TotalConclusion ,Countermeasure=@Countermeasure
where ID=@ID and projectID = @PID
end 


	










GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASR1RiskAccountUpdate')
   BEGIN
       DROP  Procedure  DSEASR1RiskAccountUpdate
	END
GO
/********************************************************************************
  Copyright : Easy Audit System
  Customer  : HuaPu
  Project   : EAS - 插入 固有风险的账户及认定
  Created   : 董晓庆 	日期：2008.8.15
  Update	: 
  *********************************************************************************/
CREATE Procedure [dbo].[DSEASR1RiskAccountUpdate]

	@PID nvarchar(50),
	@ID int,
	@RiskID int,
	@AccountID varchar(50),
	@AccountName varchar(50),
	@CognizanceCode varchar(50),
	@AuditMethod varchar(50),
	@ControlTestProgram varchar(50),
	@MaterialityTestProgramYesNo bit,
	@DetailTestYesNo bit,
	@Memo text,
	@CGoalID varchar(50),
	@Referencelist1 text,
	@Referencelist2 text,
	@Referencelist3 text,
	@TotalConclusion text,
	@Countermeasure text

AS
Update InherentRiskAccount
SET RiskID=@RiskID,AccountID=@AccountID,AccountName=@AccountName,
CognizanceCode=@CognizanceCode,AuditMethod=@AuditMethod,
ControlTestProgram=@ControlTestProgram ,MaterialityTestProgramYesNo=@MaterialityTestProgramYesNo ,
DetailTestYesNo=@DetailTestYesNo ,Memo=@Memo ,CGoalID=@CGoalID ,
Referencelist1=@Referencelist1 ,Referencelist2=@Referencelist2 ,Referencelist3=@Referencelist3 ,
TotalConclusion =@TotalConclusion ,Countermeasure=@Countermeasure
where ID=@ID and projectID = @PID
	
	
	
	
	










GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASRisfactorDelete')
   BEGIN
       DROP  Procedure  DSEASRisfactorDelete
	END
GO
/********************************************************************************
  Copyright : Easy Audit System
  Customer  : HuaPu
  Project   : EAS - 删除相关账户相关认定的R值
  Created   : 董晓庆 	日期：2009.7.6
  Updated	:	20131211 by dengll
  Update	: 
  *********************************************************************************/
create Procedure [dbo].[DSEASRisfactorDelete]

	@PID nvarchar(50),
	@ID nvarchar(50)
AS

if	exists(select	1 from Riskfactor where ID=@ID)
delete from Riskfactor where ID=@ID









GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASRisfactorInsert')
   BEGIN
       DROP  Procedure  DSEASRisfactorInsert
	END
GO
/********************************************************************************
  Copyright : Easy Audit System
  Customer  : HuaPu
  Project   : EAS - 插入相关账户相关认定的R值
  Created   : 董晓庆 	日期：2009.7.6
  Update	: 
  *********************************************************************************/
create Procedure [dbo].[DSEASRisfactorInsert]

	@PID nvarchar(50),
	@FSCode nvarchar(50),
	@CognizanceCode nvarchar(50), 
	@RiskType int, 
	@RiskValue  int,
	@BCycleCode varchar(50)       

AS
                     
	INSERT INTO  Riskfactor (ProjectID, FSCode, CognizanceCode, RiskType, RiskValue,BCycleCode)
	VALUES (@PID,@FSCode, @CognizanceCode, @RiskType, @RiskValue,@BCycleCode)   
	









GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'DSEASRisfactorUpdate')
   BEGIN
       DROP  Procedure  DSEASRisfactorUpdate
	END
GO
/********************************************************************************
  Copyright : Easy Audit System
  Customer  : HuaPu
  Project   : EAS - 更新相关账户相关认定的R值
  Created   : 董晓庆 	日期：2009.7.6
  Update	: 20131211 BY DENGLL
  *********************************************************************************/
CREATE Procedure [dbo].[DSEASRisfactorUpdate]

	@PID nvarchar(50),
	@ID int,
	@RiskType int, 
	@RiskValue  int,
	@BCycleCode varchar(50)  

AS


IF	EXISTS(SELECT	1	FROM	Riskfactor	WHERE	ID=@ID)
Update  Riskfactor
SET RiskType=@RiskType,RiskValue=@RiskValue,BCycleCode=@BCycleCode,ProjectID = @PID WHERE ID = @ID
	









GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetAccountForAuxiliaryData')
   BEGIN
       DROP  Procedure  GetAccountForAuxiliaryData
	END
GO
      
    
    
/*            
            
2018/11/13 by dengll 获取具有辅助核算的基本核算数据            
            
*/            
            
CREATE  PROCEDURE dbo.GetAccountForAuxiliaryData            
 @ProjectID varchar(1000)            
AS            
SELECT distinct a.projectid,f.fsname,f.FSCode        
 --f.sqqmye-f.qqccgz AS qcye,f.jfje,f.dfje,f.unchecked,b.yefx        
 --SUM(f.sqqmye-f.qqccgz)sqqmye,SUM(f.jfje)jfje,SUM(f.dfje)dfje,SUM(f.unchecked)unchecked        
 INTO #a        
 FROM ACCOUNT a        
 INNER JOIN  VIEW_TBDetail b        
 ON a.ProjectID=b.ProjectID        
  AND a.AccountCode=b.AccountCode        
 INNER JOIN VIEW_TBFS f        
  ON b.FSCode=f.FSCode        
 WHERE a.ProjectID=@ProjectID        
 AND a.Hsxms>0        
 AND a.TypeCode!=''        
 AND f.IsMx=1      and datatype=0  
GROUP BY a.projectid,f.fsname,f.FSCode        
;        
WITH a2 AS (        
SELECT accountcode,fscode,SUM(sqqmye)sqqmye,SUM(jfje)jfje,SUM(dfje)dfje        
  FROM TBDetail WHERE ProjectID =@ProjectID        
 AND DataType=0 AND AuxiliaryCode!=''        
  GROUP BY accountcode,fscode)        
,a3 AS (    
SELECT accountcode,fscode,SUM(sqqmye)sqqmye,SUM(jfje)jfje,SUM(dfje)dfje        
  FROM TBDetail WHERE ProjectID =@ProjectID        
  AND DataType=0 AND AuxiliaryCode='' --AND IsAccMx=1        
   AND AccountCode+fscode IN (SELECT DISTINCT accountcode+fscode FROM a2)        
   AND FSCode!=''        
   GROUP BY accountcode,fscode)        
,a4 AS (SELECT fscode,SUM(sqqmye)sqqmye,SUM(jfje)jfje,SUM(dfje)dfje FROM a3 GROUP BY fscode)      
,a5 AS (SELECT fscode,SUM(sqqmye)sqqmye,SUM(jfje)jfje,SUM(dfje)dfje FROM a2 GROUP BY fscode)      
,a6 AS (SELECT  a.fscode,      
   (b.sqqmye-a.sqqmye)sqqmye        
  ,(b.jfje-a.jfje)jfje        
  ,(b.dfje-a.dfje)dfje        
  FROM a4 a,a5 b      
   WHERE a.fscode=b.fscode --AND a3.accountcode=a2.accountcode         
  --GROUP BY  a3.fscode      
  )        
        
SELECT distinct a.*,isnull(b.sqqmye,0) as qcye,isnull(b.jfje,0) as jfje,isnull(b.dfje,0) as dfje,      
CASE WHEN (isnull(b.sqqmye,0)=0 and isnull(b.jfje,0)=0 and isnull(b.dfje,0)=0) THEN 0 ELSE 1 END CY, isnull((b.sqqmye+b.jfje-b.dfje),0) as unchecked /*表示:是否存在差异*/         
,fs.yefx      
FROM  #a a        
LEFT JOIN a6 b        
 ON a.FSCode=b.fscode      
 left join VIEW_TBFS fs      
 on a.fscode=fs.fscode      
 ORDER BY A.FSCODE        
 DROP TABLE #a 
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetAccountingPolicies')
   BEGIN
       DROP  Procedure  GetAccountingPolicies
	END
GO



/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -获取被审计单位选择和运用的会计政策、会计政策变更的情况、重要会计估计、折旧或摊销
  Created   : Dengll 2009/07/24
  Updated	:2009/11/09 dengll add code	and	change=0
  Version   : 1.0.1
********************************************************************************/

CREATE Procedure [dbo].[GetAccountingPolicies]
	@pid	varchar(100)
AS

select ID, UpperID, PoliciesID, [Order], Policies, ClientPolicies, PoliciesEvaluation, ISNULL(Change,0) AS Change, OldPolicies	
from AccountingPolicies
where	(len(UpperID)=0 or 	UpperID	is null) and projectID=@pid
order by [Order]
	








GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetAccountingPoliciesChange')
   BEGIN
       DROP  Procedure  GetAccountingPoliciesChange
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -获取会计政策变更的情况
  Created   : Dengll 2009/07/24
  Updated	:2009/11/09	by dengll	add where	change=1
  Updated	: DENGLL 2011/08/23
  Version   : 1.0.1
********************************************************************************/

create Procedure [dbo].[GetAccountingPoliciesChange]
@pid	varchar(100)

AS

select ID, UpperID, PoliciesID, OldPolicies, ClientPolicies, ChangeDate, ChangeReasons, ChangeResults, ChangeEvaluation
from AccountingPolicies	where	change=1	and ProjectID = @pid order by id









GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetAccountingPolicieschild')
   BEGIN
       DROP  Procedure  GetAccountingPolicieschild
	END
GO

/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -获取被审计单位选择和运用的会计政策子项
  Created   : Dengll 2009/07/24
  Updated	:	2009/11/09	dengll	and	(change=0	or change	is	null)
  Updated	: DENGLL 2011/08/23
  Version   : 1.0.1
********************************************************************************/

create Procedure [dbo].[GetAccountingPolicieschild]

	@pid	varchar(100),
	@PoliciesID				varchar(100)
AS

select ID, ISNULL(UpperID,0) AS UpperID, PoliciesID, [Order], Policies, ClientPolicies, PoliciesEvaluation, 
ISNULL(Change,0) as Change, OldPolicies	from	AccountingPolicies

where	Upperid=@PoliciesID	and	UpperID	is not null and ProjectID = @pid
order by [Order]








GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetAgingAndBaddebt')
   BEGIN
       DROP  Procedure  GetAgingAndBaddebt
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2009 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -获取账龄分析及坏账测试数据
  Created   : by Huasheng 20170805
  Updated   :  
  Version   : 1.0.1
********************************************************************************/

create PROCEDURE [dbo].[GetAgingAndBaddebt]
	@ProjectID varchar(50),
	@fsCode varchar(50)
AS
BEGIN
	
	DECLARE @Table_Result table(ID INT IDENTITY,Code varchar(100),UpperCode varchar(100),Title varchar(1000)
	,Yefx int,IsMx int,fsCode varchar(100),AccountCode varchar(100),AuxiliaryCode varchar(255),UnChecked decimal(20, 2)
	,Aje decimal(20, 2),Rje decimal(20, 2),Checked decimal(20, 2),AgeAnalysis int DEFAULT(0)
	,ZLD1 decimal(20, 2) DEFAULT(0),ZLD2 decimal(20, 2) DEFAULT(0),ZLD3 decimal(20, 2) DEFAULT(0)
	,ZLD4 decimal(20, 2) DEFAULT(0),ZLD5 decimal(20, 2) DEFAULT(0),ZLD6 decimal(20, 2) DEFAULT(0)
	,ZLD7 decimal(20, 2) DEFAULT(0),ZLD8 decimal(20, 2) DEFAULT(0),ZLD9 decimal(20, 2) DEFAULT(0)
	,IsAgeEqual int DEFAULT(0),significant int DEFAULT(0),Impairmenttestmethod int DEFAULT(0)
	,impairmentamount decimal(20, 2) DEFAULT(0),BalanceAnalysis int DEFAULT(0)
	,HZZBZLD1 decimal(20, 2) DEFAULT(0),HZZBZLD2 decimal(20, 2) DEFAULT(0),HZZBZLD3 decimal(20, 2) DEFAULT(0)
	,HZZBZLD4 decimal(20, 2) DEFAULT(0),HZZBZLD5 decimal(20, 2) DEFAULT(0),HZZBZLD6 decimal(20, 2) DEFAULT(0)
	,HZZBZLD7 decimal(20, 2) DEFAULT(0),HZZBZLD8 decimal(20, 2) DEFAULT(0),HZZBZLD9 decimal(20, 2) DEFAULT(0)
	,IsHzzbEqual int DEFAULT(0),memo nvarchar(500) DEFAULT('')
	)
	
	declare @yefx int
	select @yefx=yefx from dbo.FSCodeConfig where ProjectID=@projectID and FsCode=@fscode

	--清零部分
	--check=0,则账龄段及标记、坏账准备及标记、减值金额均清零
	--TBAcc数据
	update wlzl set wlzl.ZLD1=0,wlzl.ZLD2=0,wlzl.ZLD3=0,wlzl.ZLD4=0,wlzl.ZLD5=0,wlzl.ZLD6=0,wlzl.ZLD7=0,wlzl.ZLD8=0,wlzl.ZLD9=0,
	wlzl.HZZBZLD1=0,wlzl.HZZBZLD2=0,wlzl.HZZBZLD3=0,wlzl.HZZBZLD4=0,wlzl.HZZBZLD5=0,wlzl.HZZBZLD6=0,wlzl.HZZBZLD7=0,wlzl.HZZBZLD8=0,wlzl.HZZBZLD9=0,
	wlzl.impairmentamount=0,wlzl.AgeAnalysis=0 ,wlzl.BalanceAnalysis=0 
	from VIEW_TBDetail acc JOIN Tbwlzl wlzl 
	on acc.ProjectID=wlzl.ProjectID and acc.ID=wlzl.ID AND acc.ismx=1
	where acc.ProjectID=@Projectid and acc.fscode=@fsCode and acc.Checked = 0 
	
	
	--获取数据部分
	--报表项目
	INSERT INTO @Table_Result(Code,UpperCode,Title,yefx,IsMx,fsCode,AccountCode,AuxiliaryCode,UnChecked,Aje,Rje,Checked)
	SELECT fscode AS Code,'' as UpperCode,fsName as Title,yefx,0 as IsMx,fscode,'' as AccountCode, '' as AuxiliaryCode
	,yefx*UnChecked as UnChecked,yefx*(AjeJf-AjeDf) as Aje,yefx*(RjeJf-RjeDf) as Rje,yefx*Checked as Checked
	 FROM VIEW_TBFS WHERE ProjectID=@Projectid and fscode=@fsCode
		
	
	INSERT INTO @Table_Result
	select acc.AccountCode+acc.AuxiliaryCode AS Code,acc.TBGrouping as UpperCode,acc.AccAuxName as Title,acc.yefx,1 as IsMx,acc.fscode,acc.AccountCode
	,acc.AuxiliaryCode,yefx*UnChecked as UnChecked,yefx*(AjeJf-AjeDf) as Aje,yefx*(RjeJf-RjeDf) as Rje,yefx*Checked as Checked
	,ISNULL(wlzl.AgeAnalysis,0) AS AgeAnalysis
	,ISNULL(wlzl.ZLD1,0)*YEFX AS ZLD1,ISNULL(wlzl.ZLD2,0)*YEFX AS ZLD2,ISNULL(wlzl.ZLD3,0)*YEFX AS ZLD3
	,ISNULL(wlzl.ZLD4,0)*YEFX AS ZLD4,ISNULL(wlzl.ZLD5,0)*YEFX AS ZLD5,ISNULL(wlzl.ZLD6,0)*YEFX AS ZLD6
	,ISNULL(wlzl.ZLD7,0)*YEFX AS ZLD7,ISNULL(wlzl.ZLD8,0)*YEFX AS ZLD8,ISNULL(wlzl.ZLD9,0)*YEFX AS ZLD9
	,0 as IsAgeEqual,ISNULL(wlzl.significant,0) as significant,ISNULL(wlzl.Impairmenttestmethod,0) as Impairmenttestmethod
	,ISNULL(wlzl.impairmentamount,0) as impairmentamount,ISNULL(wlzl.BalanceAnalysis,0) as BalanceAnalysis
	,ISNULL(wlzl.HZZBZLD1,0)*YEFX as HZZBZLD1,ISNULL(wlzl.HZZBZLD2,0)*YEFX as HZZBZLD2,ISNULL(wlzl.HZZBZLD3,0)*YEFX as HZZBZLD3
	,ISNULL(wlzl.HZZBZLD4,0)*YEFX as HZZBZLD4,ISNULL(wlzl.HZZBZLD5,0)*YEFX as HZZBZLD5,ISNULL(wlzl.HZZBZLD6,0)*YEFX as HZZBZLD6
	,ISNULL(wlzl.HZZBZLD7,0)*YEFX as HZZBZLD7,ISNULL(wlzl.HZZBZLD8,0)*YEFX as HZZBZLD8,ISNULL(wlzl.HZZBZLD9,0)*YEFX as HZZBZLD9
	,0 as IsHzzbEqual,ISNULL(wlzl.memo,0) as memo
	from VIEW_TBDetail acc LEFT JOIN Tbwlzl wlzl 
	on acc.ProjectID=wlzl.ProjectID and acc.ID=wlzl.ID
	where acc.ProjectID=@Projectid and acc.fscode=@fsCode	

	SELECT * FROM @Table_Result 

END



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetAuxiliaryProjects')
   BEGIN
       DROP  Procedure  GetAuxiliaryProjects
	END
GO
 /********************************************************************************
  Database  : EAS
  Copyright : 2010 Huapu (Beijing)
  Customer  : Huapu Chinese,bj
  Project   : EAS -获取项目核算明细数据
  Created   : 20181012 by dengll
  Version   : 1.0.0
********************************************************************************/
CREATE PROCEDURE GetAuxiliaryProjects @projectid VARCHAR (100), @fscode VARCHAR (100) AS
DECLARE @t TABLE (fscode VARCHAR (100) COLLATE Chinese_PRC_CS_AS_KS_WS, tbgrouping VARCHAR (100));
WITH a1 AS
    (SELECT FSCode
         , tbgrouping
     FROM VIEW_TBFS with(nolock)
     WHERE FSCode = @fscode AND projectid = @projectid UNION ALL
    SELECT fs.FSCode
        , fs.tbgrouping
    FROM VIEW_TBFS fs with(nolock) INNER
        JOIN a1 ON fs.TBGrouping = a1.fscode
    WHERE fs.projectid = @projectid)
INSERT @t
SELECT *
FROM a1;

--tbfs
SELECT DISTINCT -1 AS datatype
    , FsCode
    , space(0) AS AccountCode
    , space(0) AS AuxiliaryCode
    , TbGrouping
    , TBType
    , fsname AS fsAccAuxProName
    , ISNULL (qcye, 0) qcye
    , isnull (jfje, 0) jfje
    , isnull (dfje, 0) dfje
    , isnull (qmye, 0) qmye
    , isnull (Crjejf,0) Crjejf
    , isnull (Crjedf,0) Crjedf
    , isnull (Unchecked , 0) Unchecked
    , isnull (AjeJF,0) AjeJF
    , isnull (AjeDF,0) AjeDF
    , isnull (Adjusted, 0) Adjusted
    , isnull (RjeJF,0) RjeJF
    , isnull (RjeDF,0) RjeDF
    , isnull (Checked,0) Checked
	,yefx
	,kmsx
FROM VIEW_TBFS with(nolock)
WHERE ProjectID = @projectid AND fscode =@fscode

--view_tbdetail
SELECT DISTINCT 0 AS datatype
    , TbGrouping as fscode
    , FsCode AS AccountCode
    , space(0) AS AuxiliaryCode
    , TbGrouping
    , TBType
    , fsname AS fsAccAuxProName
	, 0 as qcye
    , 0 as jfje
    , 0 as dfje
    , 0 as qmye
    , 0 as Crjejf
    , 0 as Crjedf
    , 0 as Unchecked
    , 0 as AjeJF
    , 0 as AjeDF
    , 0 as Adjusted
    , 0 as RjeJF
    , 0 as RjeDF
    , 0 as Checked
	,isnull(yefx,1)yefx
	,isnull(kmsx,0)kmsx
	,-1 as isAux
	,-1 as isAccmx
FROM VIEW_TBFS with(nolock)
WHERE ProjectID = @projectid AND FSCode COLLATE Chinese_PRC_CS_AS_KS_WS IN (SELECT fscode
                                            FROM @t where fscode!=@fscode)
union	/*查询基本核算数据*/
--VIEW_TBDetail
SELECT DISTINCT datatype
    , @fscode as fscode
    , b.AccountCode
    , AuxiliaryCode
    , TbGrouping
    , TBType
    , AccAuxName AS fsAccAuxProName
    , ISNULL (qcye*isnull(a.fx,1),0) qcye
    , isnull (jfje*isnull(a.fx,1),0) jfje
    , isnull (dfje*isnull(a.fx,1),0) dfje
    , isnull (qmye*isnull(a.fx,1),0) qmye
    , isnull (Crjejf*isnull(a.fx,1),0) Crjejf
    , isnull (Crjedf*isnull(a.fx,1),0) Crjedf
    , isnull (Unchecked*isnull(a.fx,1),0) Unchecked
    , isnull (AjeJF*isnull(a.fx,1),0) AjeJF
    , isnull (AjeDF*isnull(a.fx,1),0) AjeDF
    , isnull (Adjusted*isnull(a.fx,1),0) Adjusted
    , isnull (RjeJF*isnull(a.fx,1),0) RjeJF
    , isnull (RjeDF*isnull(a.fx,1),0) RjeDF
    , isnull (Checked*isnull(a.fx,1), 0) Checked
	,isnull(yefx,1)yefx
	,isnull(kmsx,0)kmsx
	,b.isAux
	,b.isAccmx
FROM VIEW_TBDetail b with(nolock)
left join (select accountcode,
	case 
		when hsxms>0 AND ismx=1 then 0 
		when hsxms=0 AND ismx=0 then 0 
		else 1 
	end fx from	
	dbo.Account with(nolock) where Projectid=@projectid) a
on b.AccountCode=a.AccountCode
WHERE b.ProjectID = @projectid AND b.FSCode COLLATE Chinese_PRC_CS_AS_KS_WS IN (SELECT fscode
                                            FROM @t) AND b.AuxiliaryCode=''
union/*构造projectype数据*/
SELECT DISTINCT -2 as datatype
	, @fscode as fscode
	, aux.AccountCode+'/'+p.TYPECODE as AccountCode
    , space(0) as AuxiliaryCode
	,aux.AccountCode as TbGrouping
	, 0 as TBType
    , p.TYPENAME as fsAccAuxProName
	, 0 as qcye
    , 0 as jfje
    , 0 as dfje
    , 0 as qmye
    , 0 as Crjejf
    , 0 as Crjedf
    , 0 as Unchecked
    , 0 as AjeJF
    , 0 as AjeDF
    , 0 as Adjusted
    , 0 as RjeJF
    , 0 as RjeDF
    , 0 as Checked
	,isnull(aux.yefx,1)yefx
	,isnull(aux.kmsx,0)kmsx
	,-2 as isAux
	,-2 as isAccmx
FROM dbo.ProjectType p with(nolock) INNER
    JOIN dbo.tbaux aux with(nolock) ON aux.ProjectID = p.ProjectID AND
    LEFT (aux.AuxiliaryCode
    , LEN (p.TYPECODE)) = p.TYPECODE
WHERE p.ProjectID = @projectid AND aux.FSCode COLLATE Chinese_PRC_CS_AS_KS_WS IN (SELECT fscode
                                                  FROM @t)
union
--view_tbaux
SELECT DISTINCT /*查询项目核算明细*/
		isnull (d.datatype, -3)datatype
    , aux.FsCode
    , aux.AccountCode+'/'+aux.AuxiliaryCode as AccountCode
    , aux.AuxiliaryCode
    , aux.AccountCode+'/'+p.TYPECODE as TbGrouping
    , isnull(d.TBType,0)TBType
    , aux.AuxiliaryName AS fsAccAuxProName
    , ISNULL (d.qcye, isnull ((aux.Sqqmye + aux.QQccgz), 0)) qcye
    , isnull (aux.jfje,0) jfje
    , isnull (aux.dfje,0) dfje
    , isnull (d.qmye,(aux.Sqqmye + aux.QQccgz + aux.jfje - aux.dfje)) qmye
    , isnull (d.Crjejf,0)Crjejf
    , isnull (d.Crjedf,0)Crjedf
    , isnull (d.Unchecked,(aux.Sqqmye + aux.QQccgz + aux.jfje - aux.dfje)) Unchecked
    , isnull (d.AjeJF,0) AjeJF
    , isnull (d.AjeDF,0) AjeDF
    , isnull (d.Adjusted, 0) Adjusted
    , isnull (d.RjeJF,0) RjeJF
    , isnull (d.RjeDF,0) RjeDF
    , isnull (d.Checked,0) Checked
	,isnull(aux.yefx,1)yefx
	,isnull(aux.kmsx,0)kmsx
	,1 as isAux
	,0 as isAccmx
FROM dbo.TBAux aux with(nolock) INNER
    JOIN dbo.ProjectType p  with(nolock)
	ON aux.ProjectID = p.ProjectID AND LEFT (aux.AuxiliaryCode, LEN (p.TYPECODE)) = p.TYPECODE 
	LEFT JOIN VIEW_TBDetail d  with(nolock)
	ON aux.ProjectID = d.ProjectID AND aux.AccountCode = d.AccountCode AND aux.AuxiliaryCode = d.AuxiliaryCode AND aux.FSCode = d.FSCode
WHERE aux.ProjectID = @projectid	AND aux.FSCode COLLATE Chinese_PRC_CS_AS_KS_WS IN (
    SELECT
    fscode FROM @t)
UNION
SELECT DISTINCT /*查询重分类等数据*/
    ISNULL (d.datatype, -4) datatype
    , d.FsCode
    , d.AccountCode+'/'+d.AuxiliaryCode as AccountCode
    , d.AuxiliaryCode
    , d.TbGrouping
    , d.TBType
    , d.accauxname AS fsAccAuxProName
    , ISNULL (d.qcye,0) qcye
    , isnull (d.jfje, 0) jfje
    , isnull (d.dfje, 0) dfje
    , isnull (d.qmye ,0) qmye
    , isnull (d.Crjejf, 0) Crjejf
    , isnull (d.Crjedf, 0) Crjedf
    , isnull (d.Unchecked,0) Unchecked
    , isnull (d.AjeJF, 0) AjeJF
    , isnull (d.AjeDF, 0) AjeDF
    , isnull (d.Adjusted, 0) Adjusted
    , isnull (d.RjeJF, 0) RjeJF
    , isnull (d.RjeDF, 0) RjeDF
    , isnull (d.Checked, 0) Checked
	,isnull(d.yefx,1)yefx
	,isnull(d.kmsx,0)kmsx
	,d.isAux
	,d.isAccmx
FROM VIEW_TBDetail d with(nolock) INNER
    JOIN dbo.ProjectType p with(nolock) ON d.ProjectID = p.ProjectID AND
    LEFT (d.AuxiliaryCode
    , LEN (p.TYPECODE)) = p.TYPECODE
WHERE d.ProjectID = @projectid AND d.FSCode COLLATE Chinese_PRC_CS_AS_KS_WS IN (SELECT fscode
                                                FROM @t) AND d.DataType > 0
												order by datatype desc

/*
--view_ProjectType
SELECT DISTINCT aux.AccountCode
    , p.TYPECODE
    , p.TYPENAME
FROM dbo.ProjectType p INNER
    JOIN dbo.tbaux aux ON aux.ProjectID = p.ProjectID AND
    LEFT (aux.AuxiliaryCode
    , LEN (p.TYPECODE)) = p.TYPECODE
WHERE p.ProjectID = @projectid AND aux.FSCode IN (SELECT fscode
                                                  FROM @t)
												  */

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetBaseCombinationRange')
   BEGIN
       DROP  Procedure  GetBaseCombinationRange
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -Module AuditPrograml
  Created   : Huasheng 2016/07/27
  Updated   : -
  Version   : 1.0.0
  说明：获取合并范围基础数据
********************************************************************************/

Create PROCEDURE GetBaseCombinationRange
	@ProjectID	varchar(100)
AS
BEGIN

declare @table table(ID INT IDENTITY(1,1) NOT NULL,projectid VARCHAR(100) collate Chinese_PRC_CS_AS_KS_WS,projectName VARCHAR(500),clientID  VARCHAR(100)
,UpperYearProjectid VARCHAR(100) collate Chinese_PRC_CS_AS_KS_WS,UpperprojectID  VARCHAR(100) collate Chinese_PRC_CS_AS_KS_WS
,IsSelected BIT,LastUpdateTime DATETIME, UpperProjectName VARCHAR(500),ClientShortName VARCHAR(500)
,ClientName VARCHAR(500),ChangedReason VARCHAR(MAX),CombinationTime VARCHAR(500) );

with temp as(
 select projectid,projectName,clientID,UpperYearProjectid,UpperprojectID,0 as IsSelected,LastUpdateTime
	,NULL AS UpperProjectName,NULL AS ClientShortName,NULL AS ClientName,NULL AS ChangedReason,NULL AS CombinationTime 
  from neweasv5.DBO.ProjectsInfo where ProjectID=@projectID
 union all 
 select b.projectid,b.projectName,b.clientID,b.UpperYearProjectid,b.UpperprojectID,0 as IsSelected,b.LastUpdateTime
	,NULL AS UpperProjectName,NULL AS ClientShortName,NULL AS ClientName,NULL AS ChangedReason,NULL AS CombinationTime 
  from temp a ,neweasv5.DBO.ProjectsInfo b
 where a.ProjectID = b.UpperProjectID) 
 INSERT INTO @table select * from temp

 DECLARE @INDEX INT ,@ROW_COUNT INT 
 DECLARE @ID INT,@clientID  VARCHAR(100),@ClientShortName VARCHAR(500),@ClientName VARCHAR(500)
 SET @INDEX=1
 SELECT @ROW_COUNT=COUNT(1) FROM @TABLE

 WHILE(@INDEX<=@ROW_COUNT) BEGIN
	SELECT TOP 1 @ID=ID,@clientID=CLIENTID FROM @TABLE WHERE ID=@INDEX
	SELECT @ClientShortName=ChineseShortName,@ClientName=ClientChineseName
		FROM neweasv5.[dbo].[ClientBasicInfo] WHERE CLIENTID=@clientID
	UPDATE @TABLE SET ClientShortName=@ClientShortName,ClientName=@ClientName WHERE ID=@ID
	SET @INDEX=@INDEX+1
 END

 SELECT projectid,projectName,T.clientID,UpperYearProjectid
 ,(SELECT TOP 1 PROJECTNAME FROM neweasv5.[dbo].PROJECTSINFO WHERE PROJECTID=T.UpperYearProjectid) AS UpperYearProjectName
 ,UpperprojectID,IsSelected,LastUpdateTime,UpperProjectName
	,ClientShortName,ClientName,ChangedReason,CombinationTime 
	FROM @TABLE T LEFT JOIN neweasv5.[dbo].ClientBasicInfo c on T.clientID=c.clientID order by c.sortID	

END
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetBCycleIDByAccount')
   BEGIN
       DROP  Procedure  GetBCycleIDByAccount
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2010  EAS(Beijing)
  Customer  :  Huapu 
  Project   : 根据账户获取业务循环
  Created   : 
  Version   : 1.0.0
********************************************************************************/
create Procedure [dbo].[GetBCycleIDByAccount]
	@PID VARCHAR(50),
	@AccountID VARCHAR(50)
AS
BEGIN
SELECT  TOP 1 * FROM  BCycleAndAccounts WHERE   AccountID = @AccountID and ProjectID = @PID
END









GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetBuilderSample')
   BEGIN
       DROP  Procedure  GetBuilderSample
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -Module xxx51 获取样本抽样
  Created   : 20120917 by dengll
  Updated	: 20120928 by dengll add SampleSelectedType
  Updated: auxiliaryCode=auxid+$+auxiliarycode	by dengll
  Updated: 2016-02-03 by Huasheng 余额为0的样本也参与抽样
  Version   : 1.0.3
********************************************************************************/
create Procedure [dbo].[GetBuilderSample]
@pid	varchar(100),
@fscode	varchar(100),
@sampleType	int,	--0	余额抽样(A类型),1	借方,2	贷方(BC类型)抽样
@step	int	--值区间0,1,2,3,4,5,6;小于1表示没有步骤;6固定样本抽样(步骤1);

AS
declare @sql	nvarchar(max),@sql1	nvarchar(max)
create	table	#voucher	(id	int	identity(1,1),voucherid	varchar(100) collate Chinese_PRC_CS_AS_KS_WS,incno varchar(200),accountcode varchar(200),projectcode varchar(200),jd int,zy nvarchar(1000),
			pzh varchar(100),pzrq datetime,unchecked decimal(20,2),StepofSample int,SampleSelectedYesno int,SampleNumber int,SampleSelectedType int
			,TBGrouping varchar(100),dfkm nvarchar(2000))
	
create table #TEMP1	(id	int	identity(1,1),TBGROUPING	VARCHAR(100),ACCOUNTCODE	VARCHAR(500),AUXCODE	VARCHAR(100),AccAuxName	VARCHAR(500),
	UNCHECKED	DECIMAL(20,2),STEPOFSAMPLE	INT,SAMPLESELECTEDYESNO	INT,TESTPROGRAM	VARCHAR(100),TESTPROJECTMETHOD	VARCHAR(100),
	SAMPLENUMBER	INT,SAMPLESELECTEDTYPE	INT)		

		if(@step=6)
			set	@step=1

		DECLARE	@J	DECIMAL(20,2),@jd	int
		
		set	@jd=case	when @sampleType=1	then 1	else	-1	end
		--IF(@SAMPLETYPE=0)
		--		SELECT	@J=VALUEOFJ	FROM	PMvalueofJ	WHERE	ProjectID = @pid and  FSCODE=@FSCODE	AND	STEP=@STEP
		--	ELSE
				SELECT	@J=VALUEOFJ	FROM	PMvalueofJ	WHERE	ProjectID = @pid and FSCODE=@FSCODE	AND	STEP=@STEP	AND	TESTOBJECT=@SAMPLETYPE
		if @J = 0 return
		DECLARE	@LeveGroupTable	table(accountcode	varchar(max))
		insert	@LeveGroupTable
		select	distinct b.accountcode	
		from	 TBDetailExtra	 a
		join     TBDetail b
		on a.ID = b.ID and IsAux = 0 and SourceFSCode = ''
		WHERE	a.ProjectID = @pid and  exists(select 1 from GetAllChildFSInfo(@pid,@fscode) t  where  t.fscode=b.fscode)	AND SelectedSampleLebelYesNo=1	

		declare @prepid varchar(100)
		declare @predate varchar(10)
		declare @enddate varchar(10)
		
		select @prepid=CurrentyearPID	from	NeweasV5.dbo.projectsinfo	where		projectid=@pid
		if(@prepid is not null)			
			select @predate=convert(char(10),PeriodEndDate,111)	from	NeweasV5.dbo.projectsinfo	where		projectid=@prepid
		else
			set @predate = '2000-01-01'--默认值

		select @enddate=convert(char(10),PeriodEndDate,111)	from	NeweasV5.dbo.projectsinfo	where		projectid=@pid
				
		if(@sampleType=0	and	@step=0)
		begin
			declare @yefx int
			select @yefx=yefx from dbo.fscodeconfig where projectid=@pid and fscode=@fscode
			INSERT	#TEMP1
			select	distinct tbgrouping	,
					a.accountcode,a.AuxiliaryCode	as auxcode,
					AccAuxName,(yefx*unchecked)unchecked,
					isnull(StepofSample,0)StepofSample,
					isnull(SampleSelectedYesno,0)SampleSelectedYesno,
					--DBO.ConvertMeterialityProgramtoStr(MaterialityProgram)	as Testprogram,
					--DBO.ConvertSelectSampleMethodtoStr(SelectSampleMethod)	as TestProjectmethod,
					'' as Testprogram,
					'' as  TestProjectmethod,
					0	as SampleNumber,
					SampleSelectedType
			from	VIEW_TBDetail	a
			join    TBDetailExtra b
			on a.ID = b.ID and IsMx = 1
			where	a.ProjectID = @pid and exists(select 1 from GetAllChildFSInfo(@pid,@fscode) t  where  t.fscode=a.fscode)	
			and b.SampleSelectedYesNo > 0
				

			update	#TEMP1	set	tbgrouping=(select top 1  accountcode	from	@LeveGroupTable	where	tbgrouping	like accountcode+'%')

			--update	t	set	t.tbgrouping	=(select top 1 accountcode	from	@LeveGroupTable	where	t.accountcode	like accountcode+'%')
			--from #TEMP1	t
			--where	t.AUXCODE		!= ''

			update	#TEMP1	set	tbgrouping=accountcode
			where	accountcode	in (select accountcode	from	@LeveGroupTable)
			SELECT	*	FROM	#TEMP1	order by unchecked desc,accountcode asc
		end

		if(@sampleType=0	and	@step>0)
		begin 
		
			INSERT	#TEMP1
			select	tbgrouping,
					a.accountcode,a.AuxiliaryCode	as auxcode,
						AccAuxName,(yefx*unchecked)unchecked,
						isnull(StepofSample,0)StepofSample,isnull(SampleSelectedYesno,0)SampleSelectedYesno,
						--DBO.ConvertMeterialityProgramtoStr(MaterialityProgram)	as Testprogram,
						--DBO.ConvertSelectSampleMethodtoStr(SelectSampleMethod)	as TestProjectmethod,
						''as Testprogram,
					    '' as  TestProjectmethod,
						isnull(dbo.GetStylebookScopeNumber((yefx*unchecked),@J),0)	as SampleNumber,
						SampleSelectedType
			from	VIEW_TBDetail	a
			join    TBDetailExtra b
			on a.ID = b.ID  and ismx = 1 and SourceFSCode = ''
			where	a.ProjectID = @pid  and 	exists(select 1 from GetAllChildFSInfo(@pid,@fscode) t  where  t.fscode=a.fscode)	and	StepofSample=@step	
			and	SampleSelectedYesno>0
			
			union
			select	distinct tbgrouping,
					a.accountcode,a.AuxiliaryCode	as auxcode,
						a.AccAuxName  as  accountname,(yefx*unchecked)unchecked,
						isnull(StepofSample,0)StepofSample,isnull(SampleSelectedYesno,0)SampleSelectedYesno,
						--DBO.ConvertMeterialityProgramtoStr(MaterialityProgram)	as Testprogram,
						--DBO.ConvertSelectSampleMethodtoStr(SelectSampleMethod)	as TestProjectmethod,
						'' as Testprogram,
					    '' as  TestProjectmethod,
						0	as SampleNumber,
						SampleSelectedType
			from	VIEW_TBDetail	a
			join    TBDetailExtra b
			on a.ID = b.ID 		and ismx = 1 and SourceFSCode != ''
			where	a.ProjectID = @pid and	exists(select 1 from GetAllChildFSInfo(@pid,@fscode) t  where  t.fscode=a.fscode)		and	StepofSample=@step	
			and	SampleSelectedYesno>0
			

			update	#TEMP1	set	tbgrouping	=(select top 1  accountcode	from	@LeveGroupTable	where	tbgrouping	like accountcode+'%')
			--update	t	set	t.tbgrouping	=(select top 1  accountcode	from	@LeveGroupTable	where	t.accountcode	like accountcode+'%')
			--from #TEMP1	t
			--where	t.AUXCODE		!= ''

			update	#TEMP1	set	tbgrouping=accountcode
			where	accountcode	in (select accountcode	from	@LeveGroupTable)			
			SELECT	*	FROM	#TEMP1	order by accountcode	asc
	    end
		
		if(@sampleType>0	and	@step=0)
		begin		
			insert #voucher
			select	voucherid,
					incno,accountcode,
							projectcode,jd,zy,(isnull(pzlx,'')+isnull(pzh,'')) pzh,date as pzrq,
							case	when	@jd=1	then	jfje	else	dfje	end as unchecked,
							isnull(StepofSample,0)StepofSample,
							isnull(SampleSelectedYesno,0)SampleSelectedYesno,
						isnull(dbo.GetStylebookScopeNumber((case	when	@jd=1	then	jfje	else	dfje	end),@J),0)	as SampleNumber,
						SampleSelectedType,
						(select	distinct b.accountcode	
							from	TBDetailExtra	a
							join TBDetail b
							on a.ID = b.ID and IsAux = 0 and SourceFSCode = ''
							where	a.ProjectID = @pid and b.accountcode=left(v.accountcode,len(b.accountcode))	and exists(select 1 from GetAllChildFSInfo(@pid,@fscode) t  where  t.fscode=b.fscode)	and	
							((@jd=1	AND DrSelectedSampleLebelYesNo=1)	OR (@jd=-1	AND CrSelectedSampleLebelYesNo=1)))	as TBGrouping
							,v.dfkm
			from	TBVoucher		v
			where	ProjectID = @pid and  jd=@jd	
			and SampleSelectedYesNo >0  
			and	fllx=1	
				--and	([Date] > @predate and [Date] <= @enddate)
				and	accountcode	in	(select	accountcode	from	TBDetail	where	ProjectID = @pid and IsAux = 0 and SourceFSCode = '' and exists(select 1 from GetAllChildFSInfo(@pid,@fscode) t  where  t.fscode=fscode))
					order by unchecked desc,pzrq asc
		end

		if(@sampleType>0	and	@step>0)
		begin 
		
			insert #voucher
			select	voucherid,
					incno,accountcode,
							projectcode,jd,zy,(isnull(pzlx,'')+isnull(pzh,'')) pzh,date as pzrq,
							case	when	@jd=1	then	jfje	else	dfje	end as unchecked,
							isnull(StepofSample,0)StepofSample,isnull(SampleSelectedYesno,0)SampleSelectedYesno,
						isnull(dbo.GetStylebookScopeNumber((case	when	@jd=1	then	jfje	else	dfje	end),@J),0)	as SampleNumber,
						SampleSelectedType,
						(select	b.accountcode	
						    from	TBDetailExtra	a
							join TBDetail b
							on a.ID = b.ID and IsAux = 0 and SourceFSCode = ''
							where	a.ProjectID = @pid and b.accountcode=left(v.accountcode,len(b.accountcode))	and exists(select 1 from GetAllChildFSInfo(@pid,@fscode) t  where  t.fscode=b.fscode)	and	
							((@jd=1	AND DrSelectedSampleLebelYesNo=1)	OR (@jd=-1	AND CrSelectedSampleLebelYesNo=1)))	as TBGrouping
							,v.dfkm
			from	TBVoucher		v	
			where	ProjectID = @pid and jd=@jd	and	fllx=1	and	StepofSample=@step	
			and	SampleSelectedYesno>0
				and	accountcode	in	(select	accountcode	from	TBDetail	where	ProjectID = @pid and IsAux = 0 and SourceFSCode = '' and exists(select 1 from GetAllChildFSInfo(@pid,@fscode) t  where  t.fscode=fscode))	order by date	asc
		end

		

	--对于是bc类抽样的需要把dfkm转换成对应的科目名称 by dengll151124
	
	if	exists(select 1 from #voucher)begin		

		declare	@tmpDFKM table(dfkmcode varchar(1000))
		insert @tmpDFKM
		select distinct dfkm from #voucher where dfkm is not null and dfkm!=space(1)
				
		DECLARE @dont VARCHAR(1)=''''
		while exists(select 1 from @tmpDFKM)begin
			declare	@dfkm varchar(1000),@initDfkm varchar(1000),@sql2 varchar(max)
			select @dfkm=dfkmcode from @tmpdfkm
			set @initDfkm=@dfkm
			set @dfkm=@dont+@dfkm+@dont
			SET	@dfkm=replace(@dfkm,',',@dont+','+@dont)		
			
			set @sql2='
			update #voucher set dfkm=(
				SELECT TOP 1
					STUFF((SELECT ''/''+AccAuxName FROM TBDetail t 
				WHERE projectID = '''+@pid+''' and IsAux = 0 and SourceFSCode = '''' and AccountCode IN ('+@dfkm+') FOR XML PATH('''')), 1, 1, '''')
					FROM TBDetail  WHERE projectID = '''+@pid+''' and IsAux = 0 and SourceFSCode = '''' and  AccountCode IN ('+@dfkm+'))
					where dfkm='''+@initDfkm+''''			
			--print (@sql2)
			
			exec (@sql2)	
			
			delete @tmpDFKM where dfkmcode=@initDfkm
		end
		select * from #voucher
	end

	drop table #voucher
	drop table #TEMP1




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetBuilderSampleByTbGrouping')
   BEGIN
       DROP  Procedure  GetBuilderSampleByTbGrouping
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -Module xxx51 获取样本抽样
  Created   : by dll
  Updated   : 20170829 by pwg
  Updated	: 20180808 by hhy
  Updated	: 20181022 by hhy
  Updated	: 20181025 by hhy
  Updated   : 20190110 by hhy
  Version   : 1.0.3
********************************************************************************/
CREATE Procedure [dbo].[GetBuilderSampleByTbGrouping]
@pid	varchar(100),
@fscode	varchar(100),
@sampleType	int,			-- 0：余额抽样（A类型）；1：借方（B类型）抽样；2：贷方（C类型）抽样
@page int,					-- （原：当前页码），现在用途：
							-- -1：直接把已经抽到到样本展示出来，同时增加最多10个待选样本；
							-- 0：按比例抽样，即在手工抽样的基础上，增加至比例值，如果手工抽样已经超过比例值，则返回全部手工抽样；
							-- >0：读取的起始行，用于翻页增加显示可选样本；
@size int,					-- （原：每页数量），现在用途：
							-- 当page=0时：按比例抽样的比例值；
							-- 当page>0时：需要翻页增加显示的行数
@filterstr	varchar(100),	-- 过滤条件，该条件与其它条件不兼容（若此参数有值，则忽略@page、@size、@tbgrouping）
@tbgrouping varchar(100)	-- 指定当前tbgrouping，用于对指定分层显示更多可选样本（针对@page>0的情况）

AS
begin

begin try

-- 表302/303合并后的页级科目，及其它界面需要的信息
create table #AccAux(
	TbGrouping VARCHAR(100) COLLATE Chinese_PRC_CS_AS_KS_WS,
	AccountCode VARCHAR(100) COLLATE Chinese_PRC_CS_AS_KS_WS,
	AuxCode VARCHAR(100) COLLATE Chinese_PRC_CS_AS_KS_WS,
	AccAuxName VARCHAR(500),
	Unchecked DECIMAL(20,2),
	StepOfSample INT,
	SampleSelectedYesNo INT,
	TestProgram VARCHAR(100),
	TestProjectMethod VARCHAR(100),
	SampleNumber INT,
	SampleSelectedType INT,
	RjeID VARCHAR(100));

-- 在余额抽样返回结果集的基础上，加上“逐行累加的和”字段UncheckedSum
create table #AccAux2(
	ID int,
	UncheckedSum Decimal(20, 2),
	TbGrouping VARCHAR(100) COLLATE Chinese_PRC_CS_AS_KS_WS,
	AccountCode VARCHAR(100) COLLATE Chinese_PRC_CS_AS_KS_WS,
	AuxCode VARCHAR(100) COLLATE Chinese_PRC_CS_AS_KS_WS,
	AccAuxName VARCHAR(500),
	Unchecked DECIMAL(20,2),
	StepOfSample INT,
	SampleSelectedYesNo INT,
	TestProgram VARCHAR(100),
	TestProjectMethod VARCHAR(100),
	SampleNumber INT,
	SampleSelectedType INT,
	RjeID VARCHAR(100));

-- 样本分层的信息
create table #Level(
	AccountCode VARCHAR(100) COLLATE Chinese_PRC_CS_AS_KS_WS);

-- 在发生额抽样返回结果集的基础上，加上“逐行累加的和”字段UncheckedSum
create table #Voucher(
	ID int,
	UncheckedSum Decimal(20, 2),
	VoucherID varchar(200) COLLATE Chinese_PRC_CS_AS_KS_WS,
	IncNo varchar(200),
	AccountCode varchar(100) COLLATE Chinese_PRC_CS_AS_KS_WS,
	ProjectCode varchar(200) COLLATE Chinese_PRC_CS_AS_KS_WS,
	Jd int,
	Zy nvarchar(1000),
	pzh varchar(100),
	pzrq datetime,
	Unchecked decimal(20,2),
	StepofSample int,
	SampleSelectedYesno int,
	SampleNumber int,
	SampleSelectedType int,
	TBGrouping varchar(100) COLLATE Chinese_PRC_CS_AS_KS_WS,
	dfkm varchar(100) COLLATE Chinese_PRC_CS_AS_KS_WS);

-- 此表中，dfkm 是 Code，dfkmName 是 Name，因此与AccountCode连接时用dfkm，但是返回时用的是dfkmName，
--     为了与原定义的返回结果集的字段名一致，返回dfkmName时要改名为dfkm：dfkmName as dfkm
create table #Voucher2(
	ID int,
	UncheckedSum Decimal(20, 2),
	VoucherID varchar(200),
	IncNo varchar(200),
	AccountCode varchar(100) COLLATE Chinese_PRC_CS_AS_KS_WS,
	ProjectCode varchar(200) COLLATE Chinese_PRC_CS_AS_KS_WS,
	Jd int,
	Zy nvarchar(1000),
	pzh varchar(100),
	pzrq datetime,
	Unchecked decimal(20,2),
	StepofSample int,
	SampleSelectedYesno int,
	SampleNumber int,
	SampleSelectedType int,
	TBGrouping varchar(100) COLLATE Chinese_PRC_CS_AS_KS_WS,
	dfkm varchar(100) COLLATE Chinese_PRC_CS_AS_KS_WS,
	dfkmName nvarchar(500));


-- 初始化
insert into #AccAux
	select a.TBGrouping,
			a.AccountCode,
			a.AuxiliaryCode,
			a.AccAuxName,
			a.YEFX * a.Unchecked,
			isnull(b.Stepofsample, 0),
			isnull(b.SampleSelectedYesNo, 0),
			DBO.ConvertMeterialityProgramtoStr(b.MaterialityProgram),
			DBO.ConvertSelectSampleMethodtoStr(b.SelectSampleMethod),
			0,
			b.SampleSelectedType,
			''
		from VIEW_TBDetail a, TBDetailExtra b
		where a.ID=b.ID
			and a.ProjectID = @pid
			and a.FSCode in (select fscode from GetAllChildFSInfo(@pid, @fscode))
			and a.IsMx = 1;

--准备样本层信息，把金额=0的也展示，以便用户可以自主选择样本
if (@sampleType = 0)
	insert into #Level
		select distinct b.AccountCode
			from TBdetailExtra a
				join view_TBdetail b
				on a.ID=b.ID
			where a.ProjectID = @pid
				and isaux=0
				and b.fscode in (select fscode from GetAllChildFSInfo(@pid, @fscode))
				and SelectedSampleLebelYesNo = 1;
--				and b.unchecked != 0;
else
	insert into #Level
		select distinct b.AccountCode	
			from TBdetailExtra a
				join view_TBdetail b
				on a.id=b.id
			where a.ProjectID = @pid
				and isaux=0
				and b.fscode in (select fscode from GetAllChildFSInfo(@pid, @fscode))
				and ((@sampleType = 1 and a.DrSelectedSampleLebelYesNo = 1) or (@sampleType = 2 and a.CrSelectedSampleLebelYesNo = 1));
--				and ((@sampleType = 1 and b.jfje != 0) or (@sampleType = 2 and b.dfje != 0));


-- 把“样本分层信息”所对应的“页级科目”的TBGrouping都修改为“样本分层信息”的AccountCode值，
--     以便体现样本组织关系
update #AccAux set TbGrouping = b.AccountCode
	from #Level b
	where #AccAux.AccountCode like b.AccountCode + '%'
		and #AccAux.AccountCode != b.AccountCode;

-- 如果AccountCode已经是样本层，则把TBGrouping指向自己，因为在界面上，是用TBGrouping与样本层关联的
update #AccAux set TbGrouping = AccountCode
	where AccountCode in
		(select * from #Level);

/*-- 删除样本分层组织中没有覆盖到的页级科目
delete #AccAux
	where (TbGrouping not in
			(select * from #Level))
		and (AccountCode not in
			(select * from #Level));
*/


declare @J decimal(20, 2);
if (@sampleType = 0)
	select @J = ValueofJ from PMValueofJ where ProjectID = @pid and FSCode = @fscode;
else
	select @J = ValueofJ from PMValueofJ where ProjectID = @pid and FSCode = @fscode and TestObject = @sampleType;


-- 按过滤条件搜索，过滤条件与其它情况不兼容（忽略@page、@size、@tbgrouping）
if (len(rtrim(@filterstr)) > 0)
begin
	if (@sampleType = 0)
		select TbGrouping,
				AccountCode,
				AuxCode,
				AccAuxName,
				Unchecked,
				StepOfSample,
				SampleSelectedYesNo,
				TestProgram,
				TestProjectMethod,
				SampleNumber,
				SampleSelectedType,
				RjeID
			from #AccAux
			where AccAuxName like '%' + @filterstr + '%'
			order by Unchecked desc;
	else
		insert into #Voucher2
			select row_number() over (order by v.Fsje * v.Jd desc, v.AccountCode, v.ProjectCode, v.VoucherID),
					0,
					v.VoucherID,
					v.IncNo,
					v.AccountCode,
					isnull(v.ProjectCode, ''),
					v.Jd,
					v.Zy,
					isnull(v.pzlx, '') + isnull(v.pzh, ''),
					v.Date,
					v.Fsje * v.Jd,
					isnull(v.StepofSample, 0),
					isnull(v.SampleSelectedYesno, 0),
					dbo.GetStylebookScopeNumber(v.Fsje, @J),
					isnull(v.SampleSelectedType, 0),
					a.TBGrouping,
					v.dfkm,
					''
				from TBVoucher v, #AccAux a
				where v.AccountCode = a.AccountCode
					and isnull(v.ProjectCode, '') = a.AuxCode
					and v.ProjectID = @pid
					and v.Jd = (case when @sampleType = 1 then 1 else -1 end)
					and v.Zy like '%' + @filterstr + '%'
					and v.FLLX = 1;

end		-- 按关键词搜索结束
else
begin
-- 按比例抽样开始

-- @page = -1，展示已有的抽样记录，并增加10个待选样本（按金额从大到小）
if (@page = -1)
begin
	declare @maxid int;

	if (@sampleType = 0)	-- ((@page > 0) && (@sampleType = 0))
	begin
		insert into #AccAux2
			select row_number() over (order by SampleSelectedType desc, SampleSelectedYesNo desc, Unchecked desc, AccountCode, AuxCode),
					0,
					*
				from #AccAux
				where Unchecked != 0;

		select @maxid = count(*) from #AccAux2
			where SampleSelectedType != 0
				and SampleSelectedYesNo != 0;

		select TbGrouping,
				AccountCode,
				AuxCode,
				AccAuxName,
				Unchecked,
				StepOfSample,
				SampleSelectedYesNo,
				TestProgram,
				TestProjectMethod,
				SampleNumber,
				SampleSelectedType,
				RjeID
			from #AccAux2
			where ID <= @maxid + 10;

	end
	else	-- ((@page > 0) && (@sampleType != 0))
	begin
		insert into #Voucher
			select row_number() over (order by v.SampleSelectedType desc, v.SampleSelectedYesNo desc, v.Fsje * v.Jd desc, v.AccountCode, v.ProjectCode, v.VoucherID),
					0,
					v.VoucherID,
					v.IncNo,
					v.AccountCode,
					isnull(v.ProjectCode, ''),
					v.Jd,
					v.Zy,
					isnull(v.pzlx, '') + isnull(v.pzh, ''),
					v.Date,
					v.Fsje * v.Jd,
					isnull(v.StepofSample, 0),
					isnull(v.SampleSelectedYesno, 0),
					dbo.GetStylebookScopeNumber(v.Fsje, @J),
					isnull(v.SampleSelectedType, 0),
					a.TBGrouping,
					v.dfkm
				from TBVoucher v, #AccAux a
				where v.AccountCode = a.AccountCode
					and isnull(v.ProjectCode, '') = a.AuxCode
					and v.ProjectID = @pid
					and v.Jd = (case when @sampleType = 1 then 1 else -1 end)
					and v.Fsje != 0
					and v.FLLX = 1;

		select @maxid = count(*) from #Voucher
			where SampleSelectedType != 0
				and SampleSelectedYesNo != 0;

		insert into #Voucher2
			select *,
				''
			from #Voucher
			where ID <= @maxid + 10;
	end		-- (@sampleType != 0)

end

-- @page = 0，代表按比例抽样的第一次抽样，一般为获取比例范围（@size值）内的全部结果；
--     如果已经有手工选中样本，则在手工选中样本基础上增加至设定比例；
--     如果手工选中样本超出设定比例，则全部返回手工选中样本
if (@page = 0)
begin
	declare @UncheckedTop decimal(20, 2);
	declare @id int;

	if (@sampleType = 0)	-- ((@page = 0) && (@sampleType = 0))
	begin
		--清理按比例抽样的原有样本
		update b
			set b.SampleSelectedType = 0
		from VIEW_TBDetail a, TBDetailExtra b
		where a.ID = b.ID
			and a.ProjectID = @pid
			and a.FSCode in (select fscode from GetAllChildFSInfo(@pid, @fscode))
			and a.IsMx = 1
			and b.SampleSelectedType = 2;

		update #AccAux set SampleSelectedType = 0
			where SampleSelectedType = 2;

		select @UncheckedTop = isnull(sum(Unchecked), 0) * @size / 100 from #AccAux;

		insert into #AccAux2
			select row_number() over (order by Unchecked desc, AccountCode, AuxCode) as id,
					sum(Unchecked) over (order by Unchecked desc, AccountCode, AuxCode) as UncheckedSum,
					a.*
				from #AccAux a
				where (a.Unchecked != 0 or a.SampleSelectedType != 0);

		if(@size > 0)
		begin
			select @id = min(ID) from #AccAux2
				where UncheckedSum >= @UncheckedTop;
		end
		else
		begin
			set @id = 0;
		end

		update b
			set b.SampleSelectedType = 2
			from VIEW_TBDetail a, TBDetailExtra b, #AccAux2 c
			where a.ID = b.ID
				and a.ProjectID = @pid
				and a.FSCode in (select fscode from GetAllChildFSInfo(@pid, @fscode))
				and a.IsMx = 1
				and a.AccountCode = c.AccountCode
				and a.AuxiliaryCode = c.AuxCode
				and c.ID <= @id;

		update #AccAux2
			set SampleSelectedType = 2
			where ID <= @id;

		select TbGrouping,
				AccountCode,
				AuxCode,
				AccAuxName,
				Unchecked,
				StepOfSample,
				SampleSelectedYesNo,
				TestProgram,
				TestProjectMethod,
				SampleNumber,
				SampleSelectedType,
				RjeID
			from #AccAux2
			where SampleSelectedType != 0;
	end
	else	-- ((@page = 0) && (@sampleType != 0))
	begin
		--清理按比例抽样的原有样本
		update v
			set v.SampleSelectedType = 0
			from VIEW_TBDetail a, TBDetailExtra b, TBVoucher v
			where a.ID=b.ID
				and a.ProjectID = @pid
				and a.FSCode in (select fscode from GetAllChildFSInfo(@pid, @fscode))
				and a.IsMx = 1
				and v.AccountCode = a.AccountCode
				and isnull(v.ProjectCode, '') = a.AuxiliaryCode
				and v.ProjectID = @pid
				and v.Jd = (case when @sampleType = 1 then 1 else -1 end)
				and v.FLLX = 1
				and v.SampleSelectedType = 2;

		select @UncheckedTop = isnull(sum(v.Fsje * v.Jd), 0) * @size / 100
			from TBVoucher v, #AccAux a
			where v.AccountCode = a.AccountCode
				and isnull(v.ProjectCode, '') = a.AuxCode
				and v.ProjectID = @pid
				and v.Jd = (case when @sampleType = 1 then 1 else -1 end)
				and v.FLLX = 1;

		insert into #Voucher
			select row_number() over (order by v.Fsje * v.Jd desc, v.AccountCode, v.ProjectCode, v.VoucherID),
					sum(v.Fsje * v.Jd) over (order by v.Fsje * v.Jd desc, v.AccountCode, v.ProjectCode, v.VoucherID),
					v.VoucherID,
					v.IncNo,
					v.AccountCode,
					isnull(v.ProjectCode, ''),
					v.Jd,
					v.Zy,
					isnull(v.pzlx, '') + isnull(v.pzh, ''),
					v.Date,
					v.Fsje * v.Jd,
					isnull(v.StepofSample, 0),
					isnull(v.SampleSelectedYesno, 0),
					dbo.GetStylebookScopeNumber(v.Fsje, @J),
					isnull(v.SampleSelectedType, 0),
					a.TBGrouping,
					v.dfkm
				from TBVoucher v, #AccAux a
				where v.AccountCode = a.AccountCode
					and isnull(v.ProjectCode, '') = a.AuxCode
					and v.ProjectID = @pid
					and v.Jd = (case when @sampleType = 1 then 1 else -1 end)
					and (v.Fsje != 0 or v.SampleSelectedType != 0)
					and v.FLLX = 1;

		if(@size > 0)
		begin
			select @id = min(ID) from #Voucher
				where UncheckedSum >= @UncheckedTop;
		end
		else
		begin
			set @id = 0;
		end

		update v
			set v.SampleSelectedType = 2
			from TBVoucher v, #Voucher v1
			where v.VoucherID = v1.VoucherID
				and v.ProjectID = @pid
				and v1.ID <= @id;

		update #Voucher set SampleSelectedType = 2
			where ID <= @id;

		insert into #Voucher2
			select *,
				''
				from #Voucher
				where SampleSelectedType != 0;
	end
end		-- @page = 0

-- @page > 0，对特定TBGrouping，指定起始位置按从大到小选取更多的待选样本，@page为起始行号，@size为行数
if(@page > 0)begin
	if (@sampleType = 0)	-- ((@page > 0) && (@sampleType = 0))
	begin
		insert into #AccAux2
			select row_number() over (order by SampleSelectedType desc, Unchecked desc, AccountCode, AuxCode),
					0,
					*
				from #AccAux
				where TbGrouping = @tbgrouping
					--and Unchecked != 0;

		select TbGrouping,
				AccountCode,
				AuxCode,
				AccAuxName,
				Unchecked,
				StepOfSample,
				SampleSelectedYesNo,
				TestProgram,
				TestProjectMethod,
				SampleNumber,
				SampleSelectedType,
				RjeID
			from #AccAux2
			where ID >= @page
				and ID < @page + @size;
	end
	else	-- ((@page > 0) && (@sampleType != 0))
	begin
		insert into #Voucher
			select row_number() over (order by v.SampleSelectedType desc, v.Fsje * v.Jd desc, v.AccountCode, v.ProjectCode, v.VoucherID),
					0,
					v.VoucherID,
					v.IncNo,
					v.AccountCode,
					isnull(v.ProjectCode, ''),
					v.Jd,
					v.Zy,
					isnull(v.pzlx, '') + isnull(v.pzh, ''),
					v.Date,
					v.Fsje * v.Jd,
					isnull(v.StepofSample, 0),
					isnull(v.SampleSelectedYesno, 0),
					dbo.GetStylebookScopeNumber(v.Fsje, @J),
					isnull(v.SampleSelectedType, 0),
					a.TBGrouping,
					v.dfkm
				from TBVoucher v, #AccAux a
				where v.AccountCode = a.AccountCode
					and isnull(v.ProjectCode, '') = a.AuxCode
					and v.ProjectID = @pid
					and v.Jd = (case when @sampleType = 1 then 1 else -1 end)
					and a.TBGrouping = @tbgrouping
					--and v.Fsje != 0
					and v.FLLX = 1;

		insert into #Voucher2
			select *,
				''
			from #Voucher
			where ID >= @page
				and ID < @page + @size;
	end		-- (@sampleType != 0)
end		-- (@page > 0)

end		-- 按比例抽样结束


if (@sampleType != 0)
begin
	-- 把dfkm的Code改为Name：
	-- 如果dfkm形如“1234,5678,90ab”，则取出左侧部分“1234”，把对应的科目名称写入dfkmName，
	--     同时把dfkm去掉左侧部分改为“5678,90ab”；
	--     以此类推直至完成
	while (1=1)
	begin
		update #Voucher2
			set dfkmName = (case when dfkmName = '' then a.AccAuxName
								else dfkmName + ' / ' + a.AccAuxName end),
				dfkm = (case when charindex(',', dfkm) = 0 then '' 
							else right(dfkm, len(dfkm) - charindex(',', dfkm)) end)
			from TBDetail a
			where
				  dfkm != ''
				and a.isaux = 0
				and a.ProjectID = @pid
				and (case when charindex(',', dfkm) = 0 then dfkm
						else left(dfkm, charindex(',', dfkm) - 1) end)
					= a.AccountCode
				 ;

		if (@@ROWCOUNT = 0)
			break;
	end

	select distinct
	VoucherID,
			IncNo,
			AccountCode,
			ProjectCode,
			Jd,
			Zy,
			pzh,
			pzrq,
			Unchecked,
			StepofSample,
			SampleSelectedYesno,
			SampleNumber,
			SampleSelectedType,
			TBGrouping,
			dfkmName as dfkm
		from #Voucher2;
end

end try
begin catch

select ERROR_PROCEDURE() as [procedure], ERROR_LINE() as line, ERROR_MESSAGE() as [message];

end catch

end


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetCarryforwardAndjlr')
   BEGIN
       DROP  Procedure  GetCarryforwardAndjlr
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2010 Huapu (Beijing)
  Customer  : Huapu Chinese,bj
  Project   : EAS -获取表13. Carryforward值确定（0 账结法 1 表结法）
  Created   : 2013/1/9 by jpeng
  Updated   : -
  Version   : 1.0.0
********************************************************************************/
CREATE Procedure [dbo].[GetCarryforwardAndjlr]
@PID varchar(100)

AS

declare @Carryforward int,@jlr decimal(20,2),@code	varchar(max),@Balancevalue decimal(20,2),@BalanceJlr decimal(20,2)

select @Carryforward = carryforward from PIDInformation where projectid=@pid
select @Balancevalue = sum(unchecked) from  View_TBFS where projectid=@pid and fscode in ('50000','60000','70000') 
declare	@year	int,@PeriodEndDate datetime,@clientid varchar(100)
select @year=year(PeriodEndDate),@PeriodEndDate=PeriodEndDate,	@clientid=clientid
			from neweasv5.dbo.projectsinfo where projectid=@pid


select @BalanceJlr=sum(vo.dfje)-sum(vo.jfje) from TBVoucher vo 
      inner join View_TBDetail ac on ac.accountcode=vo.accountcode and ac.projectid=vo.projectid
	  and ac.projectID=@pid and ac.isaux=0 and ac.fscode like '8%' AND vo.date<=@PeriodEndDate	and year(vo.date)=@year	and vo.clientid=@clientid

if(@Balancevalue + @BalanceJlr=0 and @Carryforward=0) 
    select @jlr =dfje from  View_TBFS where projectid=@pid and fscode='74200'
else if(@Balancevalue<>0 and @BalanceJlr=0) 
    select @jlr =dfje from  View_TBFS where projectid=@pid and fscode='74200'
else if (@Balancevalue<>0)
    set @jlr=@BalanceJlr
else if(@Balancevalue=0 and @Carryforward=0) 
    select @jlr =dfje from  View_TBFS where projectid=@pid and fscode='74200'
else if(@Balancevalue=0 and @Carryforward=1) 
    select @jlr =dfje-jfje from  View_TBFS where projectid=@pid and fscode='80000'

select isnull(@Carryforward,0) as Carryforward,isnull(@jlr,0) as jlr,isnull(@BalanceJlr,0) as BalanceJlr
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetChildFsInfo')
   BEGIN
       DROP  Procedure  GetChildFsInfo
	END
GO
Create Procedure [dbo].[GetChildFsInfo]
@ProjectID	varchar(50),
@FSCode	varchar(50)
as
                with temp as(
                   select
                        FSCode,
                        FSName, 
                        IsMx
                    from 
                        view_tbfs 
                    where 
                        ProjectID=@ProjectID
                        and FSCode=@FSCode
                   union  all
                   select
                        b.FSCode,
                        b.FSName, 
                        b.IsMx
                    from 
                        temp a,view_tbfs b
                    where 
                         a.FSCode=b.TBGrouping and
                         b.ProjectID=@ProjectID
                    )
                  select * from  temp






GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetClientAllFSConfig')
   BEGIN
       DROP  Procedure  GetClientAllFSConfig
	END
GO
/********************************************************************************
  Database  : EASV5
  Copyright : 2017 Huapu 
  Customer  : Huapu 
  Project   : 获取当前项目和所有子项目的所有报表项目信息
  Created   : 20170523 BY HUASHENG
  Version   : 1.0.0
********************************************************************************/
CREATE Procedure GetClientAllFSConfig
      @projectid VARCHAR(100)

AS 
    BEGIN
		DECLARE @T_Project table(ProjectID varchar(100) collate Chinese_PRC_CS_AS_KS_WS)
		DECLARE @T_Result table(FSCode varchar(100) collate Chinese_PRC_CS_AS_KS_WS,FSName varchar(100), IsChild int);

		with temp as(
		select ProjectID,UpperProjectID,ProjectName,ProjectStatus,ClientChineseName from NEWEASV5.dbo.ProjectsInfo where ProjectID=@projectid
		union all 
		select b.ProjectID,b.UpperProjectID,b.ProjectName,b.ProjectStatus ,b.ClientChineseName from temp a ,NEWEASV5.dbo.ProjectsInfo b
		where a.ProjectID = b.UpperProjectID
		)	
		
		INSERT 	@T_Project SELECT ProjectID FROM temp WHERE PROJECTID<>@projectid
		INSERT @T_Result SELECT FSCODE,FSNAME ,0 AS ISCHILD FROM DBO.FSCODECONFIG WHERE PROJECTID=@projectid AND ISUSE=1
		INSERT @T_Result SELECT T.FSCODE,T.FSNAME ,1 AS ISCHILD FROM
			(SELECT DISTINCT FSCODE,FSNAME FROM DBO.FSCODECONFIG WHERE ISUSE=1 AND FSCODE NOT IN (SELECT FSCODE FROM @T_Result)
				AND PROJECTID IN (SELECT PROJECTID FROM @T_Project)) T

	    SELECT * FROM @T_Result ORDER BY FSCODE
    END






GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetCMaterialityProgram')
   BEGIN
       DROP  Procedure  GetCMaterialityProgram
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu Baden
  Project   : EAS -只供50文档c类答案使用,根据jfje<>0,dfje<>0返回存放样本方法，抽样程序字段
  Created   : 2011/10/12 	by dengll
  Updated   : 2011/10/20 	by dengll
  Version   : 1.0.1
********************************************************************************/
CREATE PROCEDURE GetCMaterialityProgram
    @ProjectID VARCHAR(100) ,
    @fscode VARCHAR(100),
    @Lab	VARCHAR(100)	OUTPUT,
    @MP	VARCHAR(100)	OUTPUT,
    @SM	VARCHAR(100)	OUTPUT
AS
	DECLARE	@CODE	VARCHAR(100)
	IF	EXISTS(SELECT	1 FROM DBO.VIEW_TBDetail	where projectID=@ProjectID and	ACCOUNTCODE=@fscode and IsAux = 0 and SourceFSCode = '')BEGIN
		SELECT	@CODE=FSCODE FROM DBO.VIEW_TBDetail	where projectID=@ProjectID and	ACCOUNTCODE=@fscode and IsAux = 0 and SourceFSCode = ''
	END	ELSE	BEGIN
		SET	@CODE=@FSCODE
	END
	
	IF	EXISTS(SELECT 1 FROM DBO.View_TBFS	where projectID=@ProjectID and FSCODE=@CODE	AND JFJE<>0)
		BEGIN
			SET @Lab='DrSelectedSampleLebelYesNo'
			SET	@MP='DrMaterialityProgram'
			SET	@SM='DrSelectSampleMethod'
		END
	ELSE	IF	EXISTS(SELECT 1 FROM DBO.View_TBFS	where projectID=@ProjectID and FSCODE=@CODE	AND DFJE<>0)
		BEGIN
			SET @Lab='CrSelectedSampleLebelYesNo'
			SET	@MP='CrMaterialityProgram'
			SET	@SM='CrSelectSampleMethod'
		END



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetCMaterialityProgramIndex')
   BEGIN
       DROP  Procedure  GetCMaterialityProgramIndex
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu Baden
  Project   : EAS -获取c类的样本层索引号
  Created   : 2012/08/28 	by dengll
  Version   : 1.0.0
********************************************************************************/
CREATE Procedure GetCMaterialityProgramIndex
 @pid VARCHAR(100) ,
    @fscode VARCHAR(100),
    @indexCode	VARCHAR(100)	OUTPUT
AS

	DECLARE	@CODE	VARCHAR(100)
	IF	EXISTS(SELECT	1 FROM DBO.VIEW_TBDetail WHERE ProjectID=@pid and ACCOUNTCODE=@fscode and IsAux = 0 and SourceFSCode = '')BEGIN
		SELECT	@CODE=FSCODE FROM DBO.VIEW_TBDetail WHERE ProjectID=@pid and ACCOUNTCODE=@fscode and IsAux = 0 and SourceFSCode = ''
	END	ELSE	BEGIN
		SET	@CODE=@FSCODE
	END
	
	IF	EXISTS(SELECT 1 FROM DBO.View_TBFS WHERE ProjectID=@pid and FSCODE=@CODE	AND JFJE<>0)
		BEGIN
			SET	@indexCode='DrMaterialityProgramIndex'
		END
	ELSE	IF	EXISTS(SELECT 1 FROM View_TBFS WHERE ProjectID=@pid and FSCODE=@CODE	AND DFJE<>0)
		BEGIN
			SET	@indexCode='CrMaterialityProgramIndex'
		END
	


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetCombinationNoteCheckByFSCode')
   BEGIN
       DROP  Procedure  GetCombinationNoteCheckByFSCode
	END
GO

/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -Module AuditPrograml
  Created   : Huasheng 2016/07/27
  Updated   : -
  Version   : 1.0.0
  说明：获取合并附注校验结果
********************************************************************************/

Create PROCEDURE GetCombinationNoteCheckByFSCode
	@ProjectID	varchar(100),
	@struCode varchar(50),
	@fsCode varchar(50)
AS
BEGIN

declare @table_result table(ID int identity not null, ProjectID varchar(100) collate Chinese_PRC_CS_AS_KS_WS,ProjectName varchar(100),
	FsCode varchar(100) collate Chinese_PRC_CS_AS_KS_WS,FsName varchar(100),FormCode varchar(100) collate Chinese_PRC_CS_AS_KS_WS
,FormName varchar(100),ColumnCode varchar(100) collate Chinese_PRC_CS_AS_KS_WS,NoteColumnName varchar(100) collate Chinese_PRC_CS_AS_KS_WS
,FinancialAmount decimal(20,2),NoteCode varchar(100),NoteAmount decimal(20,2),DiffAmount decimal(20,2)) 

declare @table_form table(formCode varchar(50) collate Chinese_PRC_CS_AS_KS_WS,ColumnCode varchar(100) collate Chinese_PRC_CS_AS_KS_WS
,NoteColumnName varchar(500),NoteCode varchar(100) collate Chinese_PRC_CS_AS_KS_WS)
declare @index int,@row_count int

insert @table_form
select distinct t1.FormCode,t1.ColumnCode,t1.Title as NoteColumnName,t2.NoteCode from NoteColumnAttribute t1 left join NoteRowAttribute t2 on t1.ProjectID=t2.ProjectID and t1.FormCode=t2.FormCode
where t1.ConnectName='[checked]' and t1.IsCheckRow=1 and t1.projectid=@projectid and t1.FSCode=@fsCode and t2.IsCheckRow=1

insert into @table_result
select t2.ProjectID,null as ProjectName,FSCode,null as FsName,t1.formCode,t2.FormName,t1.ColumnCode,t1.NoteColumnName,null as FinancialAmount,t1.NoteCode,null as NoteAmount,null as DiffAmount
 from @table_form t1 left join NoteForm t2 on t1.formCode=t2.FormCode where t2.ProjectID=@projectID and t2.FSCode=@fsCode

set @row_count=@@ROWCOUNT
set @index=1

declare @formCode varchar(100),@projectName varchar(500),@fsName varchar(500),@FinancialAmount decimal(20,2),@NoteAmount decimal(20,2)

while(@index<=@row_count) begin
	select top 1 @formCode=formcode from @table_result where id=@index	
	select top 1 @projectName=projectName from neweasv5.dbo.ProjectsInfo where ProjectID=@projectID
	select top 1 @fsName=fsname from Atspackage.DBO.AudCasTBFS where FSCode=@fsCode
	select top 1 @FinancialAmount=checkedCFSdata*yefx from TBCombination where ProjectID=@projectID and StruCode=@struCode and fscode=@fscode
	select top 1 @NoteAmount=t1.CheckData from ComNoteData t1 left join NoteRowAttribute t2 
		on t1.ProjectID=t2.ProjectID and t1.FormCode=t2.FormCode and t1.NoteCode=t2.NoteCode
		where t1.ProjectID=@projectID and t1.StruCode=@struCode and t1.FormCode=@formCode and t2.IsCheckRow=1

	update @table_result set ProjectName=@projectName,FsName=@fsName,FinancialAmount=@FinancialAmount,NoteAmount=@NoteAmount
		where FsCode=@fsCode and FormCode=@formCode
	set @index=@index+1
end

update @table_result set DiffAmount=FinancialAmount-NoteAmount

select ProjectID,ProjectName,FsCode,FsName,FormCode,FormName,ColumnCode,NoteColumnName,
isnull(FinancialAmount,0) as FinancialAmount,NoteCode,isnull(NoteAmount,0) as NoteAmount,isnull(DiffAmount,0) as DiffAmount
 from @table_result

END 






GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetCombinationNoteCheckInfo')
   BEGIN
       DROP  Procedure  GetCombinationNoteCheckInfo
	END
GO

/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -Module AuditPrograml
  Created   : Huasheng 2016/07/27
  Updated   : -
  Version   : 1.0.0
  说明：获取合并附注校验结果
********************************************************************************/

Create PROCEDURE GetCombinationNoteCheckInfo
	@ProjectID	varchar(100),
	@struCode varchar(50)
AS
BEGIN

declare @table_result table(ID int identity not null, ProjectID varchar(100),ProjectName varchar(100),FsCode varchar(100),FsName varchar(100),FormCode varchar(100)
,FormName varchar(100),ColumnCode varchar(100),NoteColumnName varchar(100),FinancialAmount decimal(20,2),NoteCode varchar(100),NoteAmount decimal(20,2),DiffAmount decimal(20,2)) 

declare @table_form table(formCode varchar(50) collate Chinese_PRC_CS_AS_KS_WS,ColumnCode varchar(100) collate Chinese_PRC_CS_AS_KS_WS,
	NoteColumnName varchar(500) collate Chinese_PRC_CS_AS_KS_WS,NoteCode varchar(100) collate Chinese_PRC_CS_AS_KS_WS)
declare @index int,@row_count int

insert @table_form
select distinct t1.FormCode,t1.ColumnCode,t1.Title as NoteColumnName,t2.NoteCode  from NoteColumnAttribute t1 left join NoteRowAttribute t2 on t1.ProjectID=t2.ProjectID and t1.FormCode=t2.FormCode
where t1.ConnectName='[checked]' and t1.IsCheckRow=1 and t1.projectid=@projectid and t2.IsCheckRow=1

insert into @table_result
select t2.ProjectID,null as ProjectName,FSCode,null as FsName,t1.formCode,t2.FormName,t1.ColumnCode,t1.NoteColumnName,null as FinancialAmount,t1.NoteCode,null as NoteAmount,null as DiffAmount
 from @table_form t1 left join NoteForm t2 on t1.formCode=t2.FormCode where t2.ProjectID=@projectID

set @row_count=@@ROWCOUNT
set @index=1

declare @formCode varchar(100),@projectName varchar(500),@fsName varchar(500),@fsCode varchar(50),@FinancialAmount decimal(20,2),@NoteAmount decimal(20,2)

while(@index<=@row_count) begin
	select top 1 @fsCode=fsCode,@formCode=formcode from @table_result where id=@index	
	select top 1 @projectName=projectName from neweasv5.dbo.ProjectsInfo where ProjectID=@projectID
	select top 1 @fsName=fsname from Atspackage.DBO.AudCasTBFS where FSCode=@fsCode
	select top 1 @FinancialAmount=checkedCFSdata*yefx from TBCombination where ProjectID=@projectID and StruCode=@struCode and fsCode=@fsCode
	select top 1 @NoteAmount=t1.CheckData from ComNoteData t1 left join NoteRowAttribute t2 
		on t1.ProjectID=t2.ProjectID and t1.FormCode=t2.FormCode and t1.NoteCode=t2.NoteCode
		where t1.ProjectID=@projectID and t1.StruCode=@struCode and t1.FormCode=@formCode and t2.IsCheckRow=1

	update @table_result set ProjectName=@projectName,FsName=@fsName,FinancialAmount=@FinancialAmount,NoteAmount=@NoteAmount
		where FsCode=@fsCode and FormCode=@formCode
	set @index=@index+1
end

update @table_result set DiffAmount=FinancialAmount-NoteAmount

select ProjectID,@struCode as StruCode,ProjectName,FsCode,FsName,FormCode,FormName,ColumnCode,NoteColumnName,
isnull(FinancialAmount,0) as FinancialAmount,NoteCode,isnull(NoteAmount,0) as NoteAmount,isnull(DiffAmount,0) as DiffAmount
 from @table_result ORDER BY FSCODE

END 






GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetContentofsampleTestInfo')
   BEGIN
       DROP  Procedure  GetContentofsampleTestInfo
	END
GO

/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -获取测试内容
  Created   : 20150413 by dengll
  ********************************************************************************/

CREATE Procedure GetContentofsampleTestInfo
	@pid	VARCHAR(100),
	@FsCode nvarchar(50),
	@FunctionType varchar(10)
AS

if(@FunctionType ='A')
	SELECT
		t.contentID,
		@FsCode as fscode,
		t.contentName,
		@FunctionType AS functionType,
		isnull(sti.NumberofAE,0)	as iNumberofAE,
		t.NumberofAE,
		isnull(sti.DateofAE,0)	as iDateofAE ,
		t.DateofAE,
		isnull(sti.AmountofAE,0)	as iAmountofAE,
		t.AmountofAE,
		isnull(sti.QuantityofAE,0)	as iQuantityofAE,
		t.QuantityofAE,
		isnull(sti.AuditEvidence,0)	as iAuditEvidence,
		t.AuditEvidence,
		isnull(st.display,0)	as	display,
		t.copyofEvidence,
		isnull(sti.copyofEvidence,0)	as	icopyofEvidence,
		t.Scope
	FROM NeweasV5.dbo.EasSampleTest	t  
	left join  DBO.ContentofsampleTestInfo	sti 
	on t.contentid = sti.contentID and sti.fscode =@FsCode	and	sti.FunctionType=@FunctionType and sti.projectID=@pid
	left join DBO.ContentofSampleTest st
	on t.contentid = st.contentID and st.fscode =@FsCode and	st.FunctionType=@FunctionType and st.projectID=@pid
	where	t.scope like '%A%'
ELSE
	SELECT
		t.contentID,
		@FsCode as fscode,
		t.contentName,
		@FunctionType AS functionType,
		isnull(sti.NumberofAE,0)	as iNumberofAE,
		t.NumberofAE,
		isnull(sti.DateofAE,0)	as iDateofAE ,
		t.DateofAE,
		isnull(sti.AmountofAE,0)	as iAmountofAE,
		t.AmountofAE,
		isnull(sti.QuantityofAE,0)	as iQuantityofAE,
		t.QuantityofAE,
		isnull(sti.AuditEvidence,0)	as iAuditEvidence,
		t.AuditEvidence,
		isnull(st.display,0)	as	display,
		t.copyofEvidence,
		isnull(sti.copyofEvidence,0)	as	icopyofEvidence,
		t.Scope
	FROM NeweasV5.dbo.EasSampleTest	t
	left join  DBO.ContentofsampleTestInfo	sti 
	on t.contentid = sti.contentID and sti.fscode =@FsCode	and	sti.FunctionType=@FunctionType and sti.projectID=@pid
	left join DBO.ContentofSampleTest st
	on t.contentid = st.contentID and st.fscode =@FsCode and	st.FunctionType=@FunctionType and st.projectID=@pid
	where	t.scope like '%BC%'





GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetCutoffTestingV5')
   BEGIN
       DROP  Procedure  GetCutoffTestingV5
	END
GO

/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : 获取.OS 从账到单的数据
  Created   : 
  
  
********************************************************************************/

CREATE Procedure [dbo].GetCutoffTestingV5
@projectid	varchar(100),
@Code	varchar(100),
@R		decimal(20,2)
	
AS
SET NOCOUNT ON
	Declare	@sql nvarchar(4000),
	@ROWS	int,@FSCode varchar(255)	

	
	create table #CutofftestTemp (
   VoucherID     varchar(50)     collate Chinese_PRC_CS_AS_KS_WS,
   ProjectID     varchar(100)    collate Chinese_PRC_CS_AS_KS_WS,
   FSCode        varchar(50)     collate Chinese_PRC_CS_AS_KS_WS,
   AccountCode   varchar(100)    collate Chinese_PRC_CS_AS_KS_WS,
   AccountName   varchar(100)    collate Chinese_PRC_CI_AS,
   ProjectCode   varchar(100)    collate Chinese_PRC_CS_AS_KS_WS,
   IsBefore      int             ,
   Sample        int             ,
   OsDate        datetime        ,
   PZH           VARCHAR(100)    ,
   dfkm          varchar(100)    collate Chinese_PRC_CS_AS_KS_WS,
   JD            INT             ,
   JE            decimal(20,2)   ,
   ZY            varchar(255)    )

   
   create table  --用于判断是否生成过数据
   #HasData(
   HasBefore INT  ,--截止日前是否有数据
   HasAfter  INT   --截止日后是否有数据
   )
	insert into  #HasData(HasBefore,HasAfter) values(0,0)

	set @ROWS	=isnull(dbo.GetCutoffTestingNumber(@R),null)
	set @FSCode=@Code

	exec  UpdateVoucherProjectCode @projectid, @FSCode, 1
  
--若不存在（截止日前）截止测试数据，按审计风险模型添加
IF not exists(SELECT 1 from	Cutofftest A where a.projectid=@projectid and fscode=@FSCode AND IsBefore=1) 
  BEGIN
    WITH a1 AS(
    select  
      ID=Row_Number() OVER(ORDER BY a.date desc,A.Pzh desc ),
    	voucherid,@projectid AS projectid,accountcode,'' accountname,
    	@fscode AS fscode,1 AS  IsBefore,1 AS sample,A.Date AS OsDate,isnull(A.Pzlx,'')+isnull(A.Pzh,'') AS pzh,
    	JD,(A.Jfje+A.Dfje) as JE,A.Zy,dfkm,'' as ProjectCode
  	from
      TBVoucher  A 
  	where A.projectid=@projectid and  A.fllx=1	
  		and	exists(select *	from	TBDetail B where b.projectID=a.ProjectID and b.accountcode=a.accountcode	and B.fscode=@FSCode and b.isaux=0)
  		)
    
    INSERT #CutofftestTemp
    SELECT 
      VoucherID,ProjectID,FSCode,AccountCode,AccountName,ProjectCode,IsBefore,Sample,     
      OsDate,PZH,dfkm,JD,JE,ZY         
    FROM a1 
    WHERE id <= @ROWS
  END 
ELSE
  BEGIN
    insert into #CutofftestTemp 
    SELECT *
    FROM Cutofftest
    WHERE ProjectID=@projectid and FSCode=@FSCode and IsBefore=1
	update #HasData set HasBefore=1
  END
 

--若不存在（截止日后）截止测试数据，按审计风险模型添加
IF not exists(SELECT 1 from	Cutofftest A where a.projectid=@projectid and fscode=@FSCode AND IsBefore=0) begin
    WITH a2 AS(
    SELECT  
      ID=Row_Number() OVER(ORDER BY A.Date asc,a.pzh asc ),
    	voucherid,@projectid AS projectid,accountcode,'' accountname,
    	@fscode AS fscode,0 AS  IsBefore,1 AS sample,A.Date AS OsDate,isnull(A.Pzlx,'')+isnull(A.Pzh,'') AS pzh,
    	JD,A.Jfje+A.Dfje as JE,A.Zy,dfkm,'' as ProjectCode
  	FROM 
      QhJzpz  A 
  	WHERE A.projectid=@projectid and  A.fllx=1	
  		and	exists(select *	from	TBDetail B where b.projectID=a.ProjectID and b.accountcode=a.accountcode	and B.fscode=@FSCode and b.isaux=0)
  		)

    INSERT #CutofftestTemp 
       SELECT 
          VoucherID,ProjectID,FSCode,AccountCode,AccountName,ProjectCode,IsBefore,Sample,     
          OsDate,PZH,dfkm,JD,JE,ZY 
        FROM a2 WHERE id <= @ROWS
  END 
ELSE
  BEGIN
    insert into #CutofftestTemp 
    SELECT *
    FROM Cutofftest
    WHERE ProjectID=@projectid and FSCode=@FSCode and IsBefore=0
	update #HasData set HasAfter=1
  END

  SELECT * from	#HasData
  SELECT 
  A.VoucherID   , 
  A.ProjectID   ,
  A.FSCode      ,
  A.AccountCode ,
  B.AccauxName  as AccountName,
  A.ProjectCode ,
  A.IsBefore    ,
  A.Sample      ,
  A.OsDate      ,
  A.PZH         ,
  A.dfkm        ,
  A.JD          ,
  A.JE          ,
  A.ZY          
  from	#CutofftestTemp  A 
  LEFT JOIN TBDetail B 
  ON A.AccountCode=B.AccountCode
  and A.ProjectId=B.ProjectID
  and A.FSCode=B.FSCode
  and b.isaux=0
  ORDER BY IsBefore desc,A.AccountCode,A.FSCode,A.OsDate  asc	
  drop table #CutofftestTemp 
  drop table #HasData

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetDepreciation')
   BEGIN
       DROP  Procedure  GetDepreciation
	END
GO


/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -获取折旧或摊销
  Created   : Dengll 2009/07/24
  update	:	by dengll	2009/11/09	add d1.LifeType
  Updated	: DENGLL 2011/08/23
  Updated	: DENGLL 2012/03/17
  Version   : 1.0.2
********************************************************************************/

create Procedure [dbo].[GetDepreciation]

@pid	varchar(100)

AS

--parent table
select d.ID, d.[Order], d.AccountCode, tb.FSNAME	as ACCOUNTNAME,d.AssetsClasses, d.DepreciationMethod, d.UsefulLife, d.NetSalvageValueRate, d.DepreciationRates
from	Depreciation 	d
left	join	TBFS 	tb
on	tb.FSCODE=d.accountcode
where	d.ChildAccountCode	is	null	or	d.ChildAccountCode=space(1)
order by [Order]

--child table	
SELECT	DISTINCT ID, [Order], AccountCode, ChildAccountCode, NULL AS AccountName,case LifeType
	when 1	then '有限'
	when 2	then '不确定'
	else	null
end	LifeType,
AssetsClasses, DepreciationMethod, UsefulLife, NetSalvageValueRate, DepreciationRates
from Depreciation
WHERE [ChildAccountCode] IS not null and projectID = @pid
order by	[Order]









GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetDetailData')
   BEGIN
       DROP  Procedure  GetDetailData
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2010 Huapu (Beijing)
  Customer  : Huapu Chinese,bj
  Project   : EAS -获得明细账表
  Created   : 2011/11/04 by jpeng
  Updated   : by jpeng 2017/08/09 以前只有叶子节点才能获得明细账，现改为所有节点都能获得明细账
  Updated	: by dengll
  Version   : 1.0.2
********************************************************************************/
CREATE Procedure GetDetailData
@PID varchar(255),
@StruCode varchar(255),
@TBgroup varchar(255),
@PageIndex int,
@PageSize int

AS
SET NOCOUNT ON
--变量

declare @t table
	(ID int identity(1,1),Date datetime,Pz varchar(255),Zy varchar(255),Jfje decimal(20,2),Dfje decimal(20,2),Ye decimal(20,2),Dfkm nvarchar(2000))



	declare	@endYear	datetime
	set @endYear=(select periodenddate from NeweasV5.dbo.projectsinfo where projectid=@PID)
	
	declare @t1 table
	(ID int identity(1,1),Date datetime,Pz varchar(255),Zy varchar(255),Jfje decimal(20,2),Dfje decimal(20,2),Period int,Dfkm nvarchar(2000))
	
	declare @t2 table
	(Date datetime,Pz varchar(255),Zy varchar(255),Jfje decimal(20,2),Dfje decimal(20,2),Ye decimal(20,2),Dfkm nvarchar(2000))
	
	declare @t3 table
	(Date datetime,Pz varchar(255),Zy varchar(255),Jfje decimal(20,2),Dfje decimal(20,2),Ye decimal(20,2),Dfkm nvarchar(2000))
	
	declare @beginMonth int,@endMonth int,@sumJfje decimal(20,2),@sumDfje decimal(20,2),@sumYe decimal(20,2),
	@tolJfje decimal(20,2),@tolDfje decimal(20,2),@tolYe decimal(20,2),	@temp1 varchar(10),@temp2 varchar(10),
	@temp3 varchar(10),@beginRow int ,@endRow int ,@MaxRow int,@Ye decimal(20,2),@Date datetime,@Pz varchar(255),
	@Zy varchar(255),@Jfje decimal(20,2),@Dfje decimal(20,2),@Dfkm nvarchar(2000),@AccountCode varchar(255),@AccountCode1 varchar(255),
	@sql varchar(max)
	if  exists(select 1 from view_TBDetail where AccountCode = @StruCode and TBGrouping = @TBgroup and isaux=0) 
	begin
		--递归方法在表302获得指定AccountCode的子集
		WITH temp1 (AccountCode)
		AS
		(
		SELECT AccountCode FROM view_TBDetail  WHERE AccountCode = @StruCode and projectid=@PID and isaux=0
		UNION ALL
		SELECT a.AccountCode FROM view_TBDetail a
		JOIN temp1 b
		ON a.TBGrouping = b.accountcode and projectid=@PID and a.isaux=0
		)		
		--
		insert into @t3
		SELECT a.date,isnull(a.pzlx,'')+isnull(a.pzh,'') AS pz,a.zy,a.jfje,a.dfje,a.Period,a.dfkm
		FROM  TBVoucher a
		INNER JOIN  view_TBDetail b		
		ON a.AccountCode = b.AccountCode AND a.ProjectCode IS NULL 		and b.isaux=0 
		and a.Period <=year(a.date)*100+12 and year(a.date)=year(@endYear) and a.projectid=@PID and a.projectid=b.projectid
		inner join temp1 c
		on b.AccountCode = c.AccountCode and b.projectid=@PID 
		UNION ALL
		SELECT a.date,isnull(a.pzlx,'')+isnull(a.pzh,'') AS pz,a.zy,a.jfje,a.dfje,a.Period,a.dfkm
		FROM  TBVoucher a
		INNER JOIN  view_TBDetail b
		ON a.AccountCode = b.AccountCode AND a.ProjectCode = b.AuxiliaryCode    and a.projectid=@PID and a.projectid=b.projectid 
		and a.Period <=year(a.date)*100+12  and b.isaux=1 
		inner join temp1 c
		on b.AccountCode = c.AccountCode 
	  order by pz
	end
	else
	begin
		insert into @t3
		SELECT a.date,isnull(a.pzlx,'')+isnull(a.pzh,'') AS pz,a.zy,a.jfje,a.dfje,a.Period,a.dfkm
		FROM  TBVoucher a
		INNER JOIN  view_TBDetail b
		ON a.AccountCode = b.AccountCode 
			AND a.ProjectCode = b.AuxiliaryCode 
			and b.AuxiliaryCode =  @StruCode  
			and b.isaux=1
			and a.Period <=year(a.date)*100+12 
			and year(a.date)=year(@endYear)
			and b.AccountCode = @TBgroup
			 and a.projectid=@PID and a.projectid=b.projectid 
    order by isnull(a.pzlx,'''')+isnull(a.pzh,'''')
	end
	insert into @t1
	select * from @t3 order by date
	
	set @beginMonth = 1
	set @beginRow = 1
	set @endRow = 0
	set @temp1 = '本月合计'
	set @temp2 = '本年累计'
	set @temp3 = '上期结转'
	set @tolJfje = 0
	set @tolDfje = 0
	set @tolYe = 0
	
	select @beginMonth= year(min(Date))*100+1,@endMonth = max(Period) from @t1
	
	select @Ye=qcye
	from 
	(select qcye
	from  view_TBDetail
	where AccountCode = @StruCode and TBGrouping = @TBgroup  and projectid=@PID  and isaux=0
	union 
	select qcye
	from  view_TBDetail
	where AuxiliaryCode = @StruCode and AccountCode = @TBgroup and projectid=@PID and isaux=1 ) a
	
	set @sumYe=@Ye
	set @tolYe=@Ye
	
	insert into @t2(zy,ye)
	values(@temp3,@Ye)
	
	while @beginMonth <= @endMonth
	begin
		select @MaxRow=count(Date) from @t1 where Period = @beginMonth
		if @MaxRow > 0
		begin 
			set @endRow = @endRow + @MaxRow
			while @beginRow<=@endRow
			begin
				select @Date=Date ,@Pz=Pz ,@Zy=Zy ,@Jfje=Jfje ,@Dfje=Dfje ,@Ye=@Ye+Jfje-Dfje,@Dfkm=Dfkm from @t1 where Period = @beginMonth and ID = @beginRow 
        order by Pz
				insert into @t2
				values(@Date,@Pz,@Zy,@Jfje,@Dfje,@Ye,@Dfkm)
				set @beginRow = @beginRow+1
			end
			
			select @sumJfje=sum(jfje),@sumDfje=sum(dfje),@sumYe=@sumYe+sum(jfje)-sum(dfje) from @t1 where Period = @beginMonth 
			
      insert into @t2(zy,jfje,dfje,ye)
			values(@temp1,@sumJfje,@sumDfje,@sumYe)
			
			set @tolJfje = @tolJfje + @sumJfje
			set @tolDfje = @tolDfje + @sumDfje		
			insert into @t2(zy,jfje,dfje,ye)
			values(@temp2,@tolJfje,@tolDfje,@tolYe+@tolJfje-@tolDfje)			
		
		end
		set @beginMonth = @beginMonth + 1
	end
	
  INSERT INTO @t(Date ,Pz ,Zy ,Jfje ,Dfje,Ye)
	select Date ,Pz ,Zy ,Jfje ,Dfje ,Ye from @t2


	if	exists(select 1 from @t)begin
  
		declare	@tmpDFKM table(dfkmcode varchar(1000))
		insert @tmpDFKM
		select distinct dfkm from @t where dfkm is not null and dfkm!=space(1)
		DECLARE @dont VARCHAR(1)=''''
		while exists(select 1 from @tmpDFKM)begin
			declare	@dfkmCN varchar(1000),@initDfkm varchar(1000)
			select @dfkmCN=dfkmcode from @tmpdfkm
			set @initDfkm=@dfkmCN
			set @dfkmCN=@dont+@dfkmCN+@dont
			SET	@dfkmCN=replace(@dfkmCN,',',@dont+','+@dont)
			set @sql='
			update @t set dfkm=(
				SELECT TOP 1
					STUFF((SELECT ''/''+accountname FROM dbo.view_TBDetail  WHERE projectID='''+@pid+''' and isaux=0 and  AccountCode IN ('+@dfkmCN+') FOR XML PATH('''')), 1, 1, '''')
					FROM  dbo.tbacc WHERE projectid='''+@pid+''' and  isaux=0 and AccountCode IN ('+@dfkmCN+'))
					where dfkm='''+@initDfkm+''''
			exec(@sql)
			
			delete @tmpDFKM where dfkmcode=@initDfkm
		end
	end
	
	
	if @PageIndex = 0 
	begin
		select Date ,Pz ,Zy ,Jfje ,Dfje ,Dfkm,
		case when Ye > 0 then '借' when Ye = 0 then '平' when Ye < 0 then '贷' end as Yefx,abs(Ye) as Ye 
		from  @t  
	end	
	else
	begin
		declare @startID int,@endID int
		set @startID=(@PageIndex - 1) * @PageSize + 1
		set @endID = @PageIndex * @PageSize
		select Date ,Pz ,Zy ,Jfje ,Dfje ,Dfkm,Yefx,Ye 
		from (select row_number() over(order by ID) as rownum, 
		Date ,Pz ,Zy ,Jfje ,Dfje ,Dfkm,
		case when 
    Ye> 0 then '借' when Ye = 0 then '平' when Ye < 0 then '贷'  end as Yefx,abs(Ye) as Ye 
		from @t)as T
		where rownum between @startID  and @endID 
	end

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetDetailPZData')
   BEGIN
       DROP  Procedure  GetDetailPZData
	END
GO

/********************************************************************************
  Copyright : 2011 EAS (Hefei)
  Customer  : Huapu
  Project   : EAS -获取明细凭证数据
  Created   : 2012/02/22 by dengll 
  Updated   : 2012/09/27 by jpeng
  Updated	: 20140104	by dengll
  Updated	: 20140521 by dengll
  Version   : 1.0.2
********************************************************************************/
CREATE Procedure [dbo].[GetDetailPZData]
@pid	varchar(max),
@date	varchar(100),
@pzh	varchar(100)
AS


DECLARE	@COUNT	INT,@I	INT,@CODE	VARCHAR(100),@UPCODE	VARCHAR(100),@TNAME	VARCHAR(1000)
DECLARE	@T1	TABLE(ID	INT	IDENTITY(1,1),ACCOUNTCODE	VARCHAR(100),AuxiliaryCode	VARCHAR(100),TBType	VARCHAR(100),
	Date	DATETIME,pzNO	VARCHAR(100),zy	VARCHAR(100),kjkm	VARCHAR(1000),JFJE	DECIMAL(20,2),DFJE	DECIMAL(20,2))
DECLARE	@TIME	DATETIME
SET	@TIME	=CAST(@date AS DATETIME)
INSERT	@T1
SELECT	tbV.[AccountCode],tbV.[PROJECTCode],2 AS TBTYPE,
	tbV.[Date],isnull(tbV.[Pzlx],'')+isnull(tbV.[Pzh],'') AS pzNO,tbV.zy,	
	null  AS kjkm,tbV.[Jfje],tbV.[Dfje]
FROM	 TBVoucher	tbV
LEFT	JOIN VIEW_TBDetail	AUX
ON tbV.projectid=AUX.ProjectID and  tbV.ProjectID=@pid and	TBV.ACCOUNTCODE=AUX.ACCOUNTCODE	AND	TBV.PROJECTCODE=AUX.AuxiliaryCode
WHERE	isnull(tbV.PZLX,'')+isnull(tbV.PZH,'')=@pzh	AND	CONVERT(NVARCHAR(10),tbV.DATE,120)=CONVERT(NVARCHAR(10),@TIME,120)

SET @COUNT=@@ROWCOUNT
DECLARE	@t	TABLE(name	varchar(1000))

SET @I=1
WHILE(@I<=@COUNT)
BEGIN
	SELECT	@CODE=ACCOUNTCODE,@UPCODE=AUXILIARYCODE	FROM	@T1	WHERE	ID=@I	
	declare	@name	varchar(max)=null;
	declare	@upname	varchar(max)=null;

  select @name=AccountName from ACCOUNT where projectid=@pid and AccountCode=@CODE
	if(@upcode is not null)begin
		set @upname=null
    select @upname=auxiliaryName	from	tbaux	where ProjectID=@pid and	accountcode=@code	and		auxiliarycode=@upcode
		set	@name=@name+'/'+@upname
	end

	UPDATE	@T1 SET kjkm=@name WHERE	ID=@I	
	SET	@I=@I+1
END

SELECT  distinct ACCOUNTCODE,	AuxiliaryCode,	TBType	,Date,	pzNO,	zy	,kjkm	,JFJE,	DFJE FROM @T1







GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetDSAccountstylebookAC')
   BEGIN
       DROP  Procedure  GetDSAccountstylebookAC
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -a,c类型的答案使用
  Created   : 2011/02/12 by len ,获取分层数据
  Updated	: 20121013 by dengll
  Updated	: 20121113 by dengll
  Updated	:2013/02/26 by len  
  Version   : 1.0.1
********************************************************************************/
CREATE Procedure GetDSAccountstylebookAC
@projectid varchar(50),
	@Code varchar(50)
AS

DECLARE @TEMP2 TABLE (FSLineCode varchar(100),NoteLineCode VARCHAR(100),DetailCode VARCHAR(100),ProjectCode VARCHAR(100),Name NVARCHAR(1000),StylebookcapacityDf DECIMAL(20,2),StylebookcapacityJf 
DECIMAL(20,2),SampleSelectedType	int,SelectedSampleLebelYesNo BIT,Testprogram NVARCHAR(1000),TestProjectmethod NVARCHAR(1000),EASREF	NVARCHAR(100),kmjb	varchar(50),tbtype	int)
DECLARE	@Testprogram	VARCHAR(100),@TestProjectmethod	VARCHAR(100),@Selectedyesno	VARCHAR(2),@pro	NVARCHAR(1000),@QuesID	nvarchar(1)



SELECT     @QuesID=CASE QuesID WHEN	'Q021' THEN 'A'	--实质性分析程序
			WHEN	'Q022'     THEN 'B'		--细节测试
			WHEN 	'Q023'     THEN 'C'				--两者结合
	END
FROM DBO.AccountQues where projectID=@projectID and AccountCode=@Code and QuesID in ('Q021','Q022','Q023')	and	Selectedyesno=1
IF (@QuesID='A')
	set @pro='实质性分析程序'
else IF (@QuesID='B')
	set @pro='细节测试'
else
	set @pro=ISNULL(@pro,NULL)

--exec dbo.GetTestprogram	'+@projectid+',@Code,@pro	OUTPUT,@QuesID	OUTPUT

declare	@SELTYPE	INT,@proMethod	varchar(100),@proMethod1	varchar(100)
declare	@TEMP	TABLE(ID	INT, AccountCode	VARCHAR(100),QuesID	VARCHAR(100), QuesDescription	VARCHAR(500),QuesAnswer	INT)
INSERT	@TEMP
EXEC dbo.[SelectSampleSelectedQues] @PROJECTID =@PROJECTID,
	    @AccountCode = @Code,
	    @QuesCode = 'Q032' -- varchar(500)
select	@SELTYPE=QuesAnswer	from	@temp
set	@SELTYPE=isnull(@SELTYPE,0)
set	@proMethod='全部项目'
set	@proMethod1='统计抽样'
--fs
SELECT fscode	as FSLineCode ,tbgrouping as NoteLineCode,NULL as DetailCode,NULL	as ProjectCode,FsName as Name,isnull(Unchecked,0)*yefx as StylebookcapacityDf,isnull(Unchecked,0)*yefx as StylebookcapacityJf,NULL AS SampleSelectedType,NULL AS SelectedSampleLebelYesNo,
NULL as Testprogram,
NULL  as TestProjectmethod,
FSCODE AS EASREF,
tbtype FROM DBO.View_TBFS WHERE ProjectID=@ProjectID and left(fscode,len(@Code))=@Code  --AND Unchecked<>0
--note
SELECT	t1.FSCODE	as FSLineCode,
		t1.AccountCode	as NoteLineCode,
		NULL	as DetailCode,
		NULL	as ProjectCode,
		t1.AccAuxName	as Name,
		isnull(Unchecked,0)*yefx	as StylebookcapacityDf,
		isnull(Unchecked,0)*yefx	as StylebookcapacityJf,
		t2.SampleSelectedType,
		t2.SelectedSampleLebelYesNo		as SelectedSampleLebelYesNo,
		CASE WHEN @QuesID='C'	THEN DBO.ConvertMeterialityProgramtoStr(MaterialityProgram)	ELSE @pro	END	as Testprogram,
		CASE WHEN (@SELTYPE=1	and	@QuesID!='A')	THEN @proMethod 
			 WHEN (@QuesID='A'	and	@SELTYPE=1)	THEN @proMethod
			 WHEN (@QuesID='A'	and	@SELTYPE=0)	THEN @proMethod1
		ELSE		DBO.ConvertSelectSampleMethodtoStr(SelectSampleMethod)
			END as TestProjectmethod,
		t1.FSCODE	AS EASREF,
		t1.TBTYPE
	FROM     DBO.VIEW_TBDetail t1 inner join DBO.TBDetailExtra t2 on t1.ID = t2.ID and IsAux = 0 and SourceFSCode = ''
	WHERE t1.ProjectID=@ProjectID and	left(T1.FSCODE,len(@CODE))=@CODE AND 
	t1.TBGrouping in (select fscode FROM DBO.View_TBFS WHERE ProjectID=@ProjectID and left(fscode,len(@Code))=@Code and ismx=1 )--TBTYPE=1 AND Unchecked<>0
--det
	SELECT	null	as FSLineCode,
	t1.TBGROUPING as NoteLineCode,
	t1.AccountCode	as DetailCode,
	NULL	AS ProjectCode,
	t1.AccAuxName	as Name,
	isnull(Unchecked,0)*yefx	as StylebookcapacityDf,
	isnull(Unchecked,0)*yefx	as StylebookcapacityJf,
	t2.SampleSelectedType,
	t2.SelectedSampleLebelYesNo	as SelectedSampleLebelYesNo,
	CASE WHEN @QuesID='C'	THEN DBO.ConvertMeterialityProgramtoStr(MaterialityProgram)	ELSE @pro	END	as Testprogram,
	CASE WHEN (@SELTYPE=1	and	@QuesID!='A')	THEN @proMethod 
			 WHEN (@QuesID='A'	and	@SELTYPE=1)	THEN @proMethod
			 WHEN (@QuesID='A'	and	@SELTYPE=0)	THEN @proMethod1
		ELSE		DBO.ConvertSelectSampleMethodtoStr(SelectSampleMethod)
			END as TestProjectmethod,
	t1.FSCODE AS EASREF,
	t1.TBTYPE AS kmjb,
	t1.TBTYPE
	FROM   DBO.VIEW_TBDetail t1 inner join DBO.TBDetailExtra t2 on t1.ID = t2.ID and IsAux = 0 and SourceFSCode = ''
	WHERE t1.ProjectID=@ProjectID and	left(t1.FSCODE,len(@CODE))=@CODE	AND 
	t1.TBGrouping not in (select fscode FROM DBO.View_TBFS WHERE ProjectID=@ProjectID and left(fscode,len(@Code))=@Code and ismx=1 )--TBTYPE>1 --AND Unchecked<>0
	


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetDSAccountstylebookdf')
   BEGIN
       DROP  Procedure  GetDSAccountstylebookdf
	END
GO

/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -答案b,第三部分样本分层数据返回.fsline,noteline,detail,project
  Created   : Dengll PM 04.08.2008

  Updated	:	2010/05/26 by len @tbname to @PROJECTID
  Updated	:2011/02/12 by len  QuesID='Q030' to  QuesID='Q012'
  Updated	:2012/08/24 by len  
  Updated	:2013/02/26 by len  
  Version   : 1.0.3
********************************************************************************/

CREATE Procedure GetDSAccountstylebookdf
	@PROJECTID varchar(50),
	@Code varchar(50)
AS

declare	@pro	NVARCHAR(1000),@QuesID	nvarchar(1)

SELECT     @QuesID=CASE QuesID WHEN	'Q021' THEN 'A'	--实质性分析程序
			WHEN	'Q022'     THEN 'B'		--细节测试
			WHEN 	'Q023'     THEN 'C'				--两者结合
	END
FROM DBO.AccountQues where projectID=@projectID and AccountCode=@Code and QuesID in ('Q021','Q022','Q023')	and	Selectedyesno=1
IF (@QuesID='A')
	set @pro='实质性分析程序'
else IF (@QuesID='B')
	set @pro='细节测试'
else
	set @pro=ISNULL(@pro,NULL)
--exec dbo.GetTestprogram	'+@projectid+',@Code,@pro	OUTPUT,@QuesID	OUTPUT

declare	@SELTYPE	INT,@proMethod	varchar(100)
declare	@TEMP	TABLE(ID	INT, AccountCode	VARCHAR(100),QuesID	VARCHAR(100), QuesDescription	VARCHAR(500),QuesAnswer	INT)
INSERT	@TEMP
EXEC dbo.[SelectSampleSelectedQues] @PROJECTID =@PROJECTID,
	    @AccountCode = @Code,
	    @QuesCode = 'Q032' -- varchar(500)
select	@SELTYPE=QuesAnswer	from	@temp
set	@SELTYPE=isnull(@SELTYPE,0)
set	@proMethod='全部项目'
DECLARE	@proMethod1	varchar(100)
set	@proMethod1='统计抽样'

SELECT fsCode	as FSLineCode ,TBGROUPING as NoteLineCode,NULL as DetailCode,NULL	as ProjectCode,fsName as Name,
isnull(dfje,0) as StylebookcapacityDf,
NULL AS SampleSelectedType,
null as SelectedSampleLebelYesNo,null as Testprogram,null as TestProjectmethod,fscode as EASREF,tbtype FROM dbo.View_TBFS where projectID=@projectID and 
	left(fscode,len(@code))=@CODE	

SELECT	t1.TBGROUPING	as FSLineCode,
		t1.AccountCode	as NoteLineCode,
		NULL	as DetailCode,
		NULL	as ProjectCode,
		t1.AccAuxName	as Name,
		isnull(t1.dfje,0)	as StylebookcapacityDf,
		t2.SampleSelectedType,
		t2.CrSelectedSampleLebelYesNo		as SelectedSampleLebelYesNo,
		CASE WHEN @QuesID='C'	THEN DBO.ConvertMeterialityProgramtoStr(CrMaterialityProgram)	else @pro	end	as Testprogram,
		CASE WHEN (@SELTYPE=1	and	@QuesID!='A')	THEN @proMethod 
			 WHEN (@QuesID='A'	and	@SELTYPE=1)	THEN @proMethod
			 WHEN (@QuesID='A'	and	@SELTYPE=0)	THEN @proMethod1
		ELSE		DBO.ConvertSelectSampleMethodtoStr(CrSelectSampleMethod)
			END as TestProjectmethod,
		t1.FSCODE AS EASREF,
		t1.tbtype
	FROM DBO.VIEW_TBDetail t1 inner join DBO.TBDetailExtra t2 on t1.ID = t2.ID and IsAux = 0 and SourceFSCode = ''
	WHERE t1.projectID=@projectID and left(t1.fscode,len(@code))=@CODE	AND	
	TBGrouping in (select fscode FROM dbo.View_TBFS where projectID=@projectID and left(fscode,len(@Code))=@Code and ismx=1 )

SELECT	null	as FSLineCode,
	t1.TBGROUPING as NoteLineCode,
	t1.AccountCode	as DetailCode,
	NULL	AS ProjectCode,
	t1.AccAuxName	as Name,
	isnull(t1.dfje,0)	as StylebookcapacityDf,
	t2.SampleSelectedType,
	t2.CrSelectedSampleLebelYesNo	as SelectedSampleLebelYesNo,
	CASE WHEN @QuesID='C'	THEN DBO.ConvertMeterialityProgramtoStr(CrMaterialityProgram) else @pro	end	as Testprogram,
	CASE WHEN (@SELTYPE=1	and	@QuesID!='A')	THEN @proMethod 
			 WHEN (@QuesID='A'	and	@SELTYPE=1)	THEN @proMethod
			 WHEN (@QuesID='A'	and	@SELTYPE=0)	THEN @proMethod1
		ELSE		DBO.ConvertSelectSampleMethodtoStr(CrSelectSampleMethod)
			END as TestProjectmethod,
	t1.FSCODE AS EASREF,
	t1.tbtype,
	t1.tbtype AS kmjb
FROM DBO.VIEW_TBDetail t1 inner join DBO.TBDetailExtra t2 on t1.ID = t2.ID and IsAux = 0 and SourceFSCode = ''
WHERE t1.projectID=@projectID and left(t1.fscode,len(@code))=@CODE	AND	 
	TBGrouping not in (select fscode FROM dbo.View_TBFS where projectID=@projectID and left(fscode,len(@Code))=@Code and ismx=1 )



GRANT EXEC ON GetDSAccountstylebookdf TO PUBLIC



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetDSAccountstylebookjf')
   BEGIN
       DROP  Procedure  GetDSAccountstylebookjf
	END
GO

/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -答案b,样本分层数据返回.fsline,noteline,detail,project
  Created   : Dengll PM 04.08.2008

  Updated	:	2010/05/26 by len @tbname to @projectid
  Updated	:2011/02/12 by len  QuesID='Q030' to  QuesID='Q012'
  Updated	:2012/08/24 by len
  Updated	:2013/02/26 by len  
  Version   : 1.0.3
********************************************************************************/
CREATE Procedure GetDSAccountstylebookjf
	@projectid varchar(50),
	@Code varchar(50)
AS
declare	@pro	NVARCHAR(1000),@QuesID	nvarchar(1)

SELECT     @QuesID=CASE QuesID WHEN	'Q021' THEN 'A'	--实质性分析程序
			WHEN	'Q022'     THEN 'B'		--细节测试
			WHEN 	'Q023'     THEN 'C'				--两者结合
	END
FROM DBO.AccountQues where projectID=@projectID and AccountCode=@Code and QuesID in ('Q021','Q022','Q023')	and	Selectedyesno=1
IF (@QuesID='A')
	set @pro='实质性分析程序'
else IF (@QuesID='B')
	set @pro='细节测试'
else
	set @pro=ISNULL(@pro,NULL)

--exec dbo.GetTestprogram	@projectid,@Code,@pro	OUTPUT,@QuesID	OUTPUT

declare	@SELTYPE	INT,@proMethod	varchar(100)
declare	@TEMP	TABLE(ID	INT, AccountCode	VARCHAR(100),QuesID	VARCHAR(100), QuesDescription	VARCHAR(500),QuesAnswer	INT)
INSERT	@TEMP
EXEC dbo.[SelectSampleSelectedQues] @PROJECTID =@PROJECTID,
	    @AccountCode = @Code,
	    @QuesCode = 'Q032' -- varchar(500)
select	@SELTYPE=QuesAnswer	from	@temp
set	@SELTYPE=isnull(@SELTYPE,0)
set	@proMethod='全部项目'
DECLARE	@proMethod1	varchar(100)
set	@proMethod1='统计抽样'

SELECT fsCode	as FSLineCode ,TBGROUPING as NoteLineCode,NULL as DetailCode,NULL	as ProjectCode,fsName as Name,
isnull(jfje,0) as StylebookcapacityJf,
NULL AS SampleSelectedType,
null as SelectedSampleLebelYesNo,null as Testprogram,null as TestProjectmethod,fscode as EASREF,tbtype FROM dbo.View_TBFS
WHERE projectID=@projectID and left(fsCode,len(@Code))=@Code	--AND jfje<>0

SELECT	t1.TBGROUPING	as FSLineCode,
		t1.AccountCode	as NoteLineCode,
		NULL	as DetailCode,
		NULL	as ProjectCode,
		t1.AccAuxName	as Name,
		isnull(t1.jfje,0)	as StylebookcapacityJf,
		t2.SampleSelectedType,
		t2.DrSelectedSampleLebelYesNo		as SelectedSampleLebelYesNo,
		CASE WHEN @QuesID='C'	THEN DBO.ConvertMeterialityProgramtoStr(t2.DrMaterialityProgram)	else @pro	end	as Testprogram,
		CASE WHEN (@SELTYPE=1	and	@QuesID!='A')	THEN @proMethod 
			 WHEN (@QuesID='A'	and	@SELTYPE=1)	THEN @proMethod
			 WHEN (@QuesID='A'	and	@SELTYPE=0)	THEN @proMethod1
		ELSE		DBO.ConvertSelectSampleMethodtoStr(DrSelectSampleMethod)
			END as TestProjectmethod,
		t1.FSCODE AS EASREF,
		tbtype
	FROM DBO.VIEW_TBDetail t1 inner join DBO.TBDetailExtra t2 on t1.ID = t2.ID and IsAux = 0 and SourceFSCode = ''
	WHERE t1.projectID=@projectID and	left(t1.fscode,len(@code))=@CODE	AND	
	TBGrouping in (select fscode FROM dbo.View_TBFS where projectID=@projectID and left(fscode,len(@Code))=@Code and ismx=1 )--TBTYPE=1	--AND	JFJE<>0

	SELECT	null	as FSLineCode,
		t1.TBGROUPING as NoteLineCode,
		t1.AccountCode	as DetailCode,
		NULL	AS ProjectCode,
		t1.AccAuxName	as Name,
		isnull(t1.jfje,0)	as StylebookcapacityJf,
		t2.SampleSelectedType,
		t2.DrSelectedSampleLebelYesNo	as SelectedSampleLebelYesNo,
		CASE WHEN @QuesID='C'	THEN DBO.ConvertMeterialityProgramtoStr(t2.DrMaterialityProgram) else @pro	end	as Testprogram,
		CASE WHEN (@SELTYPE=1	and	@QuesID!='A')	THEN @proMethod 
			 WHEN (@QuesID='A'	and	@SELTYPE=1)	THEN @proMethod
			 WHEN (@QuesID='A'	and	@SELTYPE=0)	THEN @proMethod1
		ELSE		DBO.ConvertSelectSampleMethodtoStr(DrSelectSampleMethod)
			END as TestProjectmethod,
		t1.FSCODE AS EASREF,
		tbtype,
		tbtype AS kmjb
	FROM DBO.VIEW_TBDetail t1 inner join DBO.TBDetailExtra t2 on t1.ID = t2.ID and IsAux = 0 and SourceFSCode = ''
	WHERE t1.projectID=@projectID and left(t1.fscode,len(@code))=@CODE	AND	 
	TBGrouping not in (select fscode FROM dbo.View_TBFS where projectID=@projectID and left(fscode,len(@Code))=@Code and ismx=1 )--TBTYPE>1	--AND	JFJE<>0
	
		


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetDSIntercourse')
   BEGIN
       DROP  Procedure  GetDSIntercourse
	END
GO

/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -从tb表获取样本数据更新到往来函证表内,并返回往来函证数据和TBWLZL数据
  Created   : Dengll PM 2009-07-07

  Updated	:	2010/06/03 by len IF(CHARINDEX(@CFL,@ACCOUNTCODE)>0)BEGIN	往下都是新添加的
  Updated	:	2010/06/03
  Updated	:	2010/07/07
  Updated	:	2010/08/27	by len *yefx
  Updated	:	2010/09/07	by len *yefx
  Updated	:	2011/07/08  by jpeng
  Updated   :   2012/1/11   by lina 加表19.
  Updated   :   2013/12/04    by dengll
  Version   : 1.0.12
********************************************************************************/
CREATE Procedure [dbo].[GetDSIntercourse]
@projectid	varchar(100)
AS
SET NOCOUNT	ON

select ID,accountname as Wlmc,OtherMatters,ConsultDate,ConfirmDate,PostCode,PostAddress,Recipient,sample,Sendletter,Reason
FROM  DBO.TBWlhz where projectid=@projectid 
	and ID in (SELECT WlhzID FROM DBO.WlhzandTB WHERE PROJECTID=@PROJECTID)
	order by accountname

select t.* from (
	select B.WlhzID as ID,b.FSCode,b.AccountCode,b.auxiliarycode
	,(select top 1 fsname from dbo.fscodeconfig where projectid=b.projectid and fscode=b.fscode) as Wlmc
	,D.ConsultBalance
	,D.ConfirmBalance
	,D.ConsultType
	,c.yefx*c.unchecked AS QMYE,b.Sendletteryesno,b.WlhzID,c.qcye*c.yefx as qcye,c.jfje,c.dfje,0 as IsRje
	from DBO.WlhzandTB B 
	join DBO.VIEW_TBDetail C
	on B.ProjectID=C.ProjectID and b.ID collate Chinese_PRC_CS_AS_KS_WS= c.ID
	join TBDetailExtra D
	on c.ProjectID = D.projectID and B.ID collate Chinese_PRC_CS_AS_KS_WS = D.ID
	where b.projectid=@projectid 
) t   order by t.WlhzID 


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetErrorandStyleSmapleJe')
   BEGIN
       DROP  Procedure  GetErrorandStyleSmapleJe
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -Module xxx50 获取错报个数及样本个数及样本金额合计
  Created   : 20120917 by dengll
  Updated	: 20121118 by dengll
  Version   : 1.0.1
********************************************************************************/
create Procedure [dbo].[GetErrorandStyleSmapleJe]
@pid	varchar(1000),
@jdtype	char(10),
@code	varchar(100),
@step	int,
@mStep	int,
@smapleTotalsap	int	output,
@stepSmapleJe	decimal(20,2)	output
AS


	if(@jdtype='dfje')
	begin

				SELECT @smapleTotalsap=SUM(DBO.GetStylebookScopeNumber(t1.dfje,t2.valueofj)),@stepSmapleJe=sum(t1.dfje) 
				FROM	TBVoucher	t1
				left	join	(select valueofj,step,fscode	from	PMvalueofJ	where ProjectID = @pid and fscode=@code	and	step<=@mStep	and	testobject=2)	t2
				on	t1.StepofSample=t2.step	and	t2.fscode=@code
					WHERE	t1.ProjectID = @pid and  t1.jd=-1	and	t1.SampleSelectedYesNo=1 and (t1.StepofSample>0 and t1.StepofSample<=@step)	and
						t1.accountcode IN 
							(SELECT [AccountCode] FROM	TBDetail WHERE ProjectID = @pid and  [FSCode]=@code and IsAux = 0 and SourceFSCode = '')
	end	
	else	if(@jdtype='jfje')
	begin
					
		SELECT @smapleTotalsap=SUM(DBO.GetStylebookScopeNumber(t1.jfje,t2.valueofj)),@stepSmapleJe=sum(t1.jfje) 
			FROM	TBVoucher	t1
			left	join	(select valueofj,step,fscode	from	PMvalueofJ	where ProjectID = @pid and fscode=@code	and	step<=@mStep	and	testobject=1)	t2
			on	t1.StepofSample=t2.step	and	t2.fscode=@code
				WHERE	t1.ProjectID = @pid and   t1.jd=1	and	t1.SampleSelectedYesNo=1 and (t1.StepofSample>0 and t1.StepofSample<=@step)	and
					t1.accountcode IN 
						(SELECT [AccountCode] FROM	TBDetail WHERE ProjectID = @pid and [FSCode]=@code and IsAux = 0 and SourceFSCode = '')
	end
	else	
	begin

		SELECT @smapleTotalsap=SUM(isnull(number,0)),@stepSmapleJe=sum(isnull(uncheck,0)) 
			FROM	(
				SELECT DBO.GetStylebookScopeNumber((t1.yefx*t1.Unchecked),t2.valueofj) as number,
				t1.yefx*t1.Unchecked as uncheck
					 FROM	VIEW_TBDetail	t1
					 join TBDetailExtra t3
					 on t1.ID = t3.ID and IsMx = 1 and SourceFSCode = ''
					 left	join	(select valueofj,step,fscode	from	PMvalueofJ	where ProjectID = @pid and fscode=@code	and	step<=@mStep	and	testobject=0)	t2
					 on	t3.StepofSample=t2.step	and	t2.fscode=@code
					 WHERE t1.ProjectID = @pid 	AND t1.[FSCode]=@code	and	t3.SampleSelectedYesNo=1 and (t3.stepofsample>0 and t3.stepofsample <= @step)				
				)aa
	end




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetErrorNumber')
   BEGIN
       DROP  Procedure  GetErrorNumber
	END
GO

/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -Module xxx50 获取错报个数
  Created   : 20120917 by dengll
  Updated	: 20121118 by dengll
  Version   : 1.0.1
********************************************************************************/
CREATE Procedure [dbo].[GetErrorNumber]
@pid	varchar(1000),
@type	char(10),	--0 a类型,1	借贷 bc类型
@jdtype	int,	--1	借,-1贷方
@code	varchar(100),
@step	int,
@error	int	output
AS
	if(@type=1)
	begin
	--统计错报个数,合计样本数量,合计样本金额
		SELECT @error=count(1)
FROM	TBVoucher 
WHERE	ProjectID= @pid and   jd=@jdtype	and	(ErrorYesNO * SampleSelectedYesNo)=1 and (StepofSample>0 and StepofSample<=@step)	and
AccountCode+ISNULL(ProjectCode,'') IN 
(SELECT AccountCode FROM	TBDetail WHERE ProjectID= @pid and [FSCode]=@code)
							
						set	@error=isnull(@error,0)
							
	end	
	else	if(@type=0)	
	begin
		SELECT @error=count(aa.AccountCode)
		FROM	(
		SELECT b.AccountCode
		FROM	TBDetailExtra a
		join   TBDetail b
		on a.ID = b.ID 
		WHERE a.ProjectID= @pid and ismx=1	AND b.[FSCode]=@code	and	(ErrorYesNO * SampleSelectedYesNo)=1 and (stepofsample>0 and stepofsample <= @step)
		)aa
				set	@error=isnull(@error,0)				
	end




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetFSCodeOfFileScripList')
   BEGIN
       DROP  Procedure  GetFSCodeOfFileScripList
	END
GO

 /********************************************************************************
  Database  : EAS
  Copyright : 2010 Huapu (Beijing)
  Customer  : Huapu Chinese,bj
  Project   : EAS --根据FileScripList表中的StruCode来返回FSCode
  Created   : 2011/06/09 by rshibin
  Updated   : 2011/08/09 by jpeng
  Version   : 1.0.0
********************************************************************************/
CREATE Procedure [dbo].[GetFSCodeOfFileScripList] 
@PID varchar(255),
@StruCode varchar(255),
@FSCode varchar(255) output
AS
SET NOCOUNT ON
declare @sql nvarchar(4000),@sql1 nvarchar(4000)
set @sql='
declare @UpperStruCode varchar(255)
if exists(select FSCode from  FileScriptList  where StruCode=@StruCode and projectID = @PID)
begin
select @FSCode=FSCode, @UpperStruCode=UpperStruCode from FileScriptList  where StruCode=@StruCode
if (@FSCode is null OR @FSCode='''')
	begin
	while (1=1)
		begin
			if exists(select FSCode from FileScriptList  where StruCode=@UpperStruCode)
			begin
				select @FSCode=FSCode ,@UpperStruCode=UpperStruCode from  FileScriptList  where StruCode=@UpperStruCode
				if (@FSCode is null OR @FSCode='''')
					continue
				else
					break
			end 
			else
				break
		end
	end
end
'
set @sql1='@PID varchar(255),
@StruCode varchar(255),
@FSCode varchar(255) output'

exec sp_executesql 
			@sql,
			@sql1,
			@PID,
			@StruCode,
			@FSCode output









GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetFullAccountName')
   BEGIN
       DROP  Procedure  GetFullAccountName
	END
GO

/********************************************************************************
  Database  : EASV5
  Copyright : 2017 Huapu 
  Customer  : Huapu 
  Project   : 获取某个科目所有级次的名称
  Created   : 20170711 BY HUASHENG
  Version   : 1.0.0
********************************************************************************/
CREATE Procedure [dbo].[GetFullAccountName]
	@ProjectID varchar(100),
	@AccountCode VARCHAR(100),
	@AuxCode VARCHAR(100),
	@FullName varchar(max) output
AS
IF(@AuxCode IS NULL) SET @AuxCode=''
SET @FullName=''

declare @ChildAccountName varchar(100),@index int,@row_Count int
declare @table_account table(ID int identity,AccountCode varchar(100),AccountName varchar(100),TBGrouping varchar(100));
with account as(
select AccountCode,AccAuxName,TBGrouping from TBDetail where projectid=@ProjectID and accountcode=@AccountCode and IsAux = 0 and SourceFSCode = ''
union all
select  a1.AccountCode,a1.AccAuxName,a1.TBGrouping from TBDetail a1,account a	
where a1.AccountCode=a.TBGrouping and a1.projectid=@ProjectID and IsAux = 0 and SourceFSCode = ''
)

insert @table_account select * from account
select @row_Count=count(1) from @table_account
set @index=1


while(@index<=@row_Count) begin
	select @ChildAccountName=accountname from @table_account where id=@index
	set @FullName=@ChildAccountName+'/'+@FullName
	set @index=@index+1
end
	
declare @AuxName varchar(500)
IF(@AuxCode<>'')
BEGIN
	SELECT @AuxName=AccAuxName from TBDetail where projectid=@ProjectID and accountcode=@AccountCode and auxiliaryCode=@AuxCode and IsAux = 1 and SourceFSCode = ''
	SET @FullName=@FullName+@AuxName
END ELSE BEGIN
	SET @FullName=SUBSTRING(@FullName,0,LEN(@FullName))
END

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetLeadTBData')
   BEGIN
       DROP  Procedure  GetLeadTBData
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2010 EAS (Beijing)
  Customer  : Huapu Chinese,bj
  Project   : EAS -导引表--获取数据集
  Created   : 2017/07/12 by Huasheng
  Version   : 1.0.0
********************************************************************************/
CREATE Procedure [dbo].[GetLeadTBData]
@ProjectID varchar(255),
@FSCode varchar(255)
AS
	declare @UpperYearProjectID varchar(50)
	declare @tempTBFS TABLE (
	[FSCode] [varchar] (100)  collate Chinese_PRC_CS_AS_KS_WS ,
	[FsName] [varchar] (100)  ,
	[Unchecked] [decimal] (20,2)  ,
	[AjeJF] [decimal] (20,2)  ,
	[AjeDF] [decimal] (20,2)  ,	
	[Adjusted] [decimal] (20,2)  ,
	[RjeJF] [decimal] (20,2)  ,
	[RjeDF] [decimal] (20,2)  ,
	[Checked] [decimal] (20,2)  ,		
	[PY1] [decimal] (20,2)  ,
	[TBType] [int]   ,
	[TBGrouping] [nvarchar] (50) collate Chinese_PRC_CS_AS_KS_WS,
	[Yefx] [int]  
	);
	
	with temp as(
	select * from VIEW_TBFS where ProjectID=@ProjectID and FSCode=@FSCode
	union all 
	select b.* from temp a ,VIEW_TBFS b
	where b.ProjectID=@projectID and a.FSCode = b.TBGrouping 
	)

	insert into @tempTBFS
	select FSCode,FsName,Unchecked*Yefx as Unchecked,AjeJF,AjeDF,Adjusted*Yefx as Adjusted,RjeJF,RjeDF,Checked*Yefx as Checked,
	PY1*Yefx as PY1,TBType,TBGrouping,Yefx
	from temp 
	--WHERE (qcye<0 or jfje<0 or dfje<0 or qmye<0 or unchecked<0 or checked<0 or
	--qcye>0 or jfje>0 or dfje>0 or qmye>0 or unchecked>0 or checked>0)	
	--select * from @tempTBFS where fscode = @FSCODE		

	select @UpperYearProjectID  = isnull(UpperYearProjectID,'') from NeweasV5.dbo.ProjectsInfo  where ProjectID = @ProjectID and ContinueDate = 1

if (@UpperYearProjectID is not null and @UpperYearProjectID != '')
begin
--		select a.FSCode as AccountCode,a.FsName as AccAuxName,a.Unchecked,a.AjeJF,a.AjeDF,a.Adjusted,a.RjeJF,a.RjeDF,a.Checked,
--		isnull(b.Checked*b.Yefx,0) as  PY1,a.TBType,a.TBGrouping,a.Yefx
--		from @tempTBFS  a
--		join VIEW_TBFS b
--		on a.FSCode = b.FSCode  		
--		and a.fscode != @FSCODE		
--		and b.ProjectID =@UpperYearProjectID  
--		union
		select a.AccountCode,a.AccAuxName,a.Unchecked*a.Yefx as Unchecked,a.AjeJF,a.AjeDF,a.Adjusted*a.Yefx as Adjusted,a.RjeJF,a.RjeDF,a.Checked*a.Yefx as Checked,
		isnull((select sum(c.Checked*c.Yefx) from dbo.VIEW_TBDetail c where c.ProjectID=@UpperYearProjectID and c.AccountCode=a.AccountCode and c.IsAux = 0 and c.fscode in (select fscode from @tempTBFS)),0) as PY1
		,a.TBType,a.TBGrouping,a.Yefx
		from VIEW_TBDETAIL a join @tempTBFS b on a.fscode = b.fscode	
		WHERE a.projectid=@ProjectID and a.IsAux = 0
end
else
begin
--		select a.FSCode as AccountCode,a.FsName as AccAuxName,a.Unchecked,a.AjeJF,a.AjeDF,a.Adjusted,a.RjeJF,a.RjeDF,a.Checked,
--		isnull(b.Checked*b.Yefx,0) as  PY1,a.TBType,a.TBGrouping,a.Yefx
--		from @tempTBFS  a
--		join VIEW_TBFS b
--		on a.FSCode = b.FSCode  		
--		and a.fscode != @FSCODE		
--		and b.ProjectID =@UpperYearProjectID  
--		union
		select a.AccountCode,a.AccAuxName,a.Unchecked*a.Yefx as Unchecked,a.AjeJF,a.AjeDF,a.Adjusted*a.Yefx as Adjusted,a.RjeJF,a.RjeDF,a.Checked*a.Yefx as Checked,a.PY1
		,a.TBType,a.TBGrouping,a.Yefx
		from VIEW_TBDETAIL a join @tempTBFS b on a.fscode = b.fscode	
		WHERE a.projectid=@ProjectID and a.IsAux = 0
end
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetMonthlyCutoffTest')
   BEGIN
       DROP  Procedure  GetMonthlyCutoffTest
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : 获取截止前后一个月样本数据
  Created   : 
********************************************************************************/

CREATE Procedure [dbo].GetMonthlyCutoffTest 
  @ProjectID           varchar(100), 
  @Code                varchar(50) ,
  @OsDate              Datetime
AS 
  create table #CutofftestTemp (
   VoucherID     varchar(50)     collate Chinese_PRC_CS_AS_KS_WS,
   ProjectID     varchar(100)    collate Chinese_PRC_CS_AS_KS_WS,
   FSCode        varchar(50)     collate Chinese_PRC_CS_AS_KS_WS,
   AccountCode   varchar(100)    collate Chinese_PRC_CS_AS_KS_WS,
   AccountName   varchar(100)    collate Chinese_PRC_CI_AS,
   ProjectCode   varchar(100)    collate Chinese_PRC_CS_AS_KS_WS,
   IsBefore      int             ,
   Sample        int             ,
   OsDate        datetime        ,
   PZH           VARCHAR(100)    ,
   dfkm          varchar(100)    collate Chinese_PRC_CS_AS_KS_WS,
   JD            INT             ,
   JE            decimal(20,2)   ,
   ZY            varchar(255)    )
  Declare	@FSCode varchar(255)
  set @FSCode=@Code
  --截止日后
  insert into #CutofftestTemp
  select  
    	voucherid,@projectid AS projectid,@fscode AS fscode,accountcode,'' accountname,'' as ProjectCode,
    	1 AS  IsBefore,1 AS sample,A.Date AS OsDate,isnull(A.Pzlx,'')+isnull(A.Pzh,'') AS pzh,dfkm,
    	JD,(A.Jfje+A.Dfje) as JE,A.Zy
  from
      TBVoucher  A 
  where A.projectid=@projectid and  A.fllx=1	and datediff(dd,A.date,@OsDate)<=31 and datediff(dd,A.date,@OsDate)>=0
  		and	exists(select 1	from	TBDetail B where b.projectID=a.ProjectID and b.accountcode=a.accountcode	and B.fscode=@FSCode and b.isaux=0) 
  ORDER BY A.date desc,A.Pzh desc
  --截止日后
  insert into #CutofftestTemp
  SELECT  
    	voucherid,@projectid AS projectid,@fscode AS fscode,accountcode,'' accountname,'' as ProjectCode,
    	0 AS  IsBefore,1 AS sample,A.Date AS OsDate,isnull(A.Pzlx,'')+isnull(A.Pzh,'') AS pzh,dfkm,
    	JD,A.Jfje+A.Dfje as JE,A.Zy
  	FROM 
      QhJzpz  A 
  	WHERE A.projectid=@projectid and  A.fllx=1	and datediff(dd,A.date,@OsDate)>=-31 and datediff(dd,A.date,@OsDate)<0
  		and	exists(select 1	from	TBDetail B where b.projectID=a.ProjectID and b.accountcode=a.accountcode	and B.fscode=@FSCode and  b.isaux=0)
  ORDER BY A.Date asc,A.pzh asc
  select 
  A.VoucherID   , 
  A.ProjectID   ,
  A.FSCode      ,
  A.AccountCode ,
  B.accauxname as AccountName ,
  A.ProjectCode ,
  A.IsBefore    ,
  A.Sample      ,
  A.OsDate      ,
  A.PZH         ,
  A.dfkm        ,
  A.JD          ,
  A.JE          ,
  A.ZY          
  from #CutofftestTemp  A 
  LEFT JOIN TBDetail B 
  ON A.AccountCode=B.AccountCode
  and A.ProjectId=B.ProjectID
  and A.FSCode=B.FSCode
   and  b.isaux=0
  ORDER BY IsBefore,A.AccountCode,A.FSCode,A.OsDate,A.JE  desc	
  
  drop table #CutofftestTemp

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetMonthlyReplaceTest')
   BEGIN
       DROP  Procedure  GetMonthlyReplaceTest
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : 获取截止前后一个月样本数据
  Created   : 
********************************************************************************/

CREATE Procedure [dbo].GetMonthlyReplaceTest 
  @ProjectID           varchar(100), 
  @Code                varchar(50) ,
  @AccountCode                varchar(50) ,
  @AuxiliaryCode                varchar(50) ,
  @OsDate              Datetime
AS 

	exec UpdateVoucherProjectCode @ProjectID,@Code,1
  create table #ReplaceTestTemp (
   VoucherID     varchar(50)     collate Chinese_PRC_CS_AS_KS_WS,
   ProjectID     varchar(100)    collate Chinese_PRC_CS_AS_KS_WS,
   FSCode        varchar(50)     collate Chinese_PRC_CS_AS_KS_WS,
   AccountCode   varchar(100)    collate Chinese_PRC_CS_AS_KS_WS,
   AccountName   varchar(100)    collate Chinese_PRC_CI_AS,
   ProjectCode   varchar(100)    collate Chinese_PRC_CS_AS_KS_WS,
   OsDate        datetime        ,
   PZH           VARCHAR(100)    ,
   dfkm          varchar(100)    collate Chinese_PRC_CS_AS_KS_WS,
   JD            INT             ,
   JE            decimal(20,2)   ,
   ZY            varchar(255)    )
  Declare	@FSCode varchar(255)
  set @FSCode=@Code
  --截止日后
  insert into #ReplaceTestTemp
  

 SELECT  
    	voucherid,@ProjectID AS projectid,@Code AS fscode,accountcode,
      '' accountname, ISNULL(a.ProjectCode,'') AS ProjectCode,A.Date AS OsDate,isnull(A.Pzlx,'')+isnull(A.Pzh,'') AS pzh,dfkm,
    	JD,A.Jfje+A.Dfje as JE,A.Zy
  	FROM 
      QhJzpz  A 
  	WHERE A.projectid=@ProjectID and  A.fllx=1
      and datediff(dd,A.date,@OsDate)>=-61 and datediff(dd,A.date,@OsDate)<0
  		and	exists(select 1	from	TBDetail B where b.projectID=a.ProjectID 
      and b.accountcode=a.accountcode and b.auxiliaryCode	=ISNULL(a.ProjectCode,'')
      and B.AccountCode=@AccountCode and B.AuxiliaryCode=@AuxiliaryCode
      and B.fscode=@Code )
  ORDER BY A.Date asc,A.pzh asc

  select 
  A.VoucherID   , 
  A.ProjectID   ,
  A.FSCode      ,
  A.AccountCode ,
  B.accauxname as AccountName ,
  A.ProjectCode ,
  A.OsDate      ,
  A.PZH         ,
  A.dfkm        ,
  A.JD          ,
  A.JE          ,
  A.ZY          
  from #ReplaceTestTemp  A 
  LEFT JOIN TBDetail B 
  ON A.ProjectId=B.ProjectID
  and a.ProjectCode=b.auxiliaryCode
  and A.AccountCode=B.AccountCode
  and A.FSCode=B.FSCode
  and b.ismx=1
  and b.datatype=0
  ORDER BY A.OsDate,A.AccountCode,A.FSCode,A.JE  desc	
  
  drop table #ReplaceTestTemp
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetNoteAndTBByAge')
   BEGIN
       DROP  Procedure  GetNoteAndTBByAge
	END
GO

/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -Module AuditPrograml
  Created   : Huasheng 2016/08/03
  Updated   : -
  Version   : 1.0.0
  说明：获取单体附注关联的账龄数据金额
********************************************************************************/

Create PROCEDURE GetNoteAndTBByAge
	@ProjectID	varchar(100),	
	@FormCode	 varchar(100)
AS
BEGIN

	DECLARE @UpperYearPID varchar(100),@ZLD_Checked DECIMAL(20,2)
	SELECT @UpperYearPID=UpperYearProjectID FROM neweasv5.DBO.PROJECTSINFO where PROJECTID=@ProjectID

	DECLARE @FSCODE VARCHAR(50),@YEFX INT
	SELECT @FSCODE=FSCODE FROM DBO.NoteForm WHERE PROJECTID=@PROJECTID AND FormCode=@FORMCODE
	SELECT @YEFX=YEFX FROM DBO.FSCodeConfig WHERE PROJECTID=@PROJECTID AND FSCODE=@FSCODE
	DECLARE @TABLE_RESULT TABLE(NoteCode VARCHAR(50) not null,FSCode VARCHAR(50) not null,AccountCode VARCHAR(50) not null,AuxiliaryCode VARCHAR(50) not null,
	AccountName    VARCHAR(50) not null,TBType  int,IsMx	int		not null,kmsx VARCHAR(50),YEFX	int		not null,TBGrouping VARCHAR(50),
	Sqqmye DECIMAL(20,2) NOT NULL,Qqccgz DECIMAL(20,2) NOT NULL,qcye DECIMAL(20,2) NOT NULL,jfje DECIMAL(20,2) NOT NULL,
	dfje DECIMAL(20,2) NOT NULL,Qmye DECIMAL(20,2) NOT NULL,CrjeJF DECIMAL(20,2) NOT NULL,CrjeDF DECIMAL(20,2) NOT NULL,
	Unchecked DECIMAL(20,2) NOT NULL,AjeJF DECIMAL(20,2) NOT NULL,AjeDF DECIMAL(20,2) NOT NULL,Adjusted DECIMAL(20,2) NOT NULL,
	RjeJF DECIMAL(20,2) NOT NULL,RjeDF DECIMAL(20,2) NOT NULL,Checked DECIMAL(20,2) NOT NULL)
	DECLARE @ZLD1 DECIMAL(20,2),@ZLD2 DECIMAL(20,2),@ZLD3 DECIMAL(20,2),@ZLD4 DECIMAL(20,2)
	DECLARE @ZLD5 DECIMAL(20,2),@ZLD6 DECIMAL(20,2),@ZLD7 DECIMAL(20,2),@ZLD8 DECIMAL(20,2),@ZLD9 DECIMAL(20,2)
	DECLARE @HZZBZLD1 DECIMAL(20,2),@HZZBZLD2 DECIMAL(20,2),@HZZBZLD3 DECIMAL(20,2),@HZZBZLD4 DECIMAL(20,2)
	DECLARE @HZZBZLD5 DECIMAL(20,2),@HZZBZLD6 DECIMAL(20,2),@HZZBZLD7 DECIMAL(20,2),@HZZBZLD8 DECIMAL(20,2),@HZZBZLD9 DECIMAL(20,2)
	
	select @ZLD1=sum(ZLD1),@ZLD2=sum(ZLD2),@ZLD3=sum(ZLD3),@ZLD4=sum(ZLD4),@ZLD5=sum(ZLD5),@ZLD6=sum(ZLD6),@ZLD7=sum(ZLD7),@ZLD8=sum(ZLD8),@ZLD9=sum(ZLD9)
	,@HZZBZLD1=sum(HZZBZLD1),@HZZBZLD2=sum(HZZBZLD2),@HZZBZLD3=sum(HZZBZLD3),@HZZBZLD4=sum(HZZBZLD4),@HZZBZLD5=sum(HZZBZLD5),@HZZBZLD6=sum(HZZBZLD6),@HZZBZLD7=sum(HZZBZLD7),@HZZBZLD8=sum(HZZBZLD8),@HZZBZLD9=sum(HZZBZLD9)
	  from DBO.Tbwlzl WHERE PROJECTID=@PROJECTID AND (FSCODE=@FSCODE+'YZ' OR FSCODE=@FSCODE)
	SET @ZLD_Checked=@ZLD1+@ZLD2+@ZLD3+@ZLD4+@ZLD5+@ZLD6+@ZLD7+@ZLD8+@ZLD9

	SET @ZLD_Checked=ISNULL(@ZLD_Checked,1)
	IF @ZLD_Checked=0 SET @ZLD_Checked=1
	SET @ZLD1=ISNULL(@ZLD1,0)*@YEFX
	SET @ZLD2=ISNULL(@ZLD2,0)*@YEFX
	SET @ZLD3=ISNULL(@ZLD3,0)*@YEFX
	SET @ZLD4=ISNULL(@ZLD4,0)*@YEFX
	SET @ZLD5=ISNULL(@ZLD5,0)*@YEFX
	SET @ZLD6=ISNULL(@ZLD6,0)*@YEFX
	SET @ZLD7=ISNULL(@ZLD7,0)*@YEFX
	SET @ZLD8=ISNULL(@ZLD8,0)*@YEFX
	SET @ZLD9=ISNULL(@ZLD9,0)*@YEFX
	SET @HZZBZLD1=ISNULL(@HZZBZLD1,0)*@YEFX
	SET @HZZBZLD2=ISNULL(@HZZBZLD2,0)*@YEFX
	SET @HZZBZLD3=ISNULL(@HZZBZLD3,0)*@YEFX
	SET @HZZBZLD4=ISNULL(@HZZBZLD4,0)*@YEFX
	SET @HZZBZLD5=ISNULL(@HZZBZLD5,0)*@YEFX
	SET @HZZBZLD6=ISNULL(@HZZBZLD6,0)*@YEFX
	SET @HZZBZLD7=ISNULL(@HZZBZLD7,0)*@YEFX
	SET @HZZBZLD8=ISNULL(@HZZBZLD8,0)*@YEFX
	SET @HZZBZLD9=ISNULL(@HZZBZLD9,0)*@YEFX

	INSERT INTO @TABLE_RESULT (NoteCode,FSCode,AccountCode,AuxiliaryCode,AccountName,ISMX,YEFX,Sqqmye,Qqccgz,qcye,jfje,dfje,Qmye,CrjeJF,CrjeDF,Unchecked,AjeJF,AjeDF,Adjusted,RjeJF,RjeDF,Checked)
	VALUES('AFF2A1A2-9BB4-464B-8EEE-21F920CE71E3',@FSCODE,NEWID(),NEWID(),'',1,@YEFX,0,0,0,@ZLD1/@ZLD_Checked*100,0,@ZLD1,0,0,0,0,0,@HZZBZLD1,0,0,@ZLD1-@HZZBZLD1)
	INSERT INTO @TABLE_RESULT (NoteCode,FSCode,AccountCode,AuxiliaryCode,AccountName,ISMX,YEFX,Sqqmye,Qqccgz,qcye,jfje,dfje,Qmye,CrjeJF,CrjeDF,Unchecked,AjeJF,AjeDF,Adjusted,RjeJF,RjeDF,Checked)
	VALUES('096C5549-D486-4CD7-A36D-209B99FA2CD1',@FSCODE,NEWID(),NEWID(),'',1,@YEFX,0,0,0,@ZLD2/@ZLD_Checked*100,0,@ZLD2,0,0,0,0,0,@HZZBZLD2,0,0,@ZLD2-@HZZBZLD2)
	INSERT INTO @TABLE_RESULT (NoteCode,FSCode,AccountCode,AuxiliaryCode,AccountName,ISMX,YEFX,Sqqmye,Qqccgz,qcye,jfje,dfje,Qmye,CrjeJF,CrjeDF,Unchecked,AjeJF,AjeDF,Adjusted,RjeJF,RjeDF,Checked)
	VALUES('C6BB4D4F-F8F5-42AA-A6CA-24EC77D27EE2',@FSCODE,NEWID(),NEWID(),'',1,@YEFX,0,0,0,@ZLD3/@ZLD_Checked*100,0,@ZLD3,0,0,0,0,0,@HZZBZLD3,0,0,@ZLD3-@HZZBZLD3)	
	INSERT INTO @TABLE_RESULT (NoteCode,FSCode,AccountCode,AuxiliaryCode,AccountName,ISMX,YEFX,Sqqmye,Qqccgz,qcye,jfje,dfje,Qmye,CrjeJF,CrjeDF,Unchecked,AjeJF,AjeDF,Adjusted,RjeJF,RjeDF,Checked)
	VALUES('A12A344F-2E7D-4AF8-BBF4-78E49559C2B1',@FSCODE,NEWID(),NEWID(),'',1,@YEFX,0,0,0,@ZLD4/@ZLD_Checked*100,0,@ZLD4,0,0,0,0,0,@HZZBZLD4,0,0,@ZLD4-@HZZBZLD4)
	INSERT INTO @TABLE_RESULT (NoteCode,FSCode,AccountCode,AuxiliaryCode,AccountName,ISMX,YEFX,Sqqmye,Qqccgz,qcye,jfje,dfje,Qmye,CrjeJF,CrjeDF,Unchecked,AjeJF,AjeDF,Adjusted,RjeJF,RjeDF,Checked)
	VALUES('4110FBEB-3A4C-4935-BF9D-14D893A58EF5',@FSCODE,NEWID(),NEWID(),'',1,@YEFX,0,0,0,@ZLD5/@ZLD_Checked*100,0,@ZLD5,0,0,0,0,0,@HZZBZLD5,0,0,@ZLD5-@HZZBZLD5)
	INSERT INTO @TABLE_RESULT (NoteCode,FSCode,AccountCode,AuxiliaryCode,AccountName,ISMX,YEFX,Sqqmye,Qqccgz,qcye,jfje,dfje,Qmye,CrjeJF,CrjeDF,Unchecked,AjeJF,AjeDF,Adjusted,RjeJF,RjeDF,Checked)
	VALUES('AC981502-7E7F-4003-96AF-9446720AD91C',@FSCODE,NEWID(),NEWID(),'',1,@YEFX,0,0,0,@ZLD6/@ZLD_Checked*100,0,@ZLD6,0,0,0,0,0,@HZZBZLD6,0,0,@ZLD6-@HZZBZLD6)
	INSERT INTO @TABLE_RESULT (NoteCode,FSCode,AccountCode,AuxiliaryCode,AccountName,ISMX,YEFX,Sqqmye,Qqccgz,qcye,jfje,dfje,Qmye,CrjeJF,CrjeDF,Unchecked,AjeJF,AjeDF,Adjusted,RjeJF,RjeDF,Checked)
	VALUES('710B0949-ED54-46A6-BDCC-BB2C1D80F31D',@FSCODE,NEWID(),NEWID(),'',1,@YEFX,0,0,0,@ZLD7/@ZLD_Checked*100,0,@ZLD7,0,0,0,0,0,@HZZBZLD7,0,0,@ZLD7-@HZZBZLD7)
	INSERT INTO @TABLE_RESULT (NoteCode,FSCode,AccountCode,AuxiliaryCode,AccountName,ISMX,YEFX,Sqqmye,Qqccgz,qcye,jfje,dfje,Qmye,CrjeJF,CrjeDF,Unchecked,AjeJF,AjeDF,Adjusted,RjeJF,RjeDF,Checked)
	VALUES('C8B315E0-198C-4246-AEB9-0BF6CF2CCC7B',@FSCODE,NEWID(),NEWID(),'',1,@YEFX,0,0,0,@ZLD8/@ZLD_Checked*100,0,@ZLD8,0,0,0,0,0,@HZZBZLD8,0,0,@ZLD8-@HZZBZLD8)
	INSERT INTO @TABLE_RESULT (NoteCode,FSCode,AccountCode,AuxiliaryCode,AccountName,ISMX,YEFX,Sqqmye,Qqccgz,qcye,jfje,dfje,Qmye,CrjeJF,CrjeDF,Unchecked,AjeJF,AjeDF,Adjusted,RjeJF,RjeDF,Checked)
	VALUES('7CD6792D-A233-41D0-94CA-7D66E71A5441',@FSCODE,NEWID(),NEWID(),'',1,@YEFX,0,0,0,@ZLD9/@ZLD_Checked*100,0,@ZLD9,0,0,0,0,0,@HZZBZLD9,0,0,@ZLD9-@HZZBZLD9)

	IF(@UpperYearPID<>'') BEGIN
		select @ZLD1=sum(ZLD1),@ZLD2=sum(ZLD2),@ZLD3=sum(ZLD3),@ZLD4=sum(ZLD4),@ZLD5=sum(ZLD5),@ZLD6=sum(ZLD6),@ZLD7=sum(ZLD7),@ZLD8=sum(ZLD8),@ZLD9=sum(ZLD9)
		,@HZZBZLD1=sum(HZZBZLD1),@HZZBZLD2=sum(HZZBZLD2),@HZZBZLD3=sum(HZZBZLD3),@HZZBZLD4=sum(HZZBZLD4),@HZZBZLD5=sum(HZZBZLD5),@HZZBZLD6=sum(HZZBZLD6),@HZZBZLD7=sum(HZZBZLD7),@HZZBZLD8=sum(HZZBZLD8),@HZZBZLD9=sum(HZZBZLD9)
		  from DBO.Tbwlzl WHERE PROJECTID=@UpperYearPID AND (FSCODE=@FSCODE+'YZ' OR FSCODE=@FSCODE)
		SET @ZLD_Checked=@ZLD1+@ZLD2+@ZLD3+@ZLD4+@ZLD5+@ZLD6+@ZLD7+@ZLD8+@ZLD9

		SET @ZLD_Checked=ISNULL(@ZLD_Checked,1)
		IF @ZLD_Checked=0 SET @ZLD_Checked=1
		SET @ZLD1=ISNULL(@ZLD1,0)
		SET @ZLD2=ISNULL(@ZLD2,0)
		SET @ZLD3=ISNULL(@ZLD3,0)
		SET @ZLD4=ISNULL(@ZLD4,0)
		SET @ZLD5=ISNULL(@ZLD5,0)
		SET @ZLD6=ISNULL(@ZLD6,0)
		SET @ZLD7=ISNULL(@ZLD7,0)
		SET @ZLD8=ISNULL(@ZLD8,0)
		SET @ZLD9=ISNULL(@ZLD9,0)
		SET @HZZBZLD1=ISNULL(@HZZBZLD1,0)
		SET @HZZBZLD2=ISNULL(@HZZBZLD2,0)
		SET @HZZBZLD3=ISNULL(@HZZBZLD3,0)
		SET @HZZBZLD4=ISNULL(@HZZBZLD4,0)
		SET @HZZBZLD5=ISNULL(@HZZBZLD5,0)
		SET @HZZBZLD6=ISNULL(@HZZBZLD6,0)
		SET @HZZBZLD7=ISNULL(@HZZBZLD7,0)
		SET @HZZBZLD8=ISNULL(@HZZBZLD8,0)
		SET @HZZBZLD9=ISNULL(@HZZBZLD9,0)

		UPDATE @TABLE_RESULT SET qcye=@ZLD1,AjeJF=@HZZBZLD1,AjeDF=@ZLD1-@HZZBZLD1,DFJE=@ZLD1/@ZLD_Checked*100 WHERE NoteCode='AFF2A1A2-9BB4-464B-8EEE-21F920CE71E3'
		UPDATE @TABLE_RESULT SET qcye=@ZLD2,AjeJF=@HZZBZLD2,AjeDF=@ZLD2-@HZZBZLD2,DFJE=@ZLD2/@ZLD_Checked*100 WHERE NoteCode='096C5549-D486-4CD7-A36D-209B99FA2CD1'
		UPDATE @TABLE_RESULT SET qcye=@ZLD3,AjeJF=@HZZBZLD3,AjeDF=@ZLD3-@HZZBZLD3,DFJE=@ZLD3/@ZLD_Checked*100 WHERE NoteCode='C6BB4D4F-F8F5-42AA-A6CA-24EC77D27EE2'
		UPDATE @TABLE_RESULT SET qcye=@ZLD4,AjeJF=@HZZBZLD4,AjeDF=@ZLD4-@HZZBZLD4,DFJE=@ZLD4/@ZLD_Checked*100 WHERE NoteCode='A12A344F-2E7D-4AF8-BBF4-78E49559C2B1'
		UPDATE @TABLE_RESULT SET qcye=@ZLD5,AjeJF=@HZZBZLD5,AjeDF=@ZLD5-@HZZBZLD5,DFJE=@ZLD5/@ZLD_Checked*100 WHERE NoteCode='4110FBEB-3A4C-4935-BF9D-14D893A58EF5'
		UPDATE @TABLE_RESULT SET qcye=@ZLD6,AjeJF=@HZZBZLD6,AjeDF=@ZLD6-@HZZBZLD6,DFJE=@ZLD6/@ZLD_Checked*100 WHERE NoteCode='AC981502-7E7F-4003-96AF-9446720AD91C'
		UPDATE @TABLE_RESULT SET qcye=@ZLD7,AjeJF=@HZZBZLD7,AjeDF=@ZLD7-@HZZBZLD7,DFJE=@ZLD7/@ZLD_Checked*100 WHERE NoteCode='710B0949-ED54-46A6-BDCC-BB2C1D80F31D'
		UPDATE @TABLE_RESULT SET qcye=@ZLD8,AjeJF=@HZZBZLD8,AjeDF=@ZLD8-@HZZBZLD8,DFJE=@ZLD8/@ZLD_Checked*100 WHERE NoteCode='C8B315E0-198C-4246-AEB9-0BF6CF2CCC7B'
		UPDATE @TABLE_RESULT SET qcye=@ZLD9,AjeJF=@HZZBZLD9,AjeDF=@ZLD9-@HZZBZLD9,DFJE=@ZLD9/@ZLD_Checked*100 WHERE NoteCode='7CD6792D-A233-41D0-94CA-7D66E71A5441'
	END
	SELECT * FROM @TABLE_RESULT

END 



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetNoteAndTBByRish')
   BEGIN
       DROP  Procedure  GetNoteAndTBByRish
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -Module AuditPrograml
  Created   : Huasheng 2016/06/15
  Updated   : -
  Version   : 1.0.0
  说明：获取单体账龄附注按金额、风险特征披露关联的财务数据金额
********************************************************************************/

Create PROCEDURE GetNoteAndTBByRish
	@ProjectID	varchar(100),	
	@FormCode	 varchar(100)
AS
BEGIN
	
	DECLARE @UpperYearPID varchar(100),@ZLD_Checked DECIMAL(20,2)
	SELECT @UpperYearPID=UpperYearProjectID FROM neweasv5.DBO.PROJECTSINFO where PROJECTID=@ProjectID

	DECLARE @FSCODE VARCHAR(50),@YEFX INT
	SELECT @FSCODE=FSCODE FROM NoteForm WHERE PROJECTID=@PROJECTID AND FormCode=@FORMCODE
	SELECT @YEFX=YEFX FROM DBO.FSCodeConfig WHERE PROJECTID=@PROJECTID AND FSCODE=@FSCODE
	DECLARE @TABLE_RESULT TABLE(NoteCode VARCHAR(50) not null,FSCode VARCHAR(50) not null,AccountCode VARCHAR(50) not null,AuxiliaryCode VARCHAR(50) not null,
	AccountName    VARCHAR(50) not null,TBType  int,IsMx	int		not null,kmsx VARCHAR(50),YEFX	int		not null,TBGrouping VARCHAR(50),
	Sqqmye DECIMAL(20,2) NOT NULL,Qqccgz DECIMAL(20,2) NOT NULL,qcye DECIMAL(20,2) NOT NULL,jfje DECIMAL(20,2) NOT NULL,
	dfje DECIMAL(20,2) NOT NULL,Qmye DECIMAL(20,2) NOT NULL,CrjeJF DECIMAL(20,2) NOT NULL,CrjeDF DECIMAL(20,2) NOT NULL,
	Unchecked DECIMAL(20,2) NOT NULL,AjeJF DECIMAL(20,2) NOT NULL,AjeDF DECIMAL(20,2) NOT NULL,Adjusted DECIMAL(20,2) NOT NULL,
	RjeJF DECIMAL(20,2) NOT NULL,RjeDF DECIMAL(20,2) NOT NULL,Checked DECIMAL(20,2) NOT NULL)
	DECLARE @ZLD1 DECIMAL(20,2),@ZLD2 DECIMAL(20,2),@ZLD3 DECIMAL(20,2),@ZLD4 DECIMAL(20,2)
	DECLARE @ZLD5 DECIMAL(20,2),@ZLD6 DECIMAL(20,2),@ZLD7 DECIMAL(20,2),@ZLD8 DECIMAL(20,2),@ZLD9 DECIMAL(20,2)
	DECLARE @HZZBZLD1 DECIMAL(20,2),@HZZBZLD2 DECIMAL(20,2),@HZZBZLD3 DECIMAL(20,2),@HZZBZLD4 DECIMAL(20,2)
	DECLARE @HZZBZLD5 DECIMAL(20,2),@HZZBZLD6 DECIMAL(20,2),@HZZBZLD7 DECIMAL(20,2),@HZZBZLD8 DECIMAL(20,2),@HZZBZLD9 DECIMAL(20,2)
	DECLARE @ZLD_ZD DECIMAL(20,2),@ZLD_FZD DECIMAL(20,2), @HZZBZLD_ZD DECIMAL(20,2),@HZZBZLD_FZD DECIMAL(20,2)

	SELECT @ZLD_ZD=SUM(ZLD1+ZLD2+ZLD3+ZLD4+ZLD5+ZLD6+ZLD7+ZLD8+ZLD9),@HZZBZLD_ZD=SUM(HZZBZLD1+HZZBZLD2+HZZBZLD3+HZZBZLD4+HZZBZLD5+HZZBZLD6+HZZBZLD7+HZZBZLD8+HZZBZLD9)
		 FROM DBO.Tbwlzl WHERE PROJECTID=@PROJECTID AND FSCODE=@FSCODE+'YZ'AND significant=1 AND Impairmenttestmethod=0
	SELECT @ZLD_FZD=SUM(ZLD1+ZLD2+ZLD3+ZLD4+ZLD5+ZLD6+ZLD7+ZLD8+ZLD9),@HZZBZLD_FZD=SUM(HZZBZLD1+HZZBZLD2+HZZBZLD3+HZZBZLD4+HZZBZLD5+HZZBZLD6+HZZBZLD7+HZZBZLD8+HZZBZLD9)
		 FROM DBO.Tbwlzl WHERE PROJECTID=@PROJECTID AND FSCODE=@FSCODE+'YZ' AND significant=0 AND Impairmenttestmethod=0
	select @ZLD1=sum(ZLD1),@ZLD2=sum(ZLD2),@ZLD3=sum(ZLD3),@ZLD4=sum(ZLD4),@ZLD5=sum(ZLD5),@ZLD6=sum(ZLD6),@ZLD7=sum(ZLD7),@ZLD8=sum(ZLD8),@ZLD9=sum(ZLD9)
	,@HZZBZLD1=sum(HZZBZLD1),@HZZBZLD2=sum(HZZBZLD2),@HZZBZLD3=sum(HZZBZLD3),@HZZBZLD4=sum(HZZBZLD4),@HZZBZLD5=sum(HZZBZLD5),@HZZBZLD6=sum(HZZBZLD6),@HZZBZLD7=sum(HZZBZLD7),@HZZBZLD8=sum(HZZBZLD8),@HZZBZLD9=sum(HZZBZLD9)
	  from DBO.Tbwlzl WHERE PROJECTID=@PROJECTID AND FSCODE=@FSCODE+'YZ'/*AND significant=0*/ AND Impairmenttestmethod=1	
	SET @ZLD_ZD=ISNULL(@ZLD_ZD,0)
	SET @HZZBZLD_ZD=ISNULL(@HZZBZLD_ZD,0)
	SET @ZLD_FZD=ISNULL(@ZLD_FZD,0)
	SET @HZZBZLD_FZD=ISNULL(@HZZBZLD_FZD,0)	
	SET @ZLD1=ISNULL(@ZLD1,0)
	SET @ZLD2=ISNULL(@ZLD2,0)
	SET @ZLD3=ISNULL(@ZLD3,0)
	SET @ZLD4=ISNULL(@ZLD4,0)
	SET @ZLD5=ISNULL(@ZLD5,0)
	SET @ZLD6=ISNULL(@ZLD6,0)
	SET @ZLD7=ISNULL(@ZLD7,0)
	SET @ZLD8=ISNULL(@ZLD8,0)
	SET @ZLD9=ISNULL(@ZLD9,0)
	SET @HZZBZLD1=ISNULL(@HZZBZLD1,0)
	SET @HZZBZLD2=ISNULL(@HZZBZLD2,0)
	SET @HZZBZLD3=ISNULL(@HZZBZLD3,0)
	SET @HZZBZLD4=ISNULL(@HZZBZLD4,0)
	SET @HZZBZLD5=ISNULL(@HZZBZLD5,0)
	SET @HZZBZLD6=ISNULL(@HZZBZLD6,0)
	SET @HZZBZLD7=ISNULL(@HZZBZLD7,0)
	SET @HZZBZLD8=ISNULL(@HZZBZLD8,0)
	SET @HZZBZLD9=ISNULL(@HZZBZLD9,0)
	SET @ZLD_Checked=@ZLD1+@ZLD2+@ZLD3+@ZLD4+@ZLD5+@ZLD6+@ZLD7+@ZLD8+@ZLD9+@ZLD_ZD+@ZLD_FZD
	SET @ZLD_Checked=ISNULL(@ZLD_Checked,1)
	IF @ZLD_Checked=0 SET @ZLD_Checked=1
	
	INSERT INTO @TABLE_RESULT (NoteCode,FSCode,AccountCode,AuxiliaryCode,AccountName,ISMX,YEFX,Sqqmye,Qqccgz,qcye,jfje,dfje,Qmye,CrjeJF,CrjeDF,Unchecked,AjeJF,AjeDF,Adjusted,RjeJF,RjeDF,Checked)
	VALUES('076F19EA-9578-4025-9801-1D5575E87570',@FSCODE,NEWID(),NEWID(),'',1,@YEFX,0,0,0,@ZLD_ZD/@ZLD_Checked*100,0,@ZLD_ZD,0,0,0,0,0,@HZZBZLD_ZD,0,0,@ZLD_ZD-@HZZBZLD_ZD)
	INSERT INTO @TABLE_RESULT (NoteCode,FSCode,AccountCode,AuxiliaryCode,AccountName,ISMX,YEFX,Sqqmye,Qqccgz,qcye,jfje,dfje,Qmye,CrjeJF,CrjeDF,Unchecked,AjeJF,AjeDF,Adjusted,RjeJF,RjeDF,Checked)
	VALUES('46B02F68-9486-4D51-A85A-AF09458AE0D9',@FSCODE,NEWID(),NEWID(),'',1,@YEFX,0,0,0,@ZLD_FZD/@ZLD_Checked*100,0,@ZLD_FZD,0,0,0,0,0,@HZZBZLD_FZD,0,0,@ZLD_FZD-@HZZBZLD_FZD)

	INSERT INTO @TABLE_RESULT (NoteCode,FSCode,AccountCode,AuxiliaryCode,AccountName,ISMX,YEFX,Sqqmye,Qqccgz,qcye,jfje,dfje,Qmye,CrjeJF,CrjeDF,Unchecked,AjeJF,AjeDF,Adjusted,RjeJF,RjeDF,Checked)
	VALUES('AFF2A1A2-9BB4-464B-8EEE-21F920CE71E3',@FSCODE,NEWID(),NEWID(),'',1,@YEFX,0,0,0,@ZLD1/@ZLD_Checked*100,0,@ZLD1,0,0,0,0,0,@HZZBZLD1,0,0,@ZLD1-@HZZBZLD1)
	INSERT INTO @TABLE_RESULT (NoteCode,FSCode,AccountCode,AuxiliaryCode,AccountName,ISMX,YEFX,Sqqmye,Qqccgz,qcye,jfje,dfje,Qmye,CrjeJF,CrjeDF,Unchecked,AjeJF,AjeDF,Adjusted,RjeJF,RjeDF,Checked)
	VALUES('096C5549-D486-4CD7-A36D-209B99FA2CD1',@FSCODE,NEWID(),NEWID(),'',1,@YEFX,0,0,0,@ZLD2/@ZLD_Checked*100,0,@ZLD2,0,0,0,0,0,@HZZBZLD2,0,0,@ZLD2-@HZZBZLD2)
	INSERT INTO @TABLE_RESULT (NoteCode,FSCode,AccountCode,AuxiliaryCode,AccountName,ISMX,YEFX,Sqqmye,Qqccgz,qcye,jfje,dfje,Qmye,CrjeJF,CrjeDF,Unchecked,AjeJF,AjeDF,Adjusted,RjeJF,RjeDF,Checked)
	VALUES('C6BB4D4F-F8F5-42AA-A6CA-24EC77D27EE2',@FSCODE,NEWID(),NEWID(),'',1,@YEFX,0,0,0,@ZLD3/@ZLD_Checked*100,0,@ZLD3,0,0,0,0,0,@HZZBZLD3,0,0,@ZLD3-@HZZBZLD3)
	INSERT INTO @TABLE_RESULT (NoteCode,FSCode,AccountCode,AuxiliaryCode,AccountName,ISMX,YEFX,Sqqmye,Qqccgz,qcye,jfje,dfje,Qmye,CrjeJF,CrjeDF,Unchecked,AjeJF,AjeDF,Adjusted,RjeJF,RjeDF,Checked)
	VALUES('A12A344F-2E7D-4AF8-BBF4-78E49559C2B1',@FSCODE,NEWID(),NEWID(),'',1,@YEFX,0,0,0,@ZLD4/@ZLD_Checked*100,0,@ZLD4,0,0,0,0,0,@HZZBZLD4,0,0,@ZLD4-@HZZBZLD4)
	INSERT INTO @TABLE_RESULT (NoteCode,FSCode,AccountCode,AuxiliaryCode,AccountName,ISMX,YEFX,Sqqmye,Qqccgz,qcye,jfje,dfje,Qmye,CrjeJF,CrjeDF,Unchecked,AjeJF,AjeDF,Adjusted,RjeJF,RjeDF,Checked)
	VALUES('4110FBEB-3A4C-4935-BF9D-14D893A58EF5',@FSCODE,NEWID(),NEWID(),'',1,@YEFX,0,0,0,@ZLD5/@ZLD_Checked*100,0,@ZLD5,0,0,0,0,0,@HZZBZLD5,0,0,@ZLD5-@HZZBZLD5)
	INSERT INTO @TABLE_RESULT (NoteCode,FSCode,AccountCode,AuxiliaryCode,AccountName,ISMX,YEFX,Sqqmye,Qqccgz,qcye,jfje,dfje,Qmye,CrjeJF,CrjeDF,Unchecked,AjeJF,AjeDF,Adjusted,RjeJF,RjeDF,Checked)
	VALUES('AC981502-7E7F-4003-96AF-9446720AD91C',@FSCODE,NEWID(),NEWID(),'',1,@YEFX,0,0,0,@ZLD6/@ZLD_Checked*100,0,@ZLD6,0,0,0,0,0,@HZZBZLD6,0,0,@ZLD6-@HZZBZLD6)
	INSERT INTO @TABLE_RESULT (NoteCode,FSCode,AccountCode,AuxiliaryCode,AccountName,ISMX,YEFX,Sqqmye,Qqccgz,qcye,jfje,dfje,Qmye,CrjeJF,CrjeDF,Unchecked,AjeJF,AjeDF,Adjusted,RjeJF,RjeDF,Checked)
	VALUES('710B0949-ED54-46A6-BDCC-BB2C1D80F31D',@FSCODE,NEWID(),NEWID(),'',1,@YEFX,0,0,0,@ZLD7/@ZLD_Checked*100,0,@ZLD7,0,0,0,0,0,@HZZBZLD7,0,0,@ZLD7-@HZZBZLD7)
	INSERT INTO @TABLE_RESULT (NoteCode,FSCode,AccountCode,AuxiliaryCode,AccountName,ISMX,YEFX,Sqqmye,Qqccgz,qcye,jfje,dfje,Qmye,CrjeJF,CrjeDF,Unchecked,AjeJF,AjeDF,Adjusted,RjeJF,RjeDF,Checked)
	VALUES('C8B315E0-198C-4246-AEB9-0BF6CF2CCC7B',@FSCODE,NEWID(),NEWID(),'',1,@YEFX,0,0,0,@ZLD8/@ZLD_Checked*100,0,@ZLD8,0,0,0,0,0,@HZZBZLD8,0,0,@ZLD8-@HZZBZLD8)
	INSERT INTO @TABLE_RESULT (NoteCode,FSCode,AccountCode,AuxiliaryCode,AccountName,ISMX,YEFX,Sqqmye,Qqccgz,qcye,jfje,dfje,Qmye,CrjeJF,CrjeDF,Unchecked,AjeJF,AjeDF,Adjusted,RjeJF,RjeDF,Checked)
	VALUES('7CD6792D-A233-41D0-94CA-7D66E71A5441',@FSCODE,NEWID(),NEWID(),'',1,@YEFX,0,0,0,@ZLD9/@ZLD_Checked*100,0,@ZLD9,0,0,0,0,0,@HZZBZLD9,0,0,@ZLD9-@HZZBZLD9)
	
	IF(@UpperYearPID<>'') BEGIN
		SELECT @ZLD_ZD=SUM(ZLD1+ZLD2+ZLD3+ZLD4+ZLD5+ZLD6+ZLD7+ZLD8+ZLD9),@HZZBZLD_ZD=SUM(HZZBZLD1+HZZBZLD2+HZZBZLD3+HZZBZLD4+HZZBZLD5+HZZBZLD6+HZZBZLD7+HZZBZLD8+HZZBZLD9)
			FROM DBO.Tbwlzl WHERE PROJECTID=@UpperYearPID AND FSCODE=@FSCODE+'YZ' AND significant=1 AND Impairmenttestmethod=0
		SELECT @ZLD_FZD=SUM(ZLD1+ZLD2+ZLD3+ZLD4+ZLD5+ZLD6+ZLD7+ZLD8+ZLD9),@HZZBZLD_FZD=SUM(HZZBZLD1+HZZBZLD2+HZZBZLD3+HZZBZLD4+HZZBZLD5+HZZBZLD6+HZZBZLD7+HZZBZLD8+HZZBZLD9)
			FROM DBO.Tbwlzl WHERE PROJECTID=@UpperYearPID AND FSCODE=@FSCODE+'YZ' AND significant=0 AND Impairmenttestmethod=0
		select @ZLD1=sum(ZLD1),@ZLD2=sum(ZLD2),@ZLD3=sum(ZLD3),@ZLD4=sum(ZLD4),@ZLD5=sum(ZLD5),@ZLD6=sum(ZLD6),@ZLD7=sum(ZLD7),@ZLD8=sum(ZLD8),@ZLD9=sum(ZLD9)
		,@HZZBZLD1=sum(HZZBZLD1),@HZZBZLD2=sum(HZZBZLD2),@HZZBZLD3=sum(HZZBZLD3),@HZZBZLD4=sum(HZZBZLD4),@HZZBZLD5=sum(HZZBZLD5),@HZZBZLD6=sum(HZZBZLD6),@HZZBZLD7=sum(HZZBZLD7),@HZZBZLD8=sum(HZZBZLD8),@HZZBZLD9=sum(HZZBZLD9)
		  from DBO.Tbwlzl WHERE PROJECTID=@UpperYearPID AND FSCODE=@FSCODE+'YZ' AND Impairmenttestmethod=1
		SET @ZLD_ZD=ISNULL(@ZLD_ZD,0)
		SET @HZZBZLD_ZD=ISNULL(@HZZBZLD_ZD,0)
		SET @ZLD_FZD=ISNULL(@ZLD_FZD,0)
		SET @HZZBZLD_FZD=ISNULL(@HZZBZLD_FZD,0)		
		SET @ZLD1=ISNULL(@ZLD1,0)
		SET @ZLD2=ISNULL(@ZLD2,0)
		SET @ZLD3=ISNULL(@ZLD3,0)
		SET @ZLD4=ISNULL(@ZLD4,0)
		SET @ZLD5=ISNULL(@ZLD5,0)
		SET @ZLD6=ISNULL(@ZLD6,0)
		SET @ZLD7=ISNULL(@ZLD7,0)
		SET @ZLD8=ISNULL(@ZLD8,0)
		SET @ZLD9=ISNULL(@ZLD9,0)
		SET @HZZBZLD1=ISNULL(@HZZBZLD1,0)
		SET @HZZBZLD2=ISNULL(@HZZBZLD2,0)
		SET @HZZBZLD3=ISNULL(@HZZBZLD3,0)
		SET @HZZBZLD4=ISNULL(@HZZBZLD4,0)
		SET @HZZBZLD5=ISNULL(@HZZBZLD5,0)
		SET @HZZBZLD6=ISNULL(@HZZBZLD6,0)
		SET @HZZBZLD7=ISNULL(@HZZBZLD7,0)
		SET @HZZBZLD8=ISNULL(@HZZBZLD8,0)
		SET @HZZBZLD9=ISNULL(@HZZBZLD9,0)
		SET @ZLD_Checked=@ZLD1+@ZLD2+@ZLD3+@ZLD4+@ZLD5+@ZLD6+@ZLD7+@ZLD8+@ZLD9+@ZLD_ZD+@ZLD_FZD
		SET @ZLD_Checked=ISNULL(@ZLD_Checked,1)
		IF @ZLD_Checked=0 SET @ZLD_Checked=1

		UPDATE @TABLE_RESULT SET qcye=@ZLD_ZD,AjeJF=@HZZBZLD_ZD,AjeDF=@ZLD_ZD-@HZZBZLD_ZD,DFJE=@ZLD_ZD/@ZLD_Checked*100 WHERE NoteCode='076F19EA-9578-4025-9801-1D5575E87570'
		UPDATE @TABLE_RESULT SET qcye=@ZLD_FZD,AjeJF=@HZZBZLD_FZD,AjeDF=@ZLD_FZD-@HZZBZLD_FZD,DFJE=@ZLD_FZD/@ZLD_Checked*100 WHERE NoteCode='46B02F68-9486-4D51-A85A-AF09458AE0D9'

		UPDATE @TABLE_RESULT SET qcye=@ZLD1,AjeJF=@HZZBZLD1,AjeDF=@ZLD1-@HZZBZLD1,DFJE=@ZLD1/@ZLD_Checked*100 WHERE NoteCode='AFF2A1A2-9BB4-464B-8EEE-21F920CE71E3'
		UPDATE @TABLE_RESULT SET qcye=@ZLD2,AjeJF=@HZZBZLD2,AjeDF=@ZLD2-@HZZBZLD2,DFJE=@ZLD2/@ZLD_Checked*100 WHERE NoteCode='096C5549-D486-4CD7-A36D-209B99FA2CD1'
		UPDATE @TABLE_RESULT SET qcye=@ZLD3,AjeJF=@HZZBZLD3,AjeDF=@ZLD3-@HZZBZLD3,DFJE=@ZLD3/@ZLD_Checked*100 WHERE NoteCode='C6BB4D4F-F8F5-42AA-A6CA-24EC77D27EE2'
		UPDATE @TABLE_RESULT SET qcye=@ZLD4,AjeJF=@HZZBZLD4,AjeDF=@ZLD4-@HZZBZLD4,DFJE=@ZLD4/@ZLD_Checked*100 WHERE NoteCode='A12A344F-2E7D-4AF8-BBF4-78E49559C2B1'
		UPDATE @TABLE_RESULT SET qcye=@ZLD5,AjeJF=@HZZBZLD5,AjeDF=@ZLD5-@HZZBZLD5,DFJE=@ZLD5/@ZLD_Checked*100 WHERE NoteCode='4110FBEB-3A4C-4935-BF9D-14D893A58EF5'
		UPDATE @TABLE_RESULT SET qcye=@ZLD6,AjeJF=@HZZBZLD6,AjeDF=@ZLD6-@HZZBZLD6,DFJE=@ZLD6/@ZLD_Checked*100 WHERE NoteCode='AC981502-7E7F-4003-96AF-9446720AD91C'
		UPDATE @TABLE_RESULT SET qcye=@ZLD7,AjeJF=@HZZBZLD7,AjeDF=@ZLD7-@HZZBZLD7,DFJE=@ZLD7/@ZLD_Checked*100 WHERE NoteCode='710B0949-ED54-46A6-BDCC-BB2C1D80F31D'
		UPDATE @TABLE_RESULT SET qcye=@ZLD8,AjeJF=@HZZBZLD8,AjeDF=@ZLD8-@HZZBZLD8,DFJE=@ZLD8/@ZLD_Checked*100 WHERE NoteCode='C8B315E0-198C-4246-AEB9-0BF6CF2CCC7B'
		UPDATE @TABLE_RESULT SET qcye=@ZLD9,AjeJF=@HZZBZLD9,AjeDF=@ZLD9-@HZZBZLD9,DFJE=@ZLD9/@ZLD_Checked*100 WHERE NoteCode='7CD6792D-A233-41D0-94CA-7D66E71A5441'
	END
	SELECT * FROM @TABLE_RESULT
	
END


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetNoteAndTBFinancial')
   BEGIN
       DROP  Procedure  GetNoteAndTBFinancial
	END
GO

/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -Module AuditPrograml
  Created   : Huasheng 2016/06/15
  Updated   : -
  Version   : 1.0.0
  说明：获取单体附注关联的财务数据金额
********************************************************************************/

Create PROCEDURE GetNoteAndTBFinancial
	@ProjectID	varchar(100),	
	@FormCode	 varchar(100)
AS
BEGIN
	SELECT * FROM (
	select t1.notecode,t1.fscode,t1.AccountCode,t1.AuxiliaryCode,ISNULL(t2.AccAuxName,'') AS AccountName,ISNULL(t2.TBType,1) AS TBType,ISNULL(t2.IsMx,0) AS IsMx,isnull(t2.kmsx,0) as kmsx,isnull(t2.Yefx,1) yefx
	,isnull(t2.TBGrouping,'') as TBGrouping
	,isnull(t2.Sqqmye*t2.yefx,0) as Sqqmye
	,isnull(t2.qqccgz,0) as qqccgz
	,isnull(t2.qcye*t2.yefx,0) as qcye
	,isnull(t2.jfje,0) as jfje
	,isnull(t2.dfje,0) as dfje
	,isnull(t2.Qmye*t2.yefx,0) as Qmye
	,isnull(t2.CrjeJF,0) as CrjeJF
	,isnull(t2.CrjeDF,0) as CrjeDF
	,isnull(t2.Unchecked*t2.yefx,0) as Unchecked
	,isnull(t2.AjeJF,0) as AjeJF
	,isnull(t2.AjeDF,0) as AjeDF
	,isnull(t2.Adjusted*t2.yefx,0) as Adjusted
	,isnull(t2.rjejf,0) as rjejf
	,isnull(t2.rjedf,0) as rjedf
	,isnull(t2.checked*t2.yefx,0) as checked
	from NoteAndTB t1 INNER JOIN dbo.VIEW_TBDetail t2 on t1.projectid=t2.projectid and t1.FSCode=t2.FSCode and t1.AccountCode=t2.AccountCode and t1.AuxiliaryCode=t2.AuxiliaryCode
	where t1.projectid=@ProjectID and t1.FormCode=@FormCode and t1.TBType=0	
	UNION
	select t1.notecode,t1.fscode,ISNULL(t1.AccountCode,'') AS AccountCode,ISNULL(t1.AuxiliaryCode,'') AS AuxiliaryCode,t2.fsname as AccountName,t2.TBType,t2.IsMx,t2.kmsx,t2.Yefx,t2.TBGrouping
	,t2.Sqqmye*t2.yefx as Sqqmye
	,t2.qqccgz
	,t2.qcye*t2.yefx as qcye
	,t2.jfje,t2.dfje
	,t2.Qmye*t2.yefx as Qmye
	,t2.CrjeJF,t2.CrjeDF
	,t2.Unchecked*t2.yefx as Unchecked
	,t2.AjeJF,t2.AjeDF
	,t2.Adjusted*t2.yefx as Adjusted
	,t2.rjejf,t2.rjedf
	,t2.checked*t2.yefx as checked
	 from NoteAndTB t1 left join dbo.VIEW_TBFS t2 on t1.projectid=t2.projectid and t1.FSCode=t2.FSCode 
	where t1.projectid=@ProjectID and t1.FormCode=@FormCode and t1.AuxiliaryCode='' AND T1.AccountCode='' and t1.TBType=0
	) T
	
END 

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetNoteStructHashData')
   BEGIN
       DROP  Procedure  GetNoteStructHashData
	END
GO

/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -Module AuditPrograml
  Created   : Huasheng 2016/06/15
  Updated   : -
  Version   : 1.0.0
  说明：获取校验单个附注表格结构是否产生变化的数据
********************************************************************************/

Create PROCEDURE GetNoteStructHashData
	@ProjectID	varchar(100),	 
	@FormCode	 varchar(100)=null
AS
BEGIN
	IF(@FormCode IS NULL)
	BEGIN
		SELECT FormCode,FormName,SortID,IsUse,FSCode,FormType,IsChangeRow,Remark,IsCombination FROM NoteForm 
			WHERE ProjectID=@ProjectID
		SELECT NoteCode,FormCode,FSCode,UpperNoteCode,SortID,Bth,IsQzh,IsGdh,IsCheckRow,IsConnect FROM NoteRowAttribute WHERE ProjectID=@ProjectID ORDER BY SortID
		SELECT ColumnCode,FSCode,FormCode,Title,SortID,Type,IsConnect,ConnectName,IsCheckRow,IsMerge FROM NoteColumnAttribute WHERE ProjectID=@ProjectID ORDER BY SortID
		SELECT ColumnCode,NoteCode,FormCode,FSCode,Formula FROM NoteFormula WHERE ProjectID=@ProjectID AND Formula<>''
	END ELSE BEGIN
		SELECT FormCode,FormName,SortID,IsUse,FSCode,FormType,IsChangeRow,Remark FROM NoteForm 
			WHERE ProjectID=@ProjectID and FormCode=@FormCode
		SELECT NoteCode,FormCode,FSCode,UpperNoteCode,SortID,Bth,IsQzh,IsGdh,IsCheckRow,IsConnect  FROM NoteRowAttribute WHERE ProjectID=@ProjectID AND FormCode=@FormCode ORDER BY SortID
		SELECT ColumnCode,FSCode,FormCode,Title,SortID,Type,IsConnect,ConnectName,IsCheckRow,IsMerge FROM NoteColumnAttribute WHERE ProjectID=@ProjectID AND FormCode=@FormCode ORDER BY SortID
		SELECT ColumnCode,NoteCode,FormCode,FSCode,Formula FROM NoteFormula WHERE ProjectID=@ProjectID AND FormCode=@FormCode AND Formula<>''
	END
END 







GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetOverallsample')
   BEGIN
       DROP  Procedure  GetOverallsample
	END
GO

/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -获取样本总体
  Created   : 20171220 Huasheng 
  Version   : 1.0.0
********************************************************************************/
create PROCEDURE [dbo].[GetOverallsample]
@pid	varchar(100),
@fscode	varchar(100),
@sampleType	int,	--0余额抽样(A类型), 1借方, 2贷方(BC类型)抽样 0: 取Acc/Aux的数据; 1: 取Voucher(JF); 2: 取Voucher(DF)
@step	int	=null,
@sumval decimal(20,2)= 0 output

AS

if(@step is null) begin
	SELECT @step=STEP FROM PMvalueofJ WHERE ProjectID=@pid AND FSCODE=@fscode AND Testobject=@sampleType
end
if(@step is null) set @step=0

declare @yefx int
--确定分段审计时当期的时间范围
declare @prepid varchar(100)
declare @predate varchar(10)
declare @enddate varchar(10)

declare  @totalvalue decimal(20,2)

--select @yefx=yefx from fscodeconfig where projectid=@pid and fscode=@fscode

select @yefx=yefx,@totalvalue = case @sampleType
        when 0 then isnull(Unchecked, 0) * Yefx
		when 1 then case when @prepid = '' then isnull(Jfje, 0) else isnull(Jfje2, 0) end
		when 2 then case when @prepid = '' then isnull(Dfje, 0) else isnull(Dfje2, 0) end
		else 0 end
    from VIEW_TBFS 
	where ProjectID = @pid and  FSCODE = @fscode


select @prepid=CurrentyearPID	from	NeweasV5.dbo.projectsinfo	where		projectid=@pid
if(@prepid <> '')
    select @predate=convert(char(10),PeriodEndDate,111)	from	NeweasV5.dbo.projectsinfo	where		projectid=@prepid
else
    set @predate = ''
select @enddate=convert(char(10),PeriodEndDate,111)	from	NeweasV5.dbo.projectsinfo	where		projectid=@pid

IF object_id('#AccAux0') IS NOT NULL
	DROP TABLE #AccAux0
IF object_id('#AccAux') IS NOT NULL
	DROP TABLE #AccAux
IF object_id('#data') IS NOT NULL	
	DROP TABLE #data

create table #AccAux0(AccountCode varchar(100) collate Chinese_PRC_CS_AS_KS_WS, AuxiliaryCode varchar(100) collate Chinese_PRC_CS_AS_KS_WS,IsRje int,Value decimal(20, 2))
create table #AccAux(id varchar(100) collate Chinese_PRC_CS_AS_KS_WS, AccountCode varchar(100) collate Chinese_PRC_CS_AS_KS_WS, AuxiliaryCode varchar(100) collate Chinese_PRC_CS_AS_KS_WS,IsRje int, Value decimal(20, 2))
create table #data(sortid int identity(1,1), id varchar(100)  collate Chinese_PRC_CS_AS_KS_WS, val decimal(20, 2), sumval decimal(20, 2))

if(@sampleType = 0)
begin
    insert into #AccAux0 select distinct  a.AccountCode, a.AuxiliaryCode,0, isnull(UnChecked, 0) * Yefx
	    from VIEW_TBDetail a
		join TBDetailExtra b
		on a.ID = b.ID and IsMx  = 1 and SourceFSCode = ''
        where a.ProjectID = @pid
			and a.FSCode like @fscode+'%'		    
			and (StepOfSample = 0 or StepOfSample >= @Step)
    insert into #AccAux0 select distinct a.AccountCode, a.AuxiliaryCode, 1,isnull(UnChecked, 0) * Yefx
        from VIEW_TBDetail a
		join TBDetailExtra b
		on a.ID = b.ID and IsMx  = 1 and SourceFSCode != ''		
        where a.ProjectID = @pid
			and a.FSCode like @fscode+'%'		   
		    and (StepOfSample = 0 or StepOfSample >= @Step)


    insert into #AccAux select row_number() over (order by AccountCode, AuxiliaryCode), AccountCode, AuxiliaryCode,IsRje,Value
        from #AccAux0
	    where Value != 0

    insert into #data select id, Value, sum(Value) over (order by cast(id as int)) from #AccAux
end

if(@sampleType = 1)
begin
	if(left(@fscode, 1) = '8')
		insert into #data select VoucherID as id, Jfje as val, sum(Jfje) over (order by VoucherID) as sumval
			from TBVoucher 
			where ProjectID = @pid
				and Jfje != 0
				and (StepOfSample = 0 or StepOfSample >= @step)
				and ([Date] > @predate and [Date] <= @enddate)
				and Fllx = 1
				and AccountCode in (select AccountCode from TBDetail 
					where ProjectID = @pid and fscode like @fscode+'%' and IsAux = 0 and SourceFSCode = '')
	else
		insert into #data select VoucherID as id, Jfje as val, sum(Jfje) over (order by VoucherID) as sumval
			from TBVoucher 
			where ProjectID = @pid
				and Jfje != 0
				and (StepOfSample = 0 or StepOfSample >= @step)
				and ([Date] > @predate and [Date] <= @enddate)
				and AccountCode in (select AccountCode from TBDetail 
					where ProjectID = @pid and fscode like @fscode+'%' and IsAux = 0 and SourceFSCode = '')
end

if(@sampleType = 2)
begin
	if(left(@fscode, 1) = '8')
		insert into #data select VoucherID as id, Dfje as val, sum(Dfje) over (order by VoucherID) as sumval
			from TBVoucher 
			where ProjectID = @pid and Dfje != 0
				and (StepOfSample = 0 or StepOfSample >= @step)
				and ([Date] > @predate and [Date] <= @enddate)
				and Fllx = 1
				and AccountCode in (select AccountCode from TBDetail 
					where ProjectID = @pid and fscode like @fscode+'%' and IsAux = 0 and SourceFSCode = '')
	else
		insert into #data select VoucherID as id, Dfje as val, sum(Dfje) over (order by VoucherID) as sumval
			from TBVoucher 
			where ProjectID = @pid and  Dfje != 0
				and (StepOfSample = 0 or StepOfSample >= @step)
				and ([Date] > @predate and [Date] <= @enddate)
				and AccountCode in (select AccountCode from TBDetail 
					where ProjectID = @pid and fscode like @fscode+'%' and IsAux = 0 and SourceFSCode = '')
end
--step<=1时，Overallsample数据来源表301
if (@step <= 1)
	set @sumval = @totalvalue
else 
	select @sumval = sumval from #data

select * from #data



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetPMData')
   BEGIN
       DROP  Procedure  GetPMData
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -Module 表25
  Created   : 20120917 by dengll
  Updated	: 201120927 by dengll
  Updated	:	20150330 by dengll	如果ab 都存在就把fscode对应的所有pm数据都查出来
  Version   : 1.0.2
********************************************************************************/
create Procedure [dbo].[GetPMData]
@pid	varchar(500),
@fscode	varchar(500)
AS
	SET	NOCOUNT	ON
	declare	@Ques	varchar(10) ,@rowID int

	declare	@t	table(rowID int identity(1,1),id	int,accountcode	varchar(100),Quesid	varchar(10),QuesDescription	varchar(500),QuesAnswer	varchar(10))
	insert	@t
	exec	dbo.SelectSampleSelectedQues	@pid,@fscode,'Q001'

	declare	@J	decimal(20,2)
	declare @tmp	table(name varchar(100),V1	decimal(20,2),V2	decimal(20,2));
	insert	@tmp exec dbo.SelectBasicData @pid,@fscode--获取样本间距
	select	@J=V2 from @tmp
	

	set @rowID = 1
	while exists (select 1 from @t where rowID=@rowID)
	begin 
		select	@Ques=QuesAnswer	from	@t where rowID=@rowID
		if(@Ques='A') 
		BEGIN
			if not exists(select 1 from PMvalueofJ where ProjectID=@pid and Fscode= @fscode and Testobject=0)
			begin
			INSERT INTO PMvalueofJ (ProjectID,Fscode,Testobject,Step,ID,Overallsample,ValueofJ,Samplesize,SampleTotal,Memo) 
				VALUES (@pid,@fscode,0,0,'',0,@J,0,0,'')
			end
			else
			begin
				update PMvalueofJ set ValueofJ = @J where ProjectID=@pid and Fscode= @fscode and Testobject=0
			end
		END 
		ELSE
		BEGIN
			if not exists(select 1 from PMvalueofJ where ProjectID=@pid and Fscode= @fscode and Testobject=1)
			begin
			INSERT INTO PMvalueofJ (ProjectID,Fscode,Testobject,Step,ID,Overallsample,ValueofJ,Samplesize,SampleTotal,Memo) 
				VALUES (@pid,@fscode,1,0,'',0,@J,0,0,'')
			end
			else
			begin
				update PMvalueofJ set ValueofJ = @J where ProjectID=@pid and Fscode= @fscode and Testobject=1
			end
		
			if not exists(select 1 from PMvalueofJ where ProjectID=@pid and Fscode= @fscode and Testobject=2)
			begin
			INSERT INTO PMvalueofJ (ProjectID,Fscode,Testobject,Step,ID,Overallsample,ValueofJ,Samplesize,SampleTotal,Memo) 
				VALUES (@pid,@fscode,2,0,'',0,@J,0,0,'')
			end
			else
			begin
				update PMvalueofJ set ValueofJ = @J where ProjectID=@pid and Fscode= @fscode and Testobject=2
			end
		END
		set @rowID = @rowID+1
	end

	if exists(select  QuesAnswer from @t group by QuesAnswer	having count(QuesAnswer)>0)
	begin
			select  [ID],[Fscode],[step],SampleTotal as  [valueofPM],Overallsample as [valueofMP],[valueofJ],[Memo],[Samplesize],[Testobject]from	PMvalueofJ			
			where	ProjectID = @pid and fscode=@fscode		
			order by step	asc
	end	
	else 
	begin		
		if(@Ques<>'A')		
			select	 [ID],[Fscode],[step],SampleTotal as [valueofPM],Overallsample as [valueofMP],[valueofJ],[Memo],[Samplesize],[Testobject]	
			from	PMvalueofJ			
			where	ProjectID = @pid and fscode=@fscode and step>0	and	testobject<>0	
			order by step	asc
		
		else		
			select	 [ID],[Fscode],[step],SampleTotal as [valueofPM],Overallsample as [valueofMP],[valueofJ],[Memo],[Samplesize],[Testobject]	
			from	PMvalueofJ			
			where	ProjectID = @pid and fscode=@fscode and step>0	and	testobject=0	
			order by step	asc
		
	end



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetProjectEliminationView')
   BEGIN
       DROP  Procedure  GetProjectEliminationView
	END
GO

/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -Module AuditPrograml
  Created   : Huasheng 2016/06/15
  Updated   : -
  Version   : 1.0.0
  说明：获取单个项目抵销分录视图
********************************************************************************/

Create PROCEDURE GetProjectEliminationView
	@ProjectID	varchar(100),
	@StruCode varchar(50)
AS
BEGIN

	DECLARE @TABLE_Elimination TABLE(ID INT IDENTITY NOT NULL,StruCode VARCHAR(50),EliminationNO VARCHAR(100),ProjectID VARCHAR(100) collate Chinese_PRC_CS_AS_KS_WS
	,ClientName VARCHAR(500),EliminationDetails VARCHAR(1000),EliminationType VARCHAR(50),ChildEliminationID varchar(50),FSCode VARCHAR(50) collate Chinese_PRC_CS_AS_KS_WS
	,FSName VARCHAR(500),AccountCode VARCHAR(100) collate Chinese_PRC_CS_AS_KS_WS,AccountName VARCHAR(500),AuxiliaryCode VARCHAR(100) collate Chinese_PRC_CS_AS_KS_WS
	,AuxiliaryName VARCHAR(100),JD INT,Unchecked DECIMAL(20,2),Checked DECIMAL(20,2))
	DECLARE @INDEX INT ,@ROW_COUNT INT 

	INSERT INTO @TABLE_Elimination
	SELECT @StruCode AS StruCode,t38.EliminationNO as EliminationNo,t39.EliminationPID
		,(SELECT T2.ClientChineseName FROM neweasv5.DBO.ProjectsInfo T1 LEFT JOIN neweasv5.DBO.ClientBasicInfo T2 
			ON T1.ClientID = T2.ClientID WHERE T1.ProjectID=t39.EliminationPID) as ClientName
		,t38.EliminationDetails,T38.EliminationType,t39.ID as ChildEliminationID,t39.FSCode
		,(SELECT T301.FSNAME FROM view_tbfs T301 WHERE T301.ProjectID=@ProjectID AND T301.FSCODE=T39.FSCODE) as FSName
		,t39.AccountCode
		,null as AccountName
		,t39.AuxiliaryCode
		,null as AuxiliaryName
		,t39.jd,t39.Unchecked,t39.Checked
		FROM TBEliminationSubItems T39 LEFT JOIN TBEliminationItems T38
		ON T38.ELIMINATIONNO=T39.ELIMINATIONNO
		WHERE T39.ProjectID IN (SELECT ComPID FROM CombinationRange WHERE ProjectID=@ProjectID AND StruCode=@StruCode)
		AND T38.RelatedProject1 IN (SELECT ComPID FROM CombinationRange WHERE ProjectID=@ProjectID AND StruCode=@StruCode)
		AND T38.RelatedProject2 IN (SELECT ComPID FROM CombinationRange WHERE ProjectID=@ProjectID AND StruCode=@StruCode)
	SET @ROW_COUNT=@@ROWCOUNT

	DECLARE @ID INT,@SubProjectID VARCHAR(100),@AccountCode VARCHAR(100),@AuxiliaryCode VARCHAR(100),@ClientName VARCHAR(100)
	DECLARE @AccountName VARCHAR(1000),@AuxiliaryName varchar(1000)
	SET @INDEX=1
	WHILE(@INDEX<=@ROW_COUNT) BEGIN
	SELECT TOP 1 @ID=ID,@SubProjectID=projectid,@AccountCode=AccountCode,@AuxiliaryCode=AuxiliaryCode
		FROM @TABLE_Elimination WHERE ID=@INDEX		
		
		SELECT @AccountName=AccAuxName FROM TBDetail WHERE PROJECTID=@SubProjectID AND ACCOUNTCODE=@AccountCode AND IsAux=0
		IF(@AuxiliaryCode<>'') 
			SELECT @AuxiliaryName=AccAuxName FROM TBDetail WHERE PROJECTID=@SubProjectID AND ACCOUNTCODE=@AccountCode AND AuxiliaryCode=@AuxiliaryCode
		
		UPDATE @TABLE_Elimination SET AccountName=@AccountName,AuxiliaryName=@AuxiliaryName WHERE ID=@INDEX
		SET @AuxiliaryName=''

		SET @INDEX=@INDEX+1		
	END

	SELECT StruCode,EliminationNO,ProjectID,ClientName,EliminationDetails
	,(CASE EliminationType WHEN '0' THEN '内部交易抵销' WHEN '1' THEN '内部余额抵销' WHEN '2' THEN '子公司权益法调整'
	WHEN '3' THEN '公允价值调整' WHEN '4' THEN '内部权益抵销' ELSE '' END) AS EliminationType
	,FSCode,FSName,AccountCode,ISNULL(AccountName,'') AS AccountName,ISNULL(AuxiliaryCode,'') as AuxiliaryCode
	,ISNULL(AuxiliaryName,'') as AuxiliaryName,JD,Unchecked,Checked,ChildEliminationID FROM @TABLE_Elimination
	
	
END 

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetProjectInfoForXjy001')
   BEGIN
       DROP  Procedure  GetProjectInfoForXjy001
	END
GO

/*

2017/08/22 by dengll
获取审计项目是否导入过财务数据

*/

CREATE  PROCEDURE dbo.GetProjectInfoForXjy001
	@ProjectID	varchar(1000),
	@DataType	varchar(100)--02100代码：本期数据;022xx 前期凭证数据;02300 期后凭证数据
AS
	
	;with a1 as(
		select Projectid,ProjectName,UpperProjectid,ProjectDataStatus
					from neweasv5.dbo.projectsinfo where projectid=@ProjectID
		union all
		select pro.Projectid,pro.ProjectName,pro.UpperProjectid,pro.ProjectDataStatus 
			from neweasv5.dbo.projectsinfo pro
			join a1 a
			on	pro.UpperProjectid=a.ProjectID
	)

	select * into #tmp from a1
	
	IF (left(@DataType,3)='021')begin--本期数据
		select distinct projectid,1 as xexists into #voucher from dbo.tbvoucher
		select distinct a1.*
			,case when isnull(f.StruTarget,0)!='0' then 1 else 0 end as importxjy001 
			,isnull(v.xexists,0)	as importtbvoucher
			,isnull(f.StruTarget,space(0))StruTarget
			,f.FileLibID
		from #tmp a1
		left	join	dbo.FileScriptList	f
		on	a1.projectid=f.projectid	and	RIGHT(f.StruTarget,3)='001'	and	CHARINDEX(@DataType,f.StruCode)>0
		left join #voucher v
		on v.projectid=a1.projectid

	end else
	IF (left(@DataType,3)='022')begin--前期凭证数据
	select distinct projectid,1 as xexists into #a from dbo.QCWLJZPZ
		select distinct a1.*
			,case when isnull(f.StruTarget,0)!='0' then 1 else 0 end as importxjy001 
			,isnull(v.xexists,0) as importtbvoucher
			,isnull(f.StruTarget,space(0))StruTarget
			,f.FileLibID
		from #tmp a1
		left	join	dbo.FileScriptList	f
		on	a1.projectid=f.projectid	and	RIGHT(f.StruTarget,3)='001'	and	CHARINDEX(@DataType,f.StruCode)>0
		left join #a v
		on v.projectid=a1.projectid
	end else 	IF (left(@DataType,3)='023')begin--期后凭证数据
		select distinct projectid,1 as xexists into #b from dbo.QHJZPZ
		select distinct a1.*
			,case when isnull(f.StruTarget,0)!='0' then 1 else 0 end as importxjy001 
			,isnull(v.xexists,0) as importtbvoucher
			,isnull(f.StruTarget,space(0))StruTarget
			,f.FileLibID
		from #tmp a1
		left	join	dbo.FileScriptList	f
		on	a1.projectid=f.projectid	and	RIGHT(f.StruTarget,3)='001'	and	CHARINDEX(@DataType,f.StruCode)>0
		left join #b v
		on v.projectid=a1.projectid
	end
	

	drop table #tmp;

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetPZFllxData')
   BEGIN
       DROP  Procedure  GetPZFllxData
	END
GO
 /********************************************************************************
  Database  : EAS
  Copyright : 2010 Huapu (Beijing)
  Customer  : Huapu Chinese,bj
  Project   : EAS -获得明细账表
  Created   : by dengll
  Updated   : 获取损益类的凭证数据
  Version   : 1.0.0
********************************************************************************/
CREATE Procedure GetPZFllxData
@PID varchar(255),
@fscode	varchar(255),
@PageIndex int=0,
@PageSize int=1000

AS
SET NOCOUNT ON

	--declare	@pid varchar(100)='AudKLYYYJ_201712'
	--declare	@fscode varchar(100)='51100'
	declare	@Ye	decimal(20,2)=0;
	declare @StruCode varchar(255),@TBgroup varchar(255)

	select @Ye=Sqqmye
	from	dbo.TBDetail where projectid=@PID and fscode=@fscode	and isaux=0

	select distinct fscode,accountcode into #tbacc1 from	dbo.TBDetail where projectid=@PID and fscode=@fscode	and isaux=0

	declare	@endYear	datetime
	set @endYear=(select periodenddate from NeweasV5.dbo.projectsinfo where projectid=@PID)

	--获取关联的tbvoucher数据
	SELECT	a.AccountCode,a.VoucherID,CONVERT(varchar(12),a.[date], 111 )[Date],isnull(a.pzlx,'')+isnull(a.pzh,'') AS pz,a.zy,a.jfje,a.dfje,a.Period,a.Fllx,a.pzh
	into #voucher
	FROM  TBVoucher a
	INNER JOIN  VIEW_TBDetail b		
	ON a.AccountCode = b.AccountCode AND a.ProjectCode IS NULL 		
	and a.Period <=year(a.date)*100+12 and year(a.date)=year(@endYear) and a.projectid=@PID and a.projectid=b.projectid
	inner join #tbacc1 c
	on b.AccountCode = c.AccountCode and b.projectid=@PID 
	UNION ALL
	SELECT a.AccountCode,a.VoucherID,CONVERT(varchar(12) ,a.[date], 111 )[Date],isnull(a.pzlx,'')+isnull(a.pzh,'') AS pz,a.zy,a.jfje,a.dfje,a.Period,a.Fllx,a.pzh
	FROM  TBVoucher a
	INNER JOIN  VIEW_TBDetail b
	ON a.AccountCode = b.AccountCode AND a.ProjectCode = b.AuxiliaryCode    and a.projectid=@PID and a.projectid=b.projectid 
	and a.Period <=year(a.date)*100+12 
	inner join #tbacc1 c
	on b.AccountCode = c.AccountCode 
	order by CONVERT(varchar(12) ,a.[date], 111 ),a.pzh
	--OPTION(maxdop 25)	
	alter table #voucher drop Column pzh

	select * into #voucher1 from	#voucher	where 1!=1
	alter table #voucher1 add	ID int identity(1,1)
	alter table #voucher1 alter	column AccountCode varchar(100)
	alter table #voucher1 alter	column VoucherID varchar(100)
	alter table #voucher1 alter	column pz varchar(max)
	alter table #voucher1 alter	column jfje decimal(20,2)
	alter table #voucher1 alter	column dfje decimal(20,2)
	alter table #voucher1 alter	column fllx int
	alter table #voucher1 alter	column Period int
	
	SELECT  
	  identity(int,1,1) ID,
      --CASE WHEN (GROUPING(Period) = 1) THEN '1000' 
      --      ELSE ISNULL(Period, '') 
      -- END AS MM , 
	  Period as MM,
      sum(jfje)jfje,
	  sum(dfje)dfje
	into #voucher0
	FROM #voucher
	GROUP BY   Period   --WITH ROLLUP
	order by MM

	declare	@i int=1;
	
	declare	@temp1 varchar(100)= '本月合计'
	declare	@temp2 varchar(100)= '本年累计'
	declare	@temp3 varchar(100)= '上期结转'

	insert #voucher1(zy)
	select @temp3
	
	while exists(select 1	from	#voucher0	where ID=@i) begin
		declare	@per int
		select @per=MM	from	#voucher0	where ID=@i

		insert #voucher1
		select * from #voucher where Period=@per
		
		insert #voucher1(VoucherID,zy,JFJE,DFJE)
		select @per,@temp1,jfje,dfje from #voucher0 where MM=@per	group by jfje,dfje;
		
		insert #voucher1(VoucherID,zy,JFJE,DFJE)
		select @per,@temp2,
			(a.jfje+isnull(b.jfje,0)),
			(a.dfje+isnull(b.dfje,0))
			from #voucher0 A	
			left join #voucher0 b
			on A.MM-1=b.MM	
			where a.MM=@per	
		set @i+=1;
	end

	declare	@maxID	int
	select  @maxID=max(ID) from #voucher1
	insert	#voucher1(VoucherID,Zy)
	select top 1 VoucherID,'差额'	from	#voucher1	where ID=@maxID

	select	AccountCode,
		VoucherID,[Date],Pz ,Zy,Jfje ,Dfje,Fllx from #voucher1 order by id

	drop table #tbacc1
	drop table #voucher
	drop table #voucher0
	drop table #voucher1


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetRecordofSampletest')
   BEGIN
       DROP  Procedure  GetRecordofSampletest
	END
GO
/********************************************************************************
  Copyright : HuaPu
  Customer  : HuaPu
  Project   : Easy Audit System - BCSampleTest
  Created   : by LiNa 2012/09/04
  Update	: 20130109by dengll
  Updated   : 20130121 by lina --- added "order by c.VoucherID,c.IncNo"
  Updated   : 20130225 by lina --- added b.drmaterialityProgram=1
  Updated   : 20130226 by lina --- removed b.drmaterialityProgram=1
  Updated	: 20131124 by dengll
  Updated	: 20131129 by dengll
  Updated	: 20140821 by deng
  Updated : 20150401 by dengll add sampleType 测试对象类型
  Updated : 20161215 by dengll
*********************************************************************************/
CREATE Procedure [dbo].[GetRecordofSampletest]
(
	@Pid nvarchar(50),
	@fscode nvarchar(50),
	@recordtype	int,	--0 余额测试,1 借方,2 贷方
	@functionType varchar(10)
)
AS

SELECT
	RecordID,
	VoucherID,
	IncNo,
	contentID,
	NumberofAE,
	DateofAE,
	AmountofAE,
	QuantityofAE,
	AuditEvidence,
	RecordType,
	copyofEvidence
FROM DBO.RecordOfSampleTest	r	
where r.ProjectID=@pid and	exists(	SELECT 1	FROM DBO.ContentofSampleTest	
	where ProjectID=@pid and fscode=@fscode	and	Display=1 and functionType=@functionType and	contentID=r.contentID)


GRANT EXEC ON GetRecordofSampletest TO PUBLIC


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetReplaceTestBalance')
   BEGIN
       DROP  Procedure  GetReplaceTestBalance
	END
GO

/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -得到替代测试样本程序
  Created   : by LiNa 2012-09-21
  Modified  : by LiNa 2012-12-18 把round((f.jd*f.fsje)*100/(e.yefx*e.unchecked),2)
  修改为 round(f.fsje*100/e.unchecked,2)
  Updated   : by LiNa 2013-1-11 加表19.
  Updated   : by LiNa 2013-01-24 modified by lina (1)materialityProgram与302表相联.(2)' as auxiliarycode 改为了 NULL as auxiliarycode
  Updated	: 20130302 by dengll add code	sendletter>0
  Updated	: 20131129 by dengll
  Updated	: 20141029 by dengll
  Updated: 2016-02-03 by Huasheng 余额为0的样本也包含在内
  Updated   : 原[GetSamplealternativetesting]
  ********************************************************************************/

create Procedure [dbo].[GetReplaceTestBalance]
	@PROJECTID	VARCHAR(100),
	@code	varchar(100)
AS

declare @yefx int
select @yefx=yefx from fscodeconfig where projectid=@PROJECTID and fscode=@code
declare @rowcount int,@rowNo int,@AccountCode varchar(100),@AccountName nvarchar(200),@UncheckedData decimal(20,2),@FSE decimal(20,2)
declare 	@TBACCAUX	TABLE(code AS accountcode+'$'+auxiliarycode ,ACCOUNTCODE	VARCHAR(100) collate Chinese_PRC_CS_AS_KS_WS ,auxiliarycode	VARCHAR(100) collate Chinese_PRC_CS_AS_KS_WS,accountname	NVARCHAR(100),yefx	INT,unchecked	DECIMAL(20,2))
DECLARE	@WLHZ	TABLE(ID varchar(50),code as ACCOUNTCODE+'$'+isnull(auxiliarycode,space(1)),ACCOUNTCODE	VARCHAR(100) collate Chinese_PRC_CS_AS_KS_WS,auxiliarycode	VARCHAR(100) collate Chinese_PRC_CS_AS_KS_WS,fscode	VARCHAR(100) collate Chinese_PRC_CS_AS_KS_WS ,isHH int)

	INSERT	@WLHZ
	select distinct b.ID,b.AccountCode,b.auxiliarycode ,b.fscode,case when a.ConfirmDate is null then 0 else 1 end as  isHH
	from  TBWlhz  a 
	join  WlhzandTB  b 
	on a.ProjectID = b.ProjectID and  a.id=b.wlhzid 
	where a.ProjectID =@PROJECTID and  a.ConsultDate is not null and	sendletter>0 and fscode=@code and b.Sendletteryesno=1	--and a.confirmDate is null		--by dengll 20170221 show all data

	INSERT	@TBACCAUX	
	select distinct 
		d.AccountCode,
		d.auxiliarycode,
		d.AccAuxName as  AccountName,
		d.yefx,
		d.Unchecked  
		from VIEW_TBDetail d  
		join TBDetailExtra dd
		on d.ID = dd.ID 	
		join @WLHZ t
		on t.ID = d.ID
		where d.ProjectID = @PROJECTID and  d.fscode=@code  	
		and ISNULL(dd.materialityProgram,0)=1

DECLARE @temp	table(AccountCode varchar(100) collate Chinese_PRC_CS_AS_KS_WS,AccountName nvarchar(200),UncheckedData decimal(20,2),FSE DECIMAL(20,2),
	PERCENTJE decimal(20,2),pzh varchar(100),pzrq varchar(10),zy nvarchar(200),VoucherID VARCHAR(100) collate Chinese_PRC_CS_AS_KS_WS,IncNo nvarchar(200),jd int)
insert @temp
select 
	distinct e.code,
	e.accountname, 
	isnull(e.yefx*e.unchecked,0),
	isnull(f.jd*f.fsje,0),
	case e.unchecked when 0 then 0 else round((f.jd*f.fsje)*100/(e.yefx*e.unchecked),2) end,
	isnull(f.Pzlx,SPACE(1))+isnull(f.pzh,SPACE(1)),
	convert(varchar(10),f.date,121),
	f.zy,
	f.VoucherID,
	f.IncNo,
  f.jd
from @TBACCAUX e 
left join qmyegc qm on qm.projectid=@PROJECTID  and e.code=(qm.AccountCode+'$'+ISNULL(qm.ProjectCode,SPACE(1)))
left join  TBVoucher  f
on qm.projectid=f.projectid and f.voucherid=qm.voucherid	

DECLARE @temp1	table(id int identity(1,1),AccountCode varchar(100) collate Chinese_PRC_CS_AS_KS_WS,AccountName nvarchar(200),UncheckedData decimal(20,2),FSE DECIMAL(20,2),PERCENTJE decimal(20,2))
DECLARE @temp2	table(id int identity(1,1),AccountCode varchar(100) ,UpperCode varchar(100),AccountName nvarchar(200),UncheckedData decimal(20,2),FSE DECIMAL(20,2),PERCENTJE decimal(20,2),pzh varchar(100),pzrq varchar(10),zy nvarchar(200),VoucherID VARCHAR(100) collate Chinese_PRC_CS_AS_KS_WS,IncNo nvarchar(200),jd int)
insert @temp1
	select AccountCode,AccountName,UncheckedData,sum(FSE),
	case UncheckedData when 0 then 0 else round(sum(FSE)*100/UncheckedData,2) end
	from @temp 
	group by AccountCode,AccountName,UncheckedData
	order by AccountName

	set @rowcount=@@rowcount
	set @rowNo=1 
	while (@rowNo<=@rowcount)
	begin
		select @AccountCode=AccountCode,@AccountName=AccountName,@UncheckedData=UncheckedData,@FSE = FSE from @temp1 where id=@rowNo
		
		insert @temp2 
		select AccountCode,null,AccountName,UncheckedData,FSE,PERCENTJE,null as pzh,null as pzrq,case when (select top 1 isHH from @WLHZ where code=e.AccountCode)=1 then '(已回函)' else null end as zy, null as VoucherID,null as IncNo,null as jd
		from @temp1 e
		where AccountCode=@AccountCode and AccountName=@AccountName 
		--and UncheckedData=@UncheckedData
		
		update @temp2 set zy = '本期无凭证' where AccountCode=@AccountCode and AccountName=@AccountName  and @FSE = 0

		insert @temp2 
		select null as AccountCode,@AccountCodE,null as AccountName,NULL as UncheckedData,FSE,PERCENTJE,pzh,pzrq,zy,VoucherID,IncNo,jd
		from @temp
		where AccountCode=@AccountCode and AccountName=@AccountName 
		--and UncheckedData=@UncheckedData
		and pzh is not null ORDER BY pzrq DESC,pzh DESC
		set @rowNo=@rowNo+1
	end
select AccountCode,UpperCode,AccountName,UncheckedData,FSE,PERCENTJE,pzh,pzrq,zy,VoucherID,IncNo,jd from @temp2 

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetReplaceTestOccurrence')
   BEGIN
       DROP  Procedure  GetReplaceTestOccurrence
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -得到替代测试样本程序xxx64适用于华普的作法
  Created   : 20150408 by dengll
  Update    : 原[GetSamplealternativetestingXXX64]
  ********************************************************************************/

create Procedure [dbo].[GetReplaceTestOccurrence]
	@PROJECTID	VARCHAR(100),
	@code	varchar(100)
AS

declare @rowcount int,@rowNo int,@AccountCode varchar(100),@AccountName nvarchar(200),@UncheckedData decimal(20,2)

DECLARE	@TBACCAUX	TABLE(ID int identity,code AS accountcode+'$'+auxiliarycode ,ACCOUNTCODE	VARCHAR(100) collate Chinese_PRC_CS_AS_KS_WS ,auxiliarycode	VARCHAR(100) collate Chinese_PRC_CS_AS_KS_WS,accountname	NVARCHAR(100),
	yefx	INT,qcye	DECIMAL(20,2),jfje	DECIMAL(20,2),dfje	DECIMAL(20,2),qmye	DECIMAL(20,2),jfjeper DECIMAL(20,2),dfjeper DECIMAL(20,2),fscode varchar(100))

	--根据121，146获取对应的304数据

DECLARE	@WLHZ	TABLE(ID varchar(50),code as ACCOUNTCODE+'$'+isnull(auxiliarycode,space(1)),ACCOUNTCODE	VARCHAR(100) collate Chinese_PRC_CS_AS_KS_WS,auxiliarycode	VARCHAR(100) collate Chinese_PRC_CS_AS_KS_WS,fscode	VARCHAR(100) collate Chinese_PRC_CS_AS_KS_WS ,isHH int)

INSERT	@WLHZ
select distinct 
	b.ID,b.AccountCode,b.auxiliarycode ,b.fscode,case when a.ConfirmDate is null then 0 else 1 end as  isHH
from  TBWlhz  a
join  WlhzandTB  b 
on a.projectid = b.projectid and  a.id=b.wlhzid 
where a.projectid = @PROJECTID and  a.ConsultDate is not null and	sendletter>0 and fscode=@code	 and b.Sendletteryesno=1

INSERT	@TBACCAUX(accountcode,auxiliarycode,accountname,yefx,qcye,jfje,dfje,qmye)
select distinct 
	d.AccountCode,
	d.auxiliarycode,
	d.AccAuxName as  AccountName,
	d.yefx,
	d.qcye*d.yefx as qcye,
	case when d.DataType = 0 then d.jfje when d.DataType = 2 then (select jfje from View_TBDetail dd where d.ProjectID = dd.ProjectID and d.AccountCode = dd.AccountCode and d.AuxiliaryCode = dd.AuxiliaryCode and dd.DataType = 0) end as jfje,
case when d.DataType = 0 then d.dfje when d.DataType = 2 then (select dfje from View_TBDetail dd where d.ProjectID = dd.ProjectID and d.AccountCode = dd.AccountCode and d.AuxiliaryCode = dd.AuxiliaryCode and dd.DataType = 0) end as dfje,
	d.Unchecked *d.yefx as qmye
from VIEW_TBDetail d  
join TBDetailExtra e
on d.ID = e.ID 
join @WLHZ t
on d.ID collate Chinese_PRC_CS_AS_KS_WS = t.ID
where d.ProjectID = @PROJECTID  and d.fscode=@code  
	and ISNULL(e.materialityProgram,0)=1 
	order by d.AccAuxName


	DECLARE @temp	table(AccountCode varchar(100) collate Chinese_PRC_CS_AS_KS_WS,AccountName nvarchar(200), 
	jfje DECIMAL(20,2),dfje DECIMAL(20,2),jfjePer decimal(20,2)DEFAULT(0),dfjePer decimal(20,2)DEFAULT(0),
	pzh varchar(100),pzrq varchar(10),zy nvarchar(200),VoucherID varchar(100) collate Chinese_PRC_CS_AS_KS_WS ,IncNo nvarchar(200), jd int)
	
	
	insert @temp
	select 
	e.code,
	e.accountname,
	isnull(f.jfje,0),
	isnull(f.dfje,0),
	CASE WHEN e.jfje<>0 THEN 	round(f.jfje*100/(e.jfje),2)	ELSE 0 end,
	CASE WHEN e.Dfje<>0 THEN round(f.dfje*100/(e.dfje),2)	ELSE 0 END ,
	isnull(f.Pzlx,SPACE(1))+isnull(f.pzh,SPACE(1)),
	convert(varchar(10),f.date,121),
	f.zy,
	f.VoucherID,
	f.IncNo,
	f.jd
from @TBACCAUX e 
left join  TBVoucher  f
on f.ProjectID = @PROJECTID  and (f.SampleSelectedType>0) and e.code=(f.AccountCode+'$'+ISNULL(f.ProjectCode,SPACE(1)))
where	exists(select * from @WLHZ where code=e.code)

DECLARE @temp2	table(id int identity(1,1),AccountCode varchar(100),UpperCode varchar(100),AccountName nvarchar(200),
qcye		decimal(20,2),jfje decimal(20,2),dfje DECIMAL(20,2),qmye	DECIMAL(20,2),
jfjePer decimal(20,2)DEFAULT(0),dfjePer decimal(20,2)DEFAULT(0),pzh varchar(100),pzrq varchar(10),
zy nvarchar(200),VoucherID varchar(100) collate Chinese_PRC_CS_AS_KS_WS,IncNo nvarchar(200),jd int)

UPDATE t1 SET 
t1.jfjeper=	CASE WHEN t.jfje<>0 AND t1.jfje<>0 THEN 	round(t.jfje*100/t1.jfje,2)	ELSE 0 END ,
t1.dfjeper=CASE WHEN t.dfje<>0 AND t1.dfje<>0 THEN 	round(t.dfje*100/t1.dfje,2)	ELSE 0 END 
from @TBACCAUX t1
left join (SELECT accountcode,SUM(jfje)jfje,SUM(dfje)dfje	FROM @temp	GROUP BY accountcode)t
on	t.accountcode=t1.code

--select * from @TBACCAUX

declare @index int,@row_count int,@accCode varchar(500),@auxCode varchar(500)
select @row_count=count(1) from @TBACCAUX
set @index=1
while(@index<=@row_count)
begin
	select top 1 @AccountCode=code,@AccountName=AccountName,@accCode=AccountCode,@auxCode=auxiliarycode from @TBACCAUX
    
	if exists(select 1 from dbo.TBVoucher where projectid=@projectid and accountcode=@accCode and isnull(projectcode,'')=@auxcode) 
	begin
		insert @temp2 (AccountCode,AccountName,qcye,jfje,dfje,qmye,jfjeper,dfjeper,jd,zy)
		select code,AccountName,qcye,jfje,dfje,qmye,jfjeper,dfjeper,null as jd,case when (select top 1 isHH from @WLHZ where code=e.Code)=1 then '(已回函)' else null end as zy
		from @TBACCAUX e
		where code=@AccountCode	and	AccountName=@AccountName
	
		insert @temp2 (UpperCode,jfje,dfje,jfjePer,dfjePer,pzh,pzrq,zy,VoucherID,IncNo,jd)
		select @AccountCode,jfje,dfje,jfjePer,dfjePer,pzh,pzrq,zy,VoucherID,IncNo,jd
		from @temp
		where AccountCode=@AccountCode and AccountName=@AccountName	and pzh is not null ORDER BY pzrq DESC
	end
	else
	begin
		insert @temp2 (AccountCode,AccountName,qcye,jfje,dfje,qmye,jfjeper,dfjeper,jd,zy)
		select code,AccountName,qcye,jfje,dfje,qmye,jfjeper,dfjeper,null as jd,'本期无凭证'as zy
		from @TBACCAUX e
		where code=@AccountCode	and	AccountName=@AccountName
	end
	DELETE @TBACCAUX	WHERE code=@AccountCode	AND AccountName=@AccountName
	set @index=@index+1
end

select AccountCode,UpperCode,AccountName,qmye,isnull(jfje,0) as jfje,isnull(dfje,0) as dfje,qcye,jfjePer,dfjePer,pzh,pzrq,zy,VoucherID,IncNo,jd from @temp2
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetStatementsData')
   BEGIN
       DROP  Procedure  GetStatementsData
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 
  Customer  : Huapu
  Project   : 获取合并报表展现数据
  Created   : 20140922	By Huasheng
  Updated	   : 20161207 By Huasheng 将数据表切换到附注模块新表
  Version   : 1.0.2
********************************************************************************/
Create PROCEDURE [dbo].[GetStatementsData]
    @projectid VARCHAR(100) ,
    @StruCode VARCHAR(100)
AS     

	SELECT t1.ComPID as ProjectID,t3.ChineseShortName AS ProjectName FROM DBO.CombinationRange t1 JOIN neweasv5.dbo.ProjectsInfo t2 
		ON t1.ComPID=t2.ProjectID JOIN neweasv5.dbo.ClientBasicInfo T3 ON T2.CLIENTID=T3.ClientID
		WHERE t1.Projectid= @projectid  and StruCode=@StruCode

	select * from TbAppendTable where projectid=@projectid and (FSType = 1 or FSType = 2) order by FSType , SortID

	select * from TBCombination where ProjectID=@projectid and StruCode=@StruCode

	
	select * from VIEW_TBFS 
	where ProjectID in (select  ComPID   from CombinationRange where projectid=@projectid and StruCode=@StruCode)
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetStatementsDetailData')
   BEGIN
       DROP  Procedure  GetStatementsDetailData
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 
  Customer  : Huapu
  Project   : 获取合并报表子项目数据
  Created   : 20140922	By Huasheng
  Version   : 1.0.1
********************************************************************************/
CREATE PROCEDURE [dbo].[GetStatementsDetailData]
    @projectid VARCHAR(100)
AS 
	DECLARE @SQL NVARCHAR(MAX),@T_TBFS VARCHAR(100)
		SELECT @projectid AS ProjectID,fscode,checked*yefx,Unchecked*yefx from VIEW_TBFS where Checked<>0 or Unchecked<>0 and projectid=@projectid
	
	EXEC(@SQL)






GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetStyleBookLeve')
   BEGIN
       DROP  Procedure  GetStyleBookLeve
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -Module 获取分层数据
  Created   : 20120917 by dengll
  Updated   : 20170823 by pengwg
  Updated   : 20180802 by hhy
  Version   : 1.0.0
********************************************************************************/
CREATE Procedure [dbo].[GetStyleBookLeve]
@pid	varchar(100),
@fscode	varchar(100),
@sampleType	int	--0	余额抽样(A类型),1	借方,2	贷方(BC类型)抽样
AS
                        
SET	NOCOUNT	ON
	if(@sampleType=0)
	begin
		select ROW_NUMBER() OVER (ORDER	by accountcode desc) AS id, tbgrouping, accountcode, null as auxCode, accauxname, stepofSample, 0 as jdtype, 0 as sumunchecked, 0 as sampleNumber,
				DBO.ConvertMeterialityProgramtoStr(MaterialityProgram) as Testprogram,
				DBO.ConvertSelectSampleMethodtoStr(SelectSampleMethod) as TestProjectmethod
			from
				(select a.tbgrouping, a.accountcode, a.accauxname, b.MaterialityProgram, b.SelectSampleMethod, b.stepofSample
					from (select * from view_tbdetail n
							where n.projectid = @pid
								and n.Unchecked != 0
								and n.isaux=0
						) a
						left join tbdetailExtra b
						on a.id=b.id
					where b.SelectedSampleLebelYesNo = 1
						and	substring(a.fscode, 1, 5) = @fscode
				) t
			order by accountcode asc
	end else begin
		select ROW_NUMBER() OVER (ORDER	by accountcode desc) AS id, tbgrouping, accountcode, null as auxCode, accauxname, stepofSample, @sampleType as jdtype, 0 as sumunchecked, 0 as sampleNumber,
				DBO.ConvertMeterialityProgramtoStr(MaterialityProgram) as Testprogram,
				DBO.ConvertSelectSampleMethodtoStr(SelectSampleMethod) as TestProjectmethod
			from
				(select a.tbgrouping, a.accountcode, a.accauxname,
						case when @sampleType=1 then drMaterialityProgram else crMaterialityProgram end as MaterialityProgram,
						case when @sampleType = 1 then drSelectSampleMethod else crSelectSampleMethod end as SelectSampleMethod,
						b.stepofSample
					from (select * from tbdetail where projectid = @pid and isaux=0) a
						left join tbdetailExtra b
						on  a.id=b.id
					where  (case when @sampleType = 1 then drSelectedSampleLebelYesNo else crSelectedSampleLebelYesNo end) = 1
						and substring(a.fscode, 1, 5) = @fscode
						and ((@sampleType = 1 and a.jfje != 0) or (@sampleType = 2 and a.dfje != 0))
				) t
			order by accountcode asc
	end

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetSubProsInfoDependFileStruc')
   BEGIN
       DROP  Procedure  GetSubProsInfoDependFileStruc
	END
GO
/********************************************************************************
  Copyright : EAS
  Customer  : HuaPu
  Project   : EAS -以为表0为条件获取项目信息
  Created   : 20170706 by jpeng
  Updated	: 
*********************************************************************************/
CREATE Procedure [dbo].[GetSubProsInfoDependFileStruc]
	@PID			 VARCHAR(50),
	@wheresql	varchar(max)=null
AS
	create table #subpros	(id	int	IDENTITY(1,1),ProjectID	varchar(1000) COLLATE Chinese_PRC_CI_AS,ProjectName	varchar(4000) COLLATE Chinese_PRC_CI_AS,UpperProjectID	varchar(1000) COLLATE Chinese_PRC_CI_AS,ex int	DEFAULT(0));
	with tmp as (
	SELECT	ProjectID,ProjectName,UpperProjectID 
	FROM  neweasv5.dbo.ProjectsInfo where projectid=@PID
	union all
	select p.ProjectID,p.ProjectName,p.UpperProjectID		
	from tmp s
	inner join neweasv5.dbo.ProjectsInfo	p
	on p.UpperProjectID=s.projectid
	)
	insert	#subpros(ProjectID,ProjectName,UpperProjectID)
	select distinct ProjectID,ProjectName,UpperProjectID from tmp;

	if(@wheresql	is not	null)
	begin
		declare @id	int=1;
		declare	@_pid	varchar(1000);
		while	exists(select * from #subpros where id=@id)
		begin
			select @_pid=ProjectID from #subpros where id=@id;
			
			declare	@sql	nvarchar(max)='
			if exists(select * from FileScriptList where '+@wheresql+')
				update #subpros	set ex=1 where	ProjectID='''+@_pid+'''
			'
			exec(@sql)
			update #subpros	set ex=1 where	ProjectID=@_pid
		
			set @id=@id+1
		end

		select	ProjectID,ProjectName,UpperProjectID 	from #subpros	where	ex=1	
	end	
	else
		select	ProjectID,ProjectName,UpperProjectID 	from #subpros
	drop table #subpros








GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetTbVoucherFllxForModifyFllxData')
   BEGIN
       DROP  Procedure  GetTbVoucherFllxForModifyFllxData
	END
GO
/********************************************************************************
  Copyright : EAS
  Customer  : HuaPu
  Project   : EAS -获取分录类型数据
  Created   : 17919 by dengll
  Updated	: 
*********************************************************************************/
CREATE Procedure [dbo].[GetTbVoucherFllxForModifyFllxData]
	@PID			 VARCHAR(50),
	@fllxtype	int=1,
	@whereSql	varchar(1000)=null	--查询条件
AS

	SELECT distinct	0 as id,
	tv.incno+' - '+tv.pzh as Incno,
	tv.Date,
	tv.Zy,
	a.Syjz,
	a.AccountName,
	tv.jfje,tv.Dfje,tv.FLLX,tv.AccountCode,tv.voucherid
	into #voucher
	FROM dbo.tbvoucher tv
	inner JOIN  dbo.Account A
	ON	tv.AccountCode=a.AccountCode	and a.Projectid=@PID
	WHERE	tv. projectid=@PID

	SELECT  DISTINCT incno,count(incno)count_incno,	MAX(syjz)maxSyjz,MIN(syjz)minSyjz into #tmp1 FROM #voucher
	GROUP BY incno

	--查询所有数据
	if(@fllxtype=-1)begin
		if(@whereSql is not null)begin
			declare	@sqlnvr	nvarchar(max)
			create table #incnoTemp(Incno varchar(100))
			set	@sqlnvr	='
				insert	#incnoTemp
				select distinct incno	from	#voucher	where	'+@whereSql+'
			'
			exec(@sqlnvr)
			select	distinct  * from	#voucher
				where incno IN (select incno from #incnoTemp)
		end	
	end else if(@fllxtype=0)begin--损益互转凭证
		select	distinct  * from	#voucher	a
			where incno IN (select incno from #tmp1
				where	maxSyjz=1 and minSyjz=1	and count_incno>1)
	end
	--account.syjz=0 and account.syjz=2
	else if(@fllxtype=1)begin--借贷不平衡		非标准损益结转凭证
		--select	distinct  * from	#voucher	a
		--where incno IN (select incno from #tmp1	where count_incno>1	and maxSyjz=2 and minSyjz=0)
		;with a1 as (
		 SELECT
			Incno,
			Fllx,
			sum(jfje)-sum(dfje) as  ce
		FROM #voucher
		GROUP BY   incno,Fllx
		)
		
		select	distinct  * from	#voucher	a	where incno IN (select incno from a1 where	ce<>0)
	end
	--fllx=2 and  也存在(syjz=1 and syjz=2) and fllx=2
	--else if(@fllxtype=2)begin--标准损益结转凭证
	--	select	distinct  * from	#voucher	a
	--		where	fllx=2 and	incno IN (select incno from #tmp1	where count_incno>1	and maxSyjz=2 and minSyjz=1)
	--end
	--fllx=2 and  也存在fllx=3
	else if(@fllxtype=2)begin--调整期初凭证3

		select * into #a1 from (
		select accountcode from dbo.account where projectid=@pid and syjz=3
		union
		select accountcode from dbo.account where projectid=@pid and accountname='以前年度损益调整'
		)a

		select incno,pzh,isnull(pzlx,'')pzlx	into #pzb 
			from	dbo.tbvoucher 
			where projectid=@pid and (fllx=3 or accountcode in (select accountcode from #a1))
			group by incno,pzh,pzlx	
			--having count(incno)>1 and count(pzh)>1	and COUNT(isnull(pzlx,''))>1

		SELECT distinct	0 as id,
			dbo.isnullempty(tv.pzlx,'')+' - '+cast(CONVERT(varchar(100),tv.date, 112) as varchar(8))+' - '+tv.pzh Incno,
			tv.Date,
			tv.Zy,b.Syjz,
			b.AccountName,
			tv.jfje,tv.Dfje,tv.FLLX,tv.AccountCode,tv.voucherid FROM dbo.TBVoucher tv
		inner join dbo.ACCOUNT b
		ON tv.AccountCode=b.AccountCode	and b.ProjectID=@pid
		inner join #pzb 
		on #pzb.pzlx=isnull(tv.pzlx,'') and #pzb.incno=tv.incno and #pzb.pzh=tv.pzh
		WHERE	tv.projectid=@PID	
	end
	
	drop table #voucher;
	drop table #tmp1


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'GetWlhzAndTB')
   BEGIN
       DROP  Procedure  GetWlhzAndTB
	END
GO

/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -从tb表获取最新往来函证数据
  Created   : Husheng PM 2017-09-06

  Updated	:	
  Version   : 1.0.1
********************************************************************************/
CREATE Procedure GetWlhzAndTB
@projectid	varchar(100)
AS
SET NOCOUNT	ON
--选为样本科目
Declare @SampleWlhz table(ID varchar(50),FSCode varchar(50) collate Chinese_PRC_CS_AS_KS_WS,AccountCode varchar(100) collate Chinese_PRC_CS_AS_KS_WS,AuxiliaryCode varchar(100) collate Chinese_PRC_CS_AS_KS_WS,AccountName varchar(100))

--所有科目
declare @NotSampleWlzh table(ID varchar(50),FSCode varchar(50) collate Chinese_PRC_CS_AS_KS_WS,AccountCode varchar(100) collate Chinese_PRC_CS_AS_KS_WS,AuxiliaryCode varchar(100) collate Chinese_PRC_CS_AS_KS_WS,AccountName varchar(100))

--兼顾分账户审计方案中统计抽样和选取特定项目的设置
INSERT @SampleWlhz
SELECT t.ID,t.fscode,t.accountcode,t.auxiliarycode,t.AccAuxName  
FROM DBO.TBDetail t 
join DBO.TBDetailExtra e
on e.ID = t.ID and t.IsMx = 1 and t.DataType != 3 and (t.kmsx=53 or t.kmsx=63) and e.SampleSelectedYesNo=1
join AccountQues s
on t.ProjectID = s.ProjectID and substring(t.FSCode,1,5) = s.AccountCode and s.QuesID = 'Q031' and s.SelectedYesNo = 1
where e.projectid=@projectid  
union
SELECT t.ID,t.fscode,t.accountcode,t.auxiliarycode,t.AccAuxName  
FROM DBO.TBDetail t 
join DBO.TBDetailExtra e
on e.ID = t.ID and t.IsMx = 1 and t.DataType != 3 and (t.kmsx=53 or t.kmsx=63) and e.SampleSelectedType>0
join AccountQues s
on t.ProjectID = s.ProjectID and substring(t.FSCode,1,5) = s.AccountCode and s.QuesID = 'Q033' and s.SelectedYesNo = 1
where e.projectid=@projectid 
--SELECT t.ID,t.fscode,t.accountcode,t.auxiliarycode,t.AccAuxName  FROM DBO.TBDetail t left join DBO.TBDetailExtra e
--	on e.ID = t.ID 
--	where e.projectid=@projectid and t.IsMx = 1 and t.DataType != 3 and (t.kmsx=53 or t.kmsx=63) and (e.SampleSelectedYesNo=1 or e.SampleSelectedType>0)


declare @NameWlhz table(ID varchar(50),AccountName varchar(100))
INSERT @NameWlhz SELECT ID,AccountName FROM @SampleWlhz 

--同名客户非样本科目
INSERT @NotSampleWlzh
	SELECT t.ID,t.fscode,t.accountcode,t.auxiliarycode,t.AccAuxName FROM DBO.view_TBDetail t 
	join @NameWlhz w
	on t.AccAuxName=w.AccountName
	and t.id<>w.id  
	where t.projectID = @projectid	and (t.kmsx=53 or t.kmsx=63)
 
  
  --delete s
  --from @NotSampleWlzh s
  --join view_TBDetail t
  --on s.id = t.id
  --and t.unchecked = 0 
  --and t.datatype = 0
  --and (t.crjejf <> 0 or t.crjedf <> 0 ) 


SELECT t.* FROM (
	select ID,FSCode,AccountCode,AuxiliaryCode,AccountName from @SampleWlhz
	union
	select ID,FSCode,AccountCode,AuxiliaryCode,AccountName from @NotSampleWlzh
) t 
ORDER BY t.AccountName

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'Getxxx40Data')
   BEGIN
       DROP  Procedure  Getxxx40Data
	END
GO

/********************************************************************************
  Database  : EAS
  Copyright : 2009 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -获取xxx40文件数据
  Created   : by dengll 09-03-10
  Updated   : 20091215 BY DENGLL ADD CODE @YEFX ,ADD @PROJECTID AND REMOVE @tbname,@jzpzname
  updated	:	20091216 by len 添加noteline层数据到@table
  updated   : by jpeng 2011/06/16
  updated   : 2012/01/11 by jpeng 
  updated   : 2012/06/08 by jpeng 
  Version   : 1.0.3
********************************************************************************/

create Procedure [dbo].[Getxxx40Data]
  	@projectid	varchar(100),
  	@fscode	varchar(100)
AS
DECLARE @UpperYearProjectID VARCHAR (100) , @year INT, @PeriodEndDate DATETIME, @clientid VARCHAR (100)
SELECT @year = year (PeriodEndDate)
    , @PeriodEndDate = PeriodEndDate
    , @clientid = clientid
FROM neweasv5.dbo.projectsinfo
WHERE projectid = @projectid

 create table #tempTBFS (
    [ProjectID] [varchar] (100)  collate Chinese_PRC_CS_AS_KS_WS ,
	[FSCode] [varchar] (100)  collate Chinese_PRC_CS_AS_KS_WS ,
	[AccountCode] [varchar] (100)  collate Chinese_PRC_CS_AS_KS_WS ,
	[CODE] [varchar] (100)  collate Chinese_PRC_CS_AS_KS_WS ,
	[UpperCode] [varchar] (100)  collate Chinese_PRC_CS_AS_KS_WS ,
	[TNAME] [varchar] (100)  ,
	[PY1] [decimal] (20,2)  ,
	[UNCHECKEDDATA] [decimal] (20,2)  ,
	[M1] [decimal] (20,2),
	[M2] [decimal] (20,2),
	[M3] [decimal] (20,2),
	[M4] [decimal] (20,2),
	[M5] [decimal] (20,2),
	[M6] [decimal] (20,2),
	[M7] [decimal] (20,2),
	[M8] [decimal] (20,2),
	[M9] [decimal] (20,2),
	[M10] [decimal] (20,2),
	[M11] [decimal] (20,2),
	[M12] [decimal] (20,2)	
	);
	
with temp as(
select * from VIEW_TBFS where FSCode=@fscode and ProjectID = @projectid
union all 
select b.* from temp a , VIEW_TBFS b
where a.FSCode = b.TBGrouping  and b.projectid = a.ProjectID
)

insert into #tempTBFS
select ProjectID,FSCode,0 as AccountCode, FSCode as CODE,CASE when fscode=@fscode THEN '' ELSE tbgrouping end,FsName as TNAME,isnull(PY1* Yefx,0) as PY1,isnull(Unchecked* Yefx,0) as UNCHECKEDDATA,
0 as M1,0  as M2,0  as M3,0  as M4,0 as M5,0  as M6,0  as M7,
0  as M8,0  as M9,0  as M10,0  as M11,0  as M12
from temp 

	
 create table #tempvoucher (
	[AccountCode] [varchar] (100)  collate Chinese_PRC_CS_AS_KS_WS ,
	[ProjectCode] [varchar] (100)  collate Chinese_PRC_CS_AS_KS_WS ,	
	[M1] [decimal] (20,2),
	[M2] [decimal] (20,2),
	[M3] [decimal] (20,2),
	[M4] [decimal] (20,2),
	[M5] [decimal] (20,2),
	[M6] [decimal] (20,2),
	[M7] [decimal] (20,2),
	[M8] [decimal] (20,2),
	[M9] [decimal] (20,2),
	[M10] [decimal] (20,2),
	[M11] [decimal] (20,2),
	[M12] [decimal] (20,2)	
	);
--分月汇总计算核算数据
INSERT #tempvoucher
select B.AccountCode,B.ProjectCode,
sum(case when RIGHT(CONVERT(VARCHAR,B.Period),2)=01 then B.Fsje else 0 end) as M1,
sum(case when RIGHT(CONVERT(VARCHAR,B.Period),2)=02 then B.Fsje else 0 end) as M2,
sum(case when RIGHT(CONVERT(VARCHAR,B.Period),2)=03 then B.Fsje else 0 end) as M3,
sum(case when RIGHT(CONVERT(VARCHAR,B.Period),2)=04 then B.Fsje else 0 end) as M4,
sum(case when RIGHT(CONVERT(VARCHAR,B.Period),2)=05 then B.Fsje else 0 end) as M5,
sum(case when RIGHT(CONVERT(VARCHAR,B.Period),2)=06 then B.Fsje else 0 end) as M6,
sum(case when RIGHT(CONVERT(VARCHAR,B.Period),2)=07 then B.Fsje else 0 end) as M7,
sum(case when RIGHT(CONVERT(VARCHAR,B.Period),2)=08 then B.Fsje else 0 end) as M8,
sum(case when RIGHT(CONVERT(VARCHAR,B.Period),2)=09 then B.Fsje else 0 end) as M9,
sum(case when RIGHT(CONVERT(VARCHAR,B.Period),2)=10 then B.Fsje else 0 end) as M10,
sum(case when RIGHT(CONVERT(VARCHAR,B.Period),2)=11 then B.Fsje else 0 end) as M11,
sum(case when RIGHT(CONVERT(VARCHAR,B.Period),2)=12 then B.Fsje else 0 end) as M12
from TBVoucher  B
where B.ProjectID = @projectid and  B.Fllx=1 and B.date<=@PeriodEndDate	and year(B.date)=@year	and B.clientid=@clientid
group by B.AccountCode,B.ProjectCode
ORDER BY B.AccountCode,B.ProjectCode


--SELECT * FROM #tempvoucher

--对于连续审计项目，“上年同期”列应从上期PID获取数据
select @UpperYearProjectID = UpperYearProjectID from [NeweasV5].dbo.[ProjectsInfo] where ProjectID = @projectid and ContinueDate = 1


select CODE,UpperCode,TNAME,isnull(PY1,0) as PY1,UNCHECKEDDATA,M1,M2,M3,M4,M5,M6,M7,M8,M9,M10,M11,M12 from 
(select code as sortcode,CODE,UpperCode,TNAME,
case when @UpperYearProjectID is null then A.PY1 
     else (select isnull(D.unchecked * yefx,0) from VIEW_TBFS D where D.projectID = @UpperYearProjectID and D.fscode = A.fscode) end as PY1,
UNCHECKEDDATA,M1,M2,M3,M4,M5,M6,M7,M8,M9,M10,M11,M12 from #tempTBFS A
union 
select (A.FSCode+A.AccountCode) as sortcode,A.AccountCode as CODE,A.TBGROUPing,A.AccAuxName as TNAME,
case when @UpperYearProjectID is null then isnull(A.PY1* Yefx,0) 
	 else (select isnull(D.unchecked * yefx,0) from VIEW_TBDetail D 
	 where D.projectID = @UpperYearProjectID and D.fscode = A.fscode and D.AccountCode = A.AccountCode
	 and D.IsAux = 0 and D.SourceFSCode = '') end as PY1,
isnull(Unchecked* Yefx,0) as UNCHECKEDDATA,
SUM(B.M1)*A.Yefx as M1,
SUM(B.M2)*A.Yefx as M2,
SUM(B.M3)*A.Yefx as M3,
SUM(B.M4)*A.Yefx as M4,
SUM(B.M5)*A.Yefx as M5,
SUM(B.M6)*A.Yefx as M6,
SUM(B.M7)*A.Yefx as M7,
SUM(B.M8)*A.Yefx as M8,
SUM(B.M9)*A.Yefx as M9,
SUM(B.M10)*A.Yefx as M10,
SUM(B.M11)*A.Yefx as M11,
SUM(B.M12)*A.Yefx as M12

from  VIEW_TBDetail  A
join #tempTBFS c
on a.fscode = c.fscode and a.IsAux = 0 and a.SourceFSCode = ''
and a.ProjectID = c.ProjectID
inner join  #tempvoucher  B
on ((A.IsMx = 1 and A.AccountCode = B.AccountCode) or (A.IsMx=0 and left(B.AccountCode,len(A.AccountCode))=A.AccountCode))
--where (B.Fllx=1 and B.date<=@PeriodEndDate	and year(B.date)=@year	and B.clientid=@clientid)
group by A.ProjectID, A.FSCode,A.AccountCode,A.TBGROUPing,A.AccAuxName,A.PY1,A.Yefx,A.Unchecked

union 
select (A.FSCode+A.AccountCode+A.AuxiliaryCode) as sortcode,A.AuxiliaryCode as CODE,a.ACCOUNTCODE,A.AccAuxName as TNAME,
case when @UpperYearProjectID is null then isnull(A.PY1* Yefx,0) 
	 else (select isnull(D.unchecked * yefx,0) from VIEW_TBDetail D 
	 where D.projectID = @UpperYearProjectID and D.fscode = A.fscode and D.AccountCode = A.AccountCode and D.AuxiliaryCode = A.AuxiliaryCode
	  and D.IsAux = 1 and D.SourceFSCode = '') end as PY1,
isnull(Unchecked* Yefx,0) as UNCHECKEDDATA,
SUM(B.M1)*A.Yefx as M1,
SUM(B.M2)*A.Yefx as M2,
SUM(B.M3)*A.Yefx as M3,
SUM(B.M4)*A.Yefx as M4,
SUM(B.M5)*A.Yefx as M5,
SUM(B.M6)*A.Yefx as M6,
SUM(B.M7)*A.Yefx as M7,
SUM(B.M8)*A.Yefx as M8,
SUM(B.M9)*A.Yefx as M9,
SUM(B.M10)*A.Yefx as M10,
SUM(B.M11)*A.Yefx as M11,
SUM(B.M12)*A.Yefx as M12
from  VIEW_TBDetail  A
join #tempTBFS c
on a.fscode = c.fscode and a.IsAux = 1 and a.SourceFSCode = ''
and a.ProjectID = c.ProjectID
inner join  #tempvoucher  B
on (A.AccountCode = B.AccountCode and A.AuxiliaryCode = B.ProjectCode )
--where B.Fllx=1 and B.date<=@PeriodEndDate	and year(B.date)=@year	and B.clientid=@clientid
group by A.ProjectID,A.FSCode,A.AccountCode,A.AuxiliaryCode,A.AccAuxName,A.PY1,A.Yefx,A.Unchecked

) AA
order by sortcode

	
drop table #tempTBFS	
drop table #tempvoucher





GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'ImportAndAppendVoucher')
   BEGIN
       DROP  Procedure  ImportAndAppendVoucher
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2010 EAS (Beijing)
  Customer  : Huapu
  Project   : EAS -根据SuperStar更新tbvoucher
  Created   : 2011/12/28 by jpeng 
  Updated   : 2012/12/13 by jpeng  导入前期和期后,及追加本期数据
  Updated	:	20140805 by dengll	0本期,-1前期,1期后
  Version   : 1.0.2
********************************************************************************/
CREATE Procedure ImportAndAppendVoucher
@ProjectID varchar(100),
@DateType int
AS

BEGIN TRY
SET NOCOUNT ON
SET ANSI_WARNINGS OFF
declare @Voucher            nvarchar(1000)=@ProjectID+'Voucher';
declare	@sql	nvarchar(max)

declare @Clientid	varchar(100),@PreviousPeriodDate	varchar(100),@Enddate		varchar(100),@CurrentYearPid varchar(100)
	,@UpperYearProjectID	varchar(100)

select @ClientID=ClientID,@Enddate=PeriodEndDate,@UpperYearProjectID=UpperYearProjectID,@CurrentYearPid=CurrentYearPid 
	from neweasv5..projectsinfo where projectid=@ProjectID

if(len(dbo.isnullEmpty(@CurrentYearPid,@UpperYearProjectID))>0)
	select @PreviousPeriodDate=PeriodEndDate	from neweasv5..projectsinfo where projectid=@ProjectID

create	table #parTable(ProjectID varchar(100)	collate Chinese_PRC_CS_AS_KS_WS,clientid	varchar(100),DataType int,PreviousPeriodDate datetime,Enddate datetime)
insert	#parTable
select @ProjectID,@Clientid,@DateType,isnull(@PreviousPeriodDate,null),@Enddate

declare	@PeriodTable	table(Period	int,StartDate	datetime,EndDate datetime)
declare @i int=1;
declare @kjdate varchar(10);
select top 1	@kjdate=kjdate	from	dbo.kjqj	where	ProjectID=@ProjectID
while(@i<=12)begin
	declare @date	varchar(10)
	if(@i>9)
		set @date=@kjdate+cast(@i as varchar(2))+'01'
	else 
		set @date=@kjdate+'0'+cast(@i as varchar(2))+'01'

	INSERT @PeriodTable
	select	cast(CONVERT(char(6),@date,112) as int),	
	convert(varchar(10),DATEADD(mm, DATEDIFF(mm,0,@date), 0),111),
	CONVERT(varchar(10),DATEADD(ms,-3,DATEADD(mm, DATEDIFF(m,0,@date)+1, 0)),111)
	set @i=@i+1
end

IF @DateType = 0	--本期
begin
set	@sql='
declare	@ProjectID	varchar(100)='''+@ProjectID+'''
declare	@Clientid	varchar(100)='''+@Clientid+'''

--删除需要覆盖的数据,字段period用来记录需要覆盖月份
delete A from  tbVoucher  A
where	Projectid=@ProjectID and	exists(select	1	from	accountperiod  B 
	where	(ProjectID=@ProjectID and	A.period=B.accountperiod and B.period=1 and B.DateType=0))

--插入需要覆盖的数据
insert into tbVoucher (Clientid,projectid,IncNo,Date,Period,Pzlx,Pzh,Djh,AccountCode,ProjectCode,Zy,Jfje,Dfje,Jfsl,Dfsl,ZDR,dfkm,FDetailID)
select @Clientid,@ProjectID,A.IncNo,A.Date,A.Period,A.Pzlx,A.Pzh,A.Djh,A.AccountCode,A.ProjectCode,A.Zy,A.Jfje,A.Dfje,A.Jfsl,A.Dfsl,A.ZDR,a.dfkm,a.FDetailID
from '+@Voucher+' A	where
	exists(select	1	from	accountperiod B	where	ProjectID=@ProjectID and(A.period=B.accountperiod and  B.period=1))
and	a.[DATE]<=(select Enddate from #parTable)	and a.[DATE]>(select PreviousPeriodDate from #parTable)	

--补充凭证数据	20150120 by dengll
insert into tbVoucher (Clientid,projectid,IncNo,Date,Period,Pzlx,Pzh,Djh,AccountCode,ProjectCode,Zy,Jfje,Dfje,Jfsl,Dfsl,ZDR,dfkm,FDetailID)
select @Clientid,@ProjectID,A.IncNo,A.Date,A.Period,A.Pzlx,A.Pzh,A.Djh,A.AccountCode,A.ProjectCode,A.Zy,A.Jfje,A.Dfje,A.Jfsl,A.Dfsl,A.ZDR,a.dfkm,a.FDetailID
from '+@Voucher+' A	,#parTable	p	where	exists(select	1	from	accountperiod B	where	ProjectID=@ProjectID and	(A.period=B.accountperiod and  B.period=0)) 
and	a.[date]<=p.Enddate	and a.[DATE]>(select PreviousPeriodDate from #parTable)
AND not exists(select	1	from	 tbVoucher B	
		where	B.Projectid=@ProjectID and	
		B.Period=a.Period and isnull(B.Pzlx,space(0))=isnull(a.Pzlx,space(0)) and isnull(B.Pzh,space(0))=isnull(a.Pzh,space(0)))
'
exec(@sql)
--把需要覆盖的月份，标记回归为0
Update A
set A.DateType=0
from accountperiod A	
where	ProjectID=@ProjectID and	exists(select	1	from	@PeriodTable B	where	(A.accountperiod=B.period))
--将追加的月份插入到309
insert into accountperiod(ProjectID,accountperiod,Period,StartDate,EndDate,DateType,currentyearPID)
select @ProjectID,B.Period,0, B.StartDate, B.EndDate,0 ,@ProjectID
from  @PeriodTable B where	not exists
(select  1 from  accountperiod A where	A.ProjectID=@ProjectID and	B.period = A.accountperiod )	AND	convert(char(10),B.EndDate,111)<=convert(char(10),@Enddate,111)

update  dbo.tbVoucher set Jd=1 where Jfje<>0	and Projectid=@ProjectID
update  dbo.tbVoucher set Jd=-1 where Dfje<>0		and Projectid=@ProjectID
update  dbo.tbVoucher set Fsje=Jd*(Jfje+Dfje)	where	Projectid=@ProjectID
--update	dbo.tbVoucher set AccountingAge= DATEDIFF(month,convert(varchar(10),date,120),convert(varchar(10),@Enddate,120))	where	Projectid=@ProjectID
update dbo.tbwlzl		set	AgeAnalysis=0,BalanceAnalysis=0	where projectid=@ProjectID
UPDATE	dbo.accountperiod  SET Period = 0 WHERE DateType = 0	and	ProjectID=@ProjectID--标记为不是追加数据

END
ELSE IF @DateType = -1	--前期
BEGIN
--删除前期数据
delete A from  Qcwljzpz  A
	where	Projectid=@ProjectID and	exists	(select	1	from	@PeriodTable  B where (	A.period=B.period))

set	@sql='
--将前期数据插入
insert into Qcwljzpz (Clientid,	ProjectID,IncNo,Date,Period,Pzlx,Pzh,Djh,AccountCode,ProjectCode,Zy,Jfje,Dfje,Jfsl,Dfsl,ZDR,dfkm,FDetailID)
select	p.Clientid,p.ProjectID,A.IncNo,A.Date,A.Period,A.Pzlx,A.Pzh,A.Djh,A.AccountCode,A.ProjectCode,A.Zy,A.Jfje,A.Dfje,A.Jfsl,A.Dfsl,A.ZDR,a.dfkm,a.FDetailID
from '+@Voucher+' A ,#parTable	p
where 	YEAR(a.[DATE])<YEAR(p.Enddate)
'

exec(@sql)
--插入前期月份记录
insert into accountperiod(ProjectID,accountperiod,Period,StartDate,EndDate,DateType,currentyearPID)
select @ProjectID,B.Period,0, B.StartDate, B.EndDate,-1 ,@ProjectID
from  @PeriodTable B where	not exists
(select  A.accountperiod from  accountperiod A where	A.ProjectID=@ProjectID and B.period = A.accountperiod)	AND	YEAR(B.EndDate)<year(@Enddate)

update dbo.tbwlzl		set	AgeAnalysis=0,BalanceAnalysis=0	where projectid=@ProjectID
update  dbo.Qcwljzpz set Jd=1 where Jfje<>0	and Projectid=@ProjectID
update  dbo.Qcwljzpz set Jd=-1 where Dfje<>0		and Projectid=@ProjectID
--update Qcwljzpz set AccountingAge= DATEDIFF(month,convert(varchar(10),date,120),convert(varchar(10),@Enddate,120))	where Projectid=@ProjectID
update  dbo.Qcwljzpz set Fsje=(Jfje-Dfje)	where	Projectid=@ProjectID

END 
ELSE IF @DateType = 1--期后
BEGIN
--删除期后数据
delete A from  qhjzpz  A
where	A.Projectid=@ProjectID 
set	@sql='
--插入期后数据
insert into qhjzpz (Clientid,ProjectID,IncNo,Date,Period,Pzlx,Pzh,Djh,AccountCode,ProjectCode,Zy,Jfje,Dfje,Jfsl,Dfsl,ZDR,dfkm,FDetailID)
select	p.Clientid,p.ProjectID,A.IncNo,A.Date,A.Period,A.Pzlx,A.Pzh,A.Djh,A.AccountCode,A.ProjectCode,A.Zy,A.Jfje,A.Dfje,A.Jfsl,A.Dfsl,A.ZDR,a.dfkm,a.FDetailID
from '+@Voucher+' A,#parTable	p where	a.[DATE]>p.Enddate and	a.[DATE]<=dateadd(day,90,p.Enddate)'
exec(@sql)
--插入期后月份记录
insert into accountperiod(ProjectID,accountperiod,Period,StartDate,EndDate,DateType,currentyearPID)
select	@ProjectID,	B.Period,0, B.StartDate, B.EndDate,1 ,@ProjectID
from  @PeriodTable B where	not exists
(select  1 from  accountperiod A where	A.ProjectID=@ProjectID and B.period = A.accountperiod )	AND	convert(char(10),B.StartDate,111)>convert(char(10),@Enddate,111)

update  dbo.qhjzpz set Jd=1 where Jfje<>0	and Projectid=@ProjectID
update  dbo.qhjzpz set Jd=-1 where Dfje<>0		and Projectid=@ProjectID
update  dbo.qhjzpz set Fsje=(Jfje-Dfje)	where	Projectid=@ProjectID

--更新期后凭证的分录类型
exec dbo.UPDATEVoucherFllx	@ProjectID,@DateType

END 

exec('drop table '+@Voucher)

END TRY
BEGIN CATCH
	--ROLLBACK TRANSACTION
	EXEC DBO.[PRO_THROW] @projectid,'ImportAndAppendVoucher'
END CATCH


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'InheritNoteAndTB')
   BEGIN
       DROP  Procedure  InheritNoteAndTB
	END
GO

/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : 
  Project   : EAS -继承上年附注对应关系
  Created   : 
  Updated   : -
  Version   : 1.0.0
********************************************************************************/

CREATE Procedure InheritNoteAndTB
	@projectid	varchar(100),
	@fsCode	varchar(100)
AS
	declare @upperyearprojectid varchar(100)
	select @upperyearprojectid=upperyearprojectid from NeweasV5.dbo.ProjectsInfo where ProjectId=@projectid
	if(@upperyearprojectid is not null and  @upperyearprojectid<>'' And len(@upperyearprojectid)>0)
		begin
			insert into NoteAndTB
			select newid() as guid,a.ProjectID,b.notecode,b.formcode,a.fscode,a.accountcode,b.auxiliarycode,b.tbtype,b.idgrouping 
			from VIEW_TBDetail  a
			join NoteAndTB b
			on b.TBType=0 and b.projectid=@upperyearprojectid and a.ProjectID = @projectid and a.FSCode = b.FSCode and a.AccountCode = b.AccountCode and a.AuxiliaryCode=b.AuxiliaryCode
			and a.fscode=@fsCode and not exists(select 1 from NoteAndTB where fscode=b.fscode and accountCode = b.Accountcode and AuxiliaryCode=b.AuxiliaryCode and projectid=@projectid);

			
    end

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'InitAuxiliaryCodeConfig')
   BEGIN
       DROP  Procedure  InitAuxiliaryCodeConfig
	END
GO
 /********************************************************************************
  Database  : EAS
  Copyright : 2010 Huapu (Beijing)
  Customer  : Huapu Chinese,bj
  Project   : EAS -初始AuxiliaryCodeConfig数据 废弃
********************************************************************************/
CREATE Procedure [dbo].InitAuxiliaryCodeConfig
	@ProjectID nvarchar(50)
	,@lastperiodpid	varchar(100)--同年前期的项目编号
	,@lastPid	varchar(100)--以前年度项目编号
AS

begin try	
--BEGIN	TransAction
SET NOCOUNT ON
SET XACT_ABORT ON

return;	--废弃

--默认配置,本期只导入只有一个基本核算的
delete dbo.AuxiliaryCodeConfig where projectid=@ProjectID

SET ROWCOUNT 10000;
WHILE 1 = 1
BEGIN
	IF len(@lastperiodpid)>0
	insert	dbo.AuxiliaryCodeConfig(projectid,AccountCode,typecode,AuxiliaryCode,FdetailID)
	select	distinct	@ProjectID,AccountCode,TypeCode,AuxiliaryCode,0
		from dbo.AuxiliaryCodeConfig fzye	where projectid=@lastperiodpid
			and not exists(select 1 from 	dbo.AuxiliaryCodeConfig where  projectid=@ProjectID and AccountCode=fzye.AccountCode and AuxiliaryCode=fzye.AuxiliaryCode)
	else IF len(@lastPid)>0
	insert	dbo.AuxiliaryCodeConfig(projectid,AccountCode,typecode,AuxiliaryCode,FdetailID)
	select	distinct	@ProjectID,AccountCode,TypeCode,AuxiliaryCode,0
		from dbo.AuxiliaryCodeConfig fzye	where projectid=@lastPid
			and not exists(select 1 from 	dbo.AuxiliaryCodeConfig where  projectid=@ProjectID and AccountCode=fzye.AccountCode and AuxiliaryCode=fzye.AuxiliaryCode)

		IF @@ROWCOUNT = 0
		BREAK;
END
SET ROWCOUNT 0;

end try
begin catch
	EXEC DBO.[PRO_THROW] @ProjectID,'InitAuxiliaryCodeConfig'
end catch

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'InitPM')
   BEGIN
       DROP  Procedure  InitPM
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -Module SASManage
  Created   : 20120917 by dengll
  Version   : 1.0.0
********************************************************************************/
CREATE Procedure [dbo].[InitPM]
@pid	varchar(100),
@fscode	varchar(100),
@j	decimal(20,2)
AS
	declare	@Ques	varchar(10)	
	--获取fscode文档用的是那个测试程序
	declare	@t	table(id	int,accountcode	varchar(100),Quesid	varchar(10),QuesDescription	varchar(500),QuesAnswer	varchar(10))
	insert	@t
	exec	dbo.SelectSampleSelectedQues	@pid,@fscode,'Q001'

	while	exists(select 1 from @t)begin
		select	top 1 @Ques=QuesAnswer	from	@t
		if(@Ques	is	not null	and
			@Ques='A')begin
			exec dbo.InitPMA	@pid,@fscode,@j
			end
		else	if(@Ques	is	not null	and
			@Ques='B')begin
		exec	dbo.InitPMBD	@pid,@fscode,@j
		exec	dbo.InitPMBJ	@pid,@fscode,@j
		end	else	if(@Ques	is	not null	and
			@Ques='C')begin
        --与B类使用相同方法
		exec	dbo.InitPMBD	@pid,@fscode,@j
		exec	dbo.InitPMBJ	@pid,@fscode,@j		
		end
		delete @t where QuesAnswer=@Ques
	end





GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'InitPMA')
   BEGIN
       DROP  Procedure  InitPMA
	END
GO

/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -Module xxx50 A样本
  Created   : 20120917 by dengll
  Updated	: 201120927 by dengll
  Updated	: 20121118 by dengll
  Version   : 1.0.2
********************************************************************************/
create Procedure [dbo].[InitPMA]
	@pid	varchar(100),
	@fscode	varchar(100),
	@j	decimal(20,2)
AS
	declare	@uncheck decimal(20,2),@sNum	int,@jj	decimal(20,2),
		@step	int,@error	int,@smapleTotalsap	int,@nStep	int,
		@currentSamplesize	int,@stepSmapleJe	decimal(20,2),@valueofJ	decimal(20,2),
		@valueofPM	int,@nNum	int,@samplemax	int,@Overallsample decimal(20,2),@memo varchar(500)
			
	set	@jj=convert(nvarchar,@j)	

	select	@uncheck=yefx*Unchecked	from	VIEW_TBFS	where	ProjectID = @pid and fscode=@fscode
	if(@uncheck=0) return;	

	select	@samplemax=samplemax	from	NeweasV5.dbo.SuccessiveSamplingMethod	where	step=1
	set	@nNum=DBO.GetStylebookScopeNumber(@uncheck,@jj)

	if(@nNum<=@samplemax)begin
          --删除原来分步抽样的样本
			delete	PMvalueofJ	where	ProjectID = @pid and	fscode=@fscode	and	step>0	and	Testobject=0
			update	TBDetailExtra	set	SampleSelectedYesNo=0, StepofSample=0	
			from TBDetailExtra a
			join TBDetail b
			on a.ID = b.ID  and SourceFSCode = '' and ismx = 1
			where	a.ProjectID = @pid and  b.fscode=@fscode		and	stepofsample>0
					 

		if not exists(select	1	from	PMvalueofJ	where	ProjectID = @pid and fscode=@fscode	and	step=0	and	Testobject=0)
		begin
			insert	PMvalueofJ(ProjectID,ID,[Fscode],[step],[valueofJ],[Samplesize],SampleTotal,[Testobject],Overallsample)
			select	@pid,'',@fscode,0,@j,@nNum,@nNum,0,0
			return;
		end
		select	@sNum=SampleTotal,@Overallsample = Overallsample,@memo	= isnull(memo,'')
		from	PMvalueofJ	where	ProjectID = @pid and step=0	and	fscode=@fscode	and	Testobject=0
		
		--比较已有的样本量
		if(@sNum=@nNum)
			return;
		if(@sNum!=@nNum)begin
			update	PMvalueofJ	set	[Samplesize]=@nNum,SampleTotal = @nNum
			--,[valueofJ]=@jj,memo='样本间距发生变化，请重新统计抽样'
				where	ProjectID = @pid and fscode=@fscode	and	step=0	and	Testobject=0
  
		end
		return;
	end	else	if(@nNum>@samplemax)begin
          --删除原来固定样本规模抽样的样本
			delete	PMvalueofJ	where	ProjectID = @pid and	fscode=@fscode	and	step=0	and	Testobject=0
			update	TBDetailExtra	set	SampleSelectedYesNo=0, StepofSample=0	
			from TBDetailExtra a
			join TBDetail b
			on a.ID = b.ID and IsMx  = 1 and SourceFSCode = ''
			where	a.ProjectID = @pid and  b.fscode=@fscode		and	stepofsample=0
			


		if not exists(select	1	from	PMvalueofJ	where	ProjectID = @pid and fscode=@fscode	and	step=1	and	Testobject=0)
		begin				
				insert	PMvalueofJ(ProjectID,ID,[Fscode],[step],[valueofJ],[Samplesize],SampleTotal,[Testobject],Overallsample)
				select	@pid,'',@fscode,1,@j,@samplemax,@nNum,0,0
				return;
		end	
		
		--比较已有的样本量
		select	@sNum=SampleTotal	,@Overallsample = Overallsample,@memo	= isnull(memo,'')
		from	PMvalueofJ			
		where	ProjectID = @pid and step=1	and	fscode=@fscode	and	Testobject=0		

		if(@sNum!=@nNum)begin
			update	PMvalueofJ	set	[Samplesize]=@samplemax,SampleTotal=@nNum
			--,[valueofJ]=@uncheck/@samplemax,memo='样本间距发生变化，请重新统计抽样'
				where	ProjectID = @pid and fscode=@fscode	and	step=1	and	Testobject=0
		end
		
		--根据样本量算出来，获取所需要的步骤 	
		select	@nStep=step	from	NeweasV5.dbo.SuccessiveSamplingMethod	where	@sNum>Samplemin and @sNum<=Samplemax
		delete	PMvalueofJ		where	ProjectID = @pid and fscode=@fscode	and	step>@nStep	and	Testobject=0
		update	TBDetailExtra	set	SampleSelectedYesNo=0, StepofSample=0	
		from    TBDetailExtra a
		join    TBDetail b
		on a.ID = b.ID and IsMx  = 1 and SourceFSCode = ''
		where	a.ProjectID = @pid and b.fscode=@fscode		and	stepofsample>@nStep
		
		
		--获取25表最大的步骤数
		select	@step=max(step)	from	PMvalueofJ	where	ProjectID = @pid and fscode=@fscode	and	Testobject=0
		declare	@mStep	int
		set	@mStep=@step
		if(@step=@nStep)begin
			select	@valueofPM=SampleTotal	
			from	PMvalueofJ				
			where	ProjectID = @pid and fscode=@fscode	and	step=@step	and	Testobject=0
			if(@valueofPM=@nNum)
				return; 
			if(@valueofPM!=@nNum)begin
				--统计错报个数,合计样本数量,合计样本金额
				exec	dbo.GetErrorandStyleSmapleJe	@pid,null,@fscode,@step,@mStep,@smapleTotalsap	output,@stepSmapleJe	output
				update	PMvalueofJ	set	[Samplesize]=@nNum-@smapleTotalsap,		
						SampleTotal= 	@nNum
						--,[valueofJ]=(@uncheck-@stepSmapleJe)/(@nNum-@smapleTotalsap)
						--,							memo='样本间距发生变化，请重新统计抽样'
				where	ProjectID = @pid and fscode=@fscode	and	step=@step	and	Testobject=0
			end
		end	else	if(@step<@nStep)begin
			--如果表25步骤小于公共表步骤，就加1
			exec	dbo.GetErrorNumber	@pid,0,0,@fscode,@step,@error	output	
			if(@error<@step)
				return;
			if(@error=@step)
				set	@step=@step+1
			else	if(@error>@step	and
					(@error+1)>=@nStep)
					set	@step=@nStep
			else	if(@error>@step	and
					(@error+1)<=@nStep)
					set	@step=@error+1
			
			--统计错报个数,合计样本数量,合计样本金额
			exec	dbo.GetErrorandStyleSmapleJe	@pid,null,@fscode,@step,@mStep,@smapleTotalsap	output,@stepSmapleJe	output
			--计算样本数量
			if(@step<@nStep)begin
				select	@currentSamplesize=(Samplemax-@smapleTotalsap)	from	NeweasV5.dbo.SuccessiveSamplingMethod	where	step=@step
			end	else	if(@step=@nStep)begin
				set	@currentSamplesize=@sNum-@smapleTotalsap
			end
			--计算当前样本间距
			set	@valueofJ=(@uncheck-@stepSmapleJe)/@currentSamplesize

			--insert	PMvalueofJ(ProjectID ,ID,[Fscode],[step],[valueofJ],[Samplesize],[Testobject],Overallsample,SampleTotal)
			--		select	@pid ,'',@fscode,@step,0,abs(@currentSamplesize),0,0,@nNum
			--连续抽样，获取配置表中当前步骤的抽样数与连续抽样剩余待抽样数对比，取最小值，作为本步骤的抽样数
			if(@step > 1)
			begin
			declare @samplecount1 int,@samplecount2 int
			select		@samplecount1=  Samplemax - Samplemin from	NeweasV5.dbo.SuccessiveSamplingMethod	where step = @step
			select @samplecount2 =SampleTotal - sum(Samplesize)  from PMvalueofJ  where ProjectID =@pid  and Fscode = @fscode and Testobject = 0   group by SampleTotal
			if (@samplecount1>=@samplecount2)
				begin
					insert	PMvalueofJ(ProjectID ,ID,[Fscode],[step],[valueofJ],[Samplesize],[Testobject],Overallsample,SampleTotal)
					select	@pid ,'',@fscode,@step,@j,@samplecount2,0,0,@nNum
				end
			else	
				begin
					insert	PMvalueofJ(ProjectID ,ID,[Fscode],[step],[valueofJ],[Samplesize],[Testobject],Overallsample,SampleTotal)
					select	@pid ,'',@fscode,@step,@j,@samplecount1,0,0,@nNum
				end
			end
		end
	end




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'InitPMBD')
   BEGIN
       DROP  Procedure  InitPMBD
	END
GO


/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -Module xxx50 b.df样本间距，数量计算
  Created   : 20120917 by dengll
  Updated	: 20121118 by dengll
  Version   : 1.0.1
********************************************************************************/
create Procedure [dbo].[InitPMBD]
@pid	varchar(100),
@fscode	varchar(100),
@j	decimal(20,2)
AS

    declare	    @uncheck	decimal(20,2),@sNum	int,@jj	decimal(20,2),
				@step	int,@error	int,@smapleTotalsap	int,@nStep	int,
				@currentSamplesize	int,@stepSmapleJe	decimal(20,2),@valueofJ	decimal(20,2),
				@valueofPM	int,@nNum	int,@Ques	varchar(10),@Overallsample decimal(20,2),@memo varchar(500)
	--获取fscode文档用的是那个测试程序
	declare	@t	table(id	int,accountcode	varchar(100),Quesid	varchar(10),QuesDescription	varchar(500),QuesAnswer	varchar(10))
	insert	@t
	exec	dbo.SelectSampleSelectedQues	@pid,@fscode,'Q001'
	select	@Ques=QuesAnswer	from	@t				
			
	set	@jj=convert(nvarchar,@j)			
	

	select	@uncheck=dfje	from	TBFS	where	ProjectID = @pid and fscode=@fscode
	if(@uncheck=0)
		return;
	set	@nNum=DBO.GetStylebookScopeNumber(@uncheck,@jj)
	declare	@samplemax	int
	select	@samplemax=samplemax	from	NeweasV5.dbo.SuccessiveSamplingMethod	where	step=1
	if(@nNum<=@samplemax)begin
	 --删除原来分步抽样的样本
	delete	PMvalueofJ	where	ProjectID = @pid and fscode=@fscode	and	step>0	and	Testobject=2
			update	TBVoucher	set	SampleSelectedYesNo=0, StepofSample=0	
			where	ProjectID = @pid and stepofsample>0 and dfje!=0	and		accountcode IN 
						(SELECT [AccountCode] FROM	TBDetail WHERE ProjectID = @pid and [FSCode]=@fscode and IsAux = 0 and SourceFSCode = '')
			
		if not exists(select	1	from	PMvalueofJ	where	ProjectID = @pid and fscode=@fscode	and	step=0	and	Testobject=2)begin
			--insert	PMvalueofJ(ProjectID,ID,[Fscode],[step],[valueofJ],[Samplesize],SampleTotal,[Testobject],Overallsample)
			--select	@pid,'',@fscode,0,@jj,@nNum,@nNum,2,@uncheck
			insert	PMvalueofJ(ProjectID,ID,[Fscode],[step],[valueofJ],[Samplesize],SampleTotal,[Testobject],Overallsample)
			select	@pid,'',@fscode,0,@j,@nNum,@nNum,2,0
			return;
		end		

		select	@sNum=SampleTotal	,@Overallsample = Overallsample,@memo	= isnull(memo,'')
		from	PMvalueofJ			
		where	ProjectID = @pid and step=0	and	fscode=@fscode	and	Testobject=2

		--比较样本总体
		--if(@uncheck != @Overallsample and @memo = '')
		--begin 
		--	update PMvalueofJ set memo ='样本总体发生变化，请重新统计抽样'
		--	where	ProjectID = @pid and step=0	and	fscode=@fscode	and	Testobject=2
		--end 

		--比较对以有的样本量
		if(@sNum=@nNum)
			return;
		if(@sNum!=@nNum)begin
			update	PMvalueofJ	set	[Samplesize]=@nNum,SampleTotal=@nNum
			--,[valueofJ]=@jj,memo='样本间距发生变化，请重新统计抽样'
				where	ProjectID = @pid and fscode=@fscode	and	step=0	and	Testobject=2
			
		end
		return;
	end	else	if(@nNum>@samplemax)begin
	 --删除原来固定样本规模抽样的样本
	delete	PMvalueofJ		where	ProjectID = @pid and fscode=@fscode	and	step=0	and	Testobject=2
	update	TBVoucher	set	SampleSelectedYesNo=0, StepofSample=0	
	where	ProjectID = @pid and stepofsample=0  and dfje!=0	and		accountcode IN 
						(SELECT [AccountCode] FROM	TBDetail WHERE ProjectID = @pid and [FSCode]=@fscode and IsAux = 0 and SourceFSCode = '')

		if not exists(select	1	from	PMvalueofJ	where	ProjectID = @pid and fscode=@fscode	and	step=1	and	Testobject=2)begin
				--insert	PMvalueofJ(ProjectID,ID, [Fscode],[step],[valueofJ],[Samplesize],SampleTotal,[Testobject],Overallsample)
				--select	@pid,'',@fscode,1,@uncheck/@samplemax,@samplemax,@nNum,2,@uncheck
				insert	PMvalueofJ(ProjectID,ID, [Fscode],[step],[valueofJ],[Samplesize],SampleTotal,[Testobject],Overallsample)
				select	@pid,'',@fscode,1,@j,@samplemax,@nNum,2,0
				return;
		end	
		
		--比较对以有的样本量
		
		select	@sNum=SampleTotal		,@Overallsample = Overallsample,@memo	= isnull(memo,'')
			from	PMvalueofJ			
			where	ProjectID = @pid and fscode=@fscode	and	step=1	and	Testobject=2

		--比较样本总体
		--if(@uncheck != @Overallsample and @memo = '')
		--begin 
		--	update PMvalueofJ set memo ='样本总体发生变化，请重新统计抽样'
		--	where	ProjectID = @pid and step=1 and	fscode=@fscode	and	Testobject=2
		--end 

		if(@sNum!=@nNum)begin
			update	PMvalueofJ	set	[Samplesize]=@samplemax,SampleTotal= @nNum
			--,[valueofJ]=@uncheck/@samplemax,memo='样本间距发生变化，请重新统计抽样'
				where	ProjectID = @pid and fscode=@fscode	and	step=1	and	Testobject=2
		end
		
		--根据样本量算出来，获取所需要的步骤
		
		select	@nStep=step	from	NeweasV5.dbo.SuccessiveSamplingMethod	where	@sNum>Samplemin and @sNum<=Samplemax		
		delete	PMvalueofJ		where	ProjectID = @pid and  fscode=@fscode	and	step>@nStep	and	Testobject=2
		update	TBVoucher	set	SampleSelectedYesNo=0, StepofSample=0
			where	ProjectID = @pid and  stepofsample>@nStep and  dfje!=0 
					and	accountcode IN 	(SELECT [AccountCode] FROM	TBDetail WHERE ProjectID = @pid and  [FSCode]=@fscode and IsAux = 0 and SourceFSCode = '')
	
		
		--获取25表最大的步骤数
		select	@step=max(step)	from	PMvalueofJ	where	ProjectID = @pid and fscode=@fscode	and	Testobject=2
		declare	@mStep	int
		set	@mStep=@step

		if(@step=@nStep)begin	

			select	@valueofPM=SampleTotal	
			from	PMvalueofJ			
			where	ProjectID = @pid and fscode=@fscode	and	step=@step	and	Testobject=2

			if(@valueofPM=@nNum)
				return;
			if(@valueofPM!=@nNum)begin
				--统计错报个数,合计样本数量,合计样本金额
				exec	dbo.GetErrorandStyleSmapleJe	@pid,'dfje',@fscode,@step,@mStep,@smapleTotalsap	output,@stepSmapleJe	output
				update	PMvalueofJ	set	[Samplesize]=@nNum-@smapleTotalsap,	
						SampleTotal = 	@nNum		
						--,[valueofJ]=(@uncheck-@stepSmapleJe)/(@nNum-@smapleTotalsap)
						--,							memo='样本间距发生变化，请重新统计抽样'
				where	ProjectID = @pid and fscode=@fscode	and	step=@step
			end
		end	else	if(@step<@nStep)begin
			--如果表25步骤小于公共表步骤，就加1
			--统计错报个数,合计样本数量,合计样本金额
			exec	dbo.GetErrorNumber	@pid,1,-1,@fscode,@step,@error	output
			if(@error<@step)
				return;
				
			if(@error=@step)
				set	@step=@step+1
			else	if(@error>@step	and
					(@error+1)>=@nStep)
					set	@step=@nStep
			else	if(@error>@step	and
					(@error+1)<=@nStep)
					set	@step=@error+1
			--统计错报个数,合计样本数量,合计样本金额
			exec	dbo.GetErrorandStyleSmapleJe	@pid,'dfje',@fscode,@step,@mStep,@smapleTotalsap	output,@stepSmapleJe	output
			--计算样本数量
			if(@step<@nStep)begin
				select	@currentSamplesize=(Samplemax-@smapleTotalsap)	from	NeweasV5.dbo.SuccessiveSamplingMethod	where	step=@step
			end	else	if(@step=@nStep)begin
				set	@currentSamplesize=@sNum-@smapleTotalsap
			end

			--计算当前样本间距
			set	@valueofJ=(@uncheck-@stepSmapleJe)/@currentSamplesize
			
			--insert	PMvalueofJ(ProjectID, ID,[Fscode],[step],[valueofJ],[Samplesize],[Testobject],Overallsample,SampleTotal)
			--		select	@pid,'',@fscode,@step,@valueofJ,@currentSamplesize,2,0,	@nNum

					--insert	PMvalueofJ(ProjectID, ID,[Fscode],[step],[valueofJ],[Samplesize],[Testobject],Overallsample,SampleTotal)
					--select	@pid,'',@fscode,@step,0,abs(@currentSamplesize),2,0,	@nNum
			--连续抽样，获取配置表中当前步骤的抽样数与连续抽样剩余待抽样数对比，取最小值，作为本步骤的抽样数
			if(@step > 1)
			begin
			declare @samplecount1 int,@samplecount2 int
			select		@samplecount1=  Samplemax - Samplemin from	NeweasV5.dbo.SuccessiveSamplingMethod	where step = @step
			select @samplecount2 =SampleTotal - sum(Samplesize)  from PMvalueofJ  where ProjectID =@pid  and Fscode = @fscode and Testobject = 2   group by SampleTotal
			if (@samplecount1>=@samplecount2)
				begin
					insert	PMvalueofJ(ProjectID ,ID,[Fscode],[step],[valueofJ],[Samplesize],[Testobject],Overallsample,SampleTotal)
					select	@pid ,'',@fscode,@step,@j,@samplecount2,2,0,@nNum
				end
			else	
				begin
					insert	PMvalueofJ(ProjectID ,ID,[Fscode],[step],[valueofJ],[Samplesize],[Testobject],Overallsample,SampleTotal)
					select	@pid ,'',@fscode,@step,@j,@samplecount1,2,0,@nNum
				end
			end
		end
		end





GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'InitPMBJ')
   BEGIN
       DROP  Procedure  InitPMBJ
	END
GO

/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -Module xxx50 b.jf样本间距，数量计算
  Created   : 20120917 by dengll
  Updated	: 20121118 by dengll
  Version   : 1.0.1
********************************************************************************/
--drop Procedure [dbo].[InitPMBJ]
create Procedure [dbo].[InitPMBJ]
@pid	varchar(100),
@fscode	varchar(100),
@j	decimal(20,2)
AS

	declare	@uncheck	decimal(20,2),@sNum	int,@jj	decimal(20,2),@step	int,
			@error	int,@smapleTotalsap	int,@nStep	int,@currentSamplesize	int,
			@stepSmapleJe	decimal(20,2),@valueofJ	decimal(20,2),@valueofPM	int,
			@nNum	int,@Ques	varchar(10),@Overallsample decimal(20,2),@memo varchar(500)
	--获取fscode文档用的是那个测试程序
	declare	@t	table(id	int,accountcode	varchar(100),Quesid	varchar(10),QuesDescription	varchar(500),QuesAnswer	varchar(10))
	insert	@t
	exec	dbo.SelectSampleSelectedQues	@pid,@fscode,'Q001'
	select	@Ques=QuesAnswer	from	@t	
	
	set	@jj=convert(nvarchar,@j)		

	select	@uncheck=jfje	from	TBFS	where	ProjectID = @pid and fscode=@fscode
	if(@uncheck=0)
		return;
	declare	@samplemax	int
	select	@samplemax=samplemax	from	NeweasV5.dbo.SuccessiveSamplingMethod	where	step=1
	set	@nNum=DBO.GetStylebookScopeNumber(@uncheck,@jj)
	if(@nNum<=@samplemax)begin
	 --删除原来分步抽样的样本
	delete	PMvalueofJ	where	ProjectID = @pid and fscode=@fscode	and	step>0	and	Testobject=1
			update	TBVoucher	set	SampleSelectedYesNo=0, StepofSample=0	
			where	ProjectID = @pid and stepofsample>0 and  jfje!=0 and		accountcode IN 
						(SELECT [AccountCode] FROM	TBDetail WHERE ProjectID = @pid and [FSCode]=@fscode and IsAux = 0 and SourceFSCode = '')

		if not exists(select	1	from	PMvalueofJ	where	ProjectID = @pid and fscode=@fscode	and	step=0	and	Testobject=1)begin
			--insert	PMvalueofJ(ProjectID,ID, [Fscode],[step],[valueofJ],[Samplesize],SampleTotal,[Testobject],Overallsample)
			--select	@pid,'',@fscode,0,@jj,@nNum,@nNum,1,@uncheck
			insert	PMvalueofJ(ProjectID,ID, [Fscode],[step],[valueofJ],[Samplesize],SampleTotal,[Testobject],Overallsample)
			select	@pid,'',@fscode,0,@j,@nNum,@nNum,1,0
			return;
		end
		
		select	@sNum=SampleTotal,@Overallsample = Overallsample,@memo	= isnull(memo,'')
		from	PMvalueofJ			
		where	ProjectID = @pid and step=0	and	fscode=@fscode	and	Testobject=1

		--比较样本总体
		--if(@uncheck != @Overallsample and @memo = '')
		--begin 
		--	update PMvalueofJ set memo ='样本总体发生变化，请重新统计抽样'
		--	where	ProjectID = @pid and step=0	and	fscode=@fscode	and	Testobject=1
		--end

		--比较对以有的样本量
		if(@sNum=@nNum)
			return;
		if(@sNum!=@nNum)begin
			update	PMvalueofJ	set	[Samplesize]=@nNum,SampleTotal=@nNum
			--,[valueofJ]=@jj,memo='样本间距发生变化，请重新统计抽样'
				where	ProjectID = @pid and fscode=@fscode	and	step=0	and	Testobject=1
			
		end
		return;
	end	else	if(@nNum>@samplemax)begin
	--删除原来固定样本规模抽样的样本
	delete	PMvalueofJ		where	ProjectID = @pid and  fscode=@fscode	and	step=0	and	Testobject=1
		update	TBVoucher	set	SampleSelectedYesNo=0, StepofSample=0	
		where	ProjectID = @pid and  stepofsample=0 and  jfje!=0 	and		accountcode IN 
						(SELECT [AccountCode] FROM	TBDetail WHERE ProjectID = @pid and  [FSCode]=@fscode and IsAux = 0 and SourceFSCode = '')
		if not exists(select	1	from	PMvalueofJ	where	ProjectID = @pid and fscode=@fscode	and	step=1	and	Testobject=1)begin
				--insert	PMvalueofJ(ProjectID, ID,[Fscode],[step],[valueofJ],[Samplesize],SampleTotal,[Testobject],Overallsample)
				--select	@pid,'',@fscode,1,@uncheck/@samplemax,@samplemax,@nNum,1,@uncheck
				insert	PMvalueofJ(ProjectID, ID,[Fscode],[step],[valueofJ],[Samplesize],SampleTotal,[Testobject],Overallsample)
				select	@pid,'',@fscode,1,@j,@samplemax,@nNum,1,0
				return;
		end	
		
		--比较对以有的样本量
		
		select	@sNum=SampleTotal,@Overallsample = Overallsample,@memo	= isnull(memo,'')
		from	PMvalueofJ			
		where	ProjectID = @pid and step=1	and	fscode=@fscode	and	Testobject=1

		--比较样本总体
		--if(@uncheck != @Overallsample and @memo = '')
		--begin 
		--	update PMvalueofJ set memo ='样本总体发生变化，请重新统计抽样'
		--	where	ProjectID = @pid and step=1 and	fscode=@fscode	and	Testobject=1
		--end 


		if(@sNum!=@nNum)begin
			update	PMvalueofJ	set	[Samplesize]=@samplemax,SampleTotal=@nNum
			--,[valueofJ]=@uncheck/@samplemax,memo='样本间距发生变化，请重新统计抽样'
				where	ProjectID = @pid and  fscode=@fscode	and	step=1	and	Testobject=1
		end
		
		--根据样本量算出来，获取所需要的步骤
		select	@nStep=step	from	NeweasV5.dbo.SuccessiveSamplingMethod	where	@sNum>Samplemin and @sNum<=Samplemax
		delete	PMvalueofJ		where	ProjectID = @pid and  fscode=@fscode	and	step>@nStep	and	Testobject=1
		update	TBVoucher	set	SampleSelectedYesNo=0, StepofSample=0
			where	ProjectID = @pid and  stepofsample>@nStep and  jfje!=0 
					and	accountcode IN 	(SELECT [AccountCode] FROM	TBDetail WHERE ProjectID = @pid and  [FSCode]=@fscode and IsAux = 0 and SourceFSCode = '')
		
		--获取25表最大的步骤数
		select	@step=max(step)	from	PMvalueofJ	where	ProjectID = @pid and  fscode=@fscode	and	Testobject=1
		declare	@mStep	int
		set	@mStep=@step

		if(@step=@nStep)begin
			
		select	@valueofPM=SampleTotal	
		from	PMvalueofJ			
		where	ProjectID = @pid and step=@step	and	fscode=@fscode	and	Testobject=1

			if(@valueofPM=@nNum)
				return;
			if(@valueofPM!=@nNum)begin
				--统计错报个数,合计样本数量,合计样本金额
				exec	dbo.GetErrorandStyleSmapleJe	@pid,'jfje',@fscode,@step,@mStep,@smapleTotalsap	output,@stepSmapleJe	output		
				
				update	PMvalueofJ	set	[Samplesize]=@nNum-@smapleTotalsap,		
						SampleTotal=@nNum			
						--,[valueofJ]=(@uncheck-@stepSmapleJe)/(@nNum-@smapleTotalsap)
						--,							memo='样本间距发生变化，请重新统计抽样'
				where	ProjectID = @pid and fscode=@fscode	and	step=@step
			end
		end	else	if(@step<@nStep)begin
			--如果表25步骤小于公共表步骤，就加1		
			exec	dbo.GetErrorNumber	@pid,1,1,@fscode,@step,@error	output	
			if(@error<@step)
				return;
				
			if(@error=@step)
				set	@step=@step+1
			else	if(@error>@step	and
					(@error+1)>=@nStep)
					set	@step=@nStep
			else	if(@error>@step	and
					(@error+1)<=@nStep)
					set	@step=@error+1
			--统计错报个数,合计样本数量,合计样本金额
			exec	dbo.GetErrorandStyleSmapleJe	@pid,'jfje',@fscode,@step,@mStep,@smapleTotalsap	output,@stepSmapleJe	output	
			--计算样本数量
			if(@step<@nStep)begin
				select	@currentSamplesize=(Samplemax-@smapleTotalsap)	from	NeweasV5.dbo.SuccessiveSamplingMethod	where	step=@step
			end	else	if(@step=@nStep)begin
				set	@currentSamplesize=@sNum-@smapleTotalsap
			end
			--计算当前样本间距
			set	@valueofJ=(@uncheck-@stepSmapleJe)/@currentSamplesize
			
			--insert	PMvalueofJ(ProjectID,ID,[Fscode],[step],[valueofJ],[Samplesize],[Testobject],Overallsample,SampleTotal)
			--		select	@pid,'',@fscode,@step,@valueofJ,@currentSamplesize,1,0,@nNum
			--insert	PMvalueofJ(ProjectID,ID,[Fscode],[step],[valueofJ],[Samplesize],[Testobject],Overallsample,SampleTotal)
			--		select	@pid,'',@fscode,@step,0,abs(@currentSamplesize),1,0,@nNum
			--连续抽样，获取配置表中当前步骤的抽样数与连续抽样剩余待抽样数对比，取最小值，作为本步骤的抽样数
			if(@step > 1)
			begin
			declare @samplecount1 int,@samplecount2 int
			select		@samplecount1=  Samplemax - Samplemin from	NeweasV5.dbo.SuccessiveSamplingMethod	where step = @step
			select @samplecount2 =SampleTotal - sum(Samplesize)  from PMvalueofJ  where ProjectID =@pid  and Fscode = @fscode and Testobject = 1   group by SampleTotal
			if (@samplecount1>=@samplecount2)
				begin
					insert	PMvalueofJ(ProjectID ,ID,[Fscode],[step],[valueofJ],[Samplesize],[Testobject],Overallsample,SampleTotal)
					select	@pid ,'',@fscode,@step,@j,@samplecount2,1,0,@nNum
				end
			else	
				begin
					insert	PMvalueofJ(ProjectID ,ID,[Fscode],[step],[valueofJ],[Samplesize],[Testobject],Overallsample,SampleTotal)
					select	@pid ,'',@fscode,@step,@j,@samplecount1,1,0,@nNum
				end
			end
		end
		end





GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'InitTbAccTable')
   BEGIN
       DROP  Procedure  InitTbAccTable
	END
GO
 /********************************************************************************
  Database  : EAS
  Copyright : 2010 Huapu (Beijing)
  Customer  : Huapu Chinese,bj
  Project   : EAS -创建检验数据第一步的存储过程
********************************************************************************/
CREATE Procedure [dbo].InitTbAccTable
	@ProjectID nvarchar(50)
AS

begin try	
--BEGIN	TransAction
SET NOCOUNT ON
SET XACT_ABORT ON
SET ROWCOUNT 1000;
    WHILE 1 = 1
    BEGIN
		delete	dbo.TBDetail	where	projectid=@ProjectID
    IF @@ROWCOUNT = 0
    BREAK;
    END
SET ROWCOUNT 0;

--导入302数据

declare @tempTable1 table 
(
	id int identity(1,1),
    AccountCode  varchar(255) collate Chinese_PRC_CS_AS_KS_WS,
    AccountName varchar(255),
    Fs  varchar(255),
    FsCode varchar(255) collate Chinese_PRC_CS_AS_KS_WS,
    Yefx int,
    Kmsx int
)

--向临时表中插入数据
insert into @tempTable1
select distinct C.Accountcode,C.AccountName,G.FsName,G.FsCode,G.Yefx,G.kmsx from dbo.TBFS G with(nolock)
inner join dbo.account C with(nolock) on (C.AccountName = G.FsName) --此处不能使用like语法及实际业务冲突
where (C.Jb=1) and G.ismx=1	and	g.projectid=@ProjectID and c.ProjectID=@ProjectID

insert into @tempTable1
select distinct C.AccountCode,C.AccountName,F.Fs,G.FsCode,G.Yefx,G.Kmsx
From dbo.account C with(nolock),
	neweasv5.dbo.EASKmdzb F with(nolock) ,
	dbo.TBFS G with(nolock)
where   	g.projectid=@ProjectID and c.ProjectID=@ProjectID	and (C.AccountName = F.Note)--此处不能使用like语法及实际业务冲突
 and (F.Fs=G.FsName) and (C.jb=1) and G.ismx=1
 and C.AccountName not in (select AccountName from @tempTable1) --以避免与第一段insert into @tempTable1插入数据重复

 select distinct NEWID() IID ,@ProjectID AS projectid,a.AccountCode,space(0) AS AuxiliaryCode,space(0) AS SourceFSCode,
 a.AccountName as AccAuxName,a.jb as TBType,0 AS IsMx,isnull(a.UpperCode,isnull(b.fscode,space(0))) TBGrouping,a.Ncye AS Sqqmye,
isnull(b.FsCode,space(0))fscode,isnull(b.yefx,1)yefx,isnull(b.kmsx,0)kmsx,0 AS isAux,a.ismx AS isAccMx,0 AS DataType
into #p1
from dbo.Account	a with(nolock)
left	join	@tempTable1	b
on left(a.accountcode,len(b.accountcode)) collate Chinese_PRC_CS_AS_KS_WS=b.AccountCode collate Chinese_PRC_CS_AS_KS_WS
where  a.ProjectID=@ProjectID

alter table #p1 add ID int IDENTITY(1,1)

declare @leve int=1000
declare @ix int=1
declare @ixend int=@leve 

while (1=1)begin
		insert into dbo.TBDetail (ID,projectid,AccountCode,AuxiliaryCode,SourceFSCode,AccAuxName,TBType,IsMx,TBGrouping,Sqqmye,
		fscode,yefx,kmsx,isAux,isAccMx,DataType)

		select IID,projectid,AccountCode,AuxiliaryCode,SourceFSCode,AccAuxName,TBType,IsMx,TBGrouping,Sqqmye,
			fscode,yefx,kmsx,isAux,isAccMx,DataType
				from #p1
					where id BETWEEN @ix	and @ixend
	
	if @@ROWCOUNT=0
		break;
	set @ix+=@leve 
	set	@ixend+=@leve 
end

--todo:update ext
exec dbo.ByContinueDateUpdateTBAcc	@ProjectID

--Commit TransAction
END TRY
BEGIN CATCH
	--ROLLBACK TransAction
	EXEC DBO.[PRO_THROW] @ProjectID,'InitTbAccTable'
END CATCH


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'InitTbAuxTable')
   BEGIN
       DROP  Procedure  InitTbAuxTable
	END
GO
 /********************************************************************************
  Database  : EAS
  Copyright : 2010 Huapu (Beijing)
  Customer  : Huapu Chinese,bj
  Project   : EAS -创建检验数据第一步的存储过程
********************************************************************************/
CREATE Procedure [dbo].InitTbAuxTable
	@ProjectID nvarchar(50),
	@accountCode	varchar(100)=null
AS

begin try	
--BEGIN	TransAction
SET NOCOUNT ON
SET XACT_ABORT ON

create table #voucher(accountcode varchar(100)	collate Chinese_PRC_CS_AS_KS_WS,
	FDetailID int,fllx int,jfje decimal(20,2),dfje decimal(20,2),syjz int)

create table #tbvouchersum (AccountCode varchar(100) collate Chinese_PRC_CS_AS_KS_WS,
	FDetailID int,jfje decimal(20,2),dfje decimal(20,2))

create table #accounting(AccountCode varchar(100) collate Chinese_PRC_CS_AS_KS_WS,syjz int )

if(dbo.ISNullEmpty(@accountCode,'')!='')
insert #accounting
select accountcode,syjz from dbo.Account  with(nolock) where (projectid=@ProjectID and accountcode like @accountCode+'%')
else 
insert #accounting
select accountcode,syjz from dbo.Account  with(nolock) where (projectid=@ProjectID)

declare	@year	int,@currentyearpid varchar(100),@PeriodEndDate datetime,@clientid varchar(100)
select @year=year(PeriodEndDate),@PeriodEndDate=PeriodEndDate,
	@currentyearpid=currentyearpid,@clientid=clientid
			from neweasv5.dbo.projectsinfo  with(nolock) where projectid=@ProjectID

insert #voucher
select v.accountcode,v.FDetailID ,v.fllx,v.jfje,v.dfje,a.syjz from dbo.tbvoucher v  with(nolock) 
	inner join #accounting	a
	on v.accountcode=a.accountcode
	where v.date<=@PeriodEndDate	and year(v.date)=@year	and v.clientid=@clientid

--添加索引
create index ix_apcode_voucher on #voucher (accountcode,FDetailID)

insert #tbvouchersum
select	distinct	vo.AccountCode,vo.FDetailID,sum(vo.jfje)jfje,sum(vo.dfje)dfje
	from #voucher	vo where	vo.fllx=1 and vo.syjz=1
	group by vo.AccountCode,vo.FDetailID
union all
select	distinct	vo.AccountCode,vo.FDetailID,sum(vo.jfje)jfje,sum(vo.dfje)dfje
	from #voucher		vo
	WHERE	(vo.FLLX=1 OR vo.FLLX=2)
			and (vo.syjz!=1 or ACCOUNTCODE COLLATE Chinese_PRC_CS_AS_KS_WS in(select accountcode from dbo.Account with(nolock) where projectid=@ProjectID))
	group by vo.AccountCode,vo.FDetailID

select af.accountcode,af.AuxiliaryCode,sum(v.jfje)jfje,sum(v.dfje)dfje
	into	#p0	
	from	dbo.AuxiliaryFDetail af with(nolock) 
		inner join #tbvouchersum v
		on V.AccountCode=AF.accountcode	AND AF.FDetailID=V.FDetailID	AND AF.DATATYPE=0
		WHERE af.projectid=@ProjectID
		group by af.accountcode,af.AuxiliaryCode

select ROW_NUMBER() OVER (ORDER BY accountcode) AS ID, accountcode,AuxiliaryCode,jfje,dfje into	#p1	from #p0

select ROW_NUMBER() OVER (ORDER BY accountcode) AS ID,accountcode,fscode,kmsx,yefx
							into #p2
							from	dbo.TbDetail with(nolock) 
									where	auxiliarycode='' and	datatype=0 and	isaux=0	and projectid=@ProjectID

;MERGE DBO.TBAux AS AUX
USING 	#p1 AS DET
ON AUX.ACCOUNTCODE COLLATE Chinese_PRC_CS_AS_KS_WS=DET.ACCOUNTCODE	COLLATE Chinese_PRC_CS_AS_KS_WS
	AND aux.AuxiliaryCode COLLATE Chinese_PRC_CS_AS_KS_WS=det.AuxiliaryCode COLLATE Chinese_PRC_CS_AS_KS_WS
WHEN MATCHED AND AUX.PROJECTID=@projectid
THEN UPDATE SET aux.jfje=isnull(det.jfje,0),aux.dfje=isnull(det.dfje,0);

MERGE DBO.TBAux AS AUX
USING 	#p2 AS DET
ON AUX.ACCOUNTCODE COLLATE Chinese_PRC_CS_AS_KS_WS=DET.ACCOUNTCODE	COLLATE Chinese_PRC_CS_AS_KS_WS
WHEN MATCHED AND AUX.PROJECTID=@projectid
THEN UPDATE SET aux.fscode=det.fscode,aux.KMSX=det.kmsx,aux.yefx=det.yefx;

DROP TABLE #accounting
DROP TABLE #p2
DROP TABLE #p1
DROP TABLE #p0
DROP TABLE #voucher
DROP TABLE #tbvouchersum

end try
begin catch
	--ROLLBACK TransAction
	EXEC DBO.[PRO_THROW] @ProjectID,'InitTbAuxTable'
end catch

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'InitVoucherProjectCode')
   BEGIN
       DROP  Procedure  InitVoucherProjectCode
	END
GO
 /********************************************************************************  
  Database  : EAS  
  Copyright : 2010 Huapu (Beijing)  
  Customer  : Huapu Chinese,bj  
  Project   : EAS -update voucher.projectcode  
********************************************************************************/  
CREATE Procedure [dbo].InitVoucherProjectCode  
 @ProjectID nvarchar(50),  
 @accountCode varchar(100)=null  
AS  
  
BEGIN TRY   
SET NOCOUNT ON  
--BEGIN TransAction  
SET XACT_ABORT ON  
  
exec dbo.UpdateVoucherProjectCode @ProjectID,'',0  
exec dbo.UpdateVoucherProjectCode @ProjectID,'',-1  
exec dbo.UpdateVoucherProjectCode @ProjectID,'',1  
  
end try  
begin catch  
 --ROLLBACK TransAction  
 EXEC DBO.[PRO_THROW] @ProjectID,'InitVoucherProjectCode'  
end catch  

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'LogWrongInfo')
   BEGIN
       DROP  Procedure  LogWrongInfo
	END
GO

CREATE PROC LogWrongInfo
	@pid	 VARCHAR(1000),

	--@ERROR_NUMBER	int,--返回错误号
	--@ERROR_SEVERITY	int,--返回严重性
	--@ERROR_STATE		int,--返回错误状态号
	@ERROR_PROCEDURE	VARCHAR(255)--返回出现错误的存储过程或 触发器的名称
	--@ERROR_LINE	int,--返回导致错误的例程中的行 号
	--@ERROR_MESSAGE	VARCHAR(1000)	--返回错误消息的完整文本
AS 
BEGIN
if (OBJECT_id('LogTable') is NULL)	
BEGIN	--create table logtable
	CREATE TABLE LogTable
	( 
	  ID              int identity(1,1),--错误序号
	  Projectid	VARCHAR(1000),
	  ErrorDateTime	DATETIME NOT NULL,
	  ErrorNumber     int,--错误号
	  ErrorSeverity   int,--严重性
	  ErrorState      int,--错误状态号
	  ErrorProducure  varchar(255),--出现错误的存储过程或 触发器的名称
	  ErrorLine       int,--导致错误的例程中的行号
	  ErrorMessage    varchar(1000)--错误消息的完整文本
)END

INSERT INTO LogTable values(@pid,GETDATE(),ERROR_NUMBER(),ERROR_SEVERITY(),ERROR_STATE(),@ERROR_PROCEDURE,ERROR_LINE(),ERROR_MESSAGE())

END

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'MakeDSIntercourse')
   BEGIN
       DROP  Procedure  MakeDSIntercourse
	END
GO

/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -从tb表更新往来函证数据
  Created   : Husheng PM 2017-09-06

  Updated	:	
  Version   : 1.0.1
********************************************************************************/
create Procedure [dbo].[MakeDSIntercourse]
@projectid	varchar(100)
AS
SET NOCOUNT	ON

Declare @TableWlhz table(ID varchar(50),FSCode varchar(50) collate Chinese_PRC_CS_AS_KS_WS,AccountCode varchar(100) collate Chinese_PRC_CS_AS_KS_WS
	,AuxiliaryCode varchar(100) collate Chinese_PRC_CS_AS_KS_WS,AccountName varchar(100))
INSERT @TableWlhz EXEC DBO.GetWlhzAndTB @projectid

--目前注释
--删除报表未审数为0的数据
 --delete s
 -- from @TableWlhz s
 -- join view_TBDetail t
 -- on s.id = t.id
 -- and t.unchecked = 0 
 -- and t.datatype = 0
 -- and (t.crjejf <> 0 or t.crjedf <> 0 ) 


----修改默认询证金额
--declare @FSCode varchar(50),@AccountCode varchar(100),@AuxiliaryCode varchar(100),@row_count int,@index int,@yefx int
--Declare @tempTableWlhz table(ID int identity,FSCode varchar(50) collate Chinese_PRC_CS_AS_KS_WS,AccountCode varchar(100) collate Chinese_PRC_CS_AS_KS_WS
--	,AuxiliaryCode varchar(100) collate Chinese_PRC_CS_AS_KS_WS)

--insert into @tempTableWlhz(fscode,AccountCode,AuxiliaryCode) select fscode,AccountCode,AuxiliaryCode from @TableWlhz 
--	where FSCode+AccountCode+AuxiliaryCode NOT IN (SELECT FSCode+AccountCode+AuxiliaryCode FROM DBO.WlhzandTB WHERE PROJECTID=@projectid)

--set @row_count=@@ROWCOUNT
--set @index=1
--while(@index<=@row_count) begin
--	select @FSCode=fscode,@AccountCode=AccountCode,@AuxiliaryCode=AuxiliaryCode from @tempTableWlhz where ID=@index	
--	UPDATE a set a.ConsultBalance=b.yefx*b.unchecked FROM DBO.TBDetailExtra a INNER JOIN view_TBDetail b
--		ON a.ID = b.ID   WHERE b.projectid=@projectid 
--	set @index=@index+1
--end

UPDATE a set a.ConsultBalance=b.yefx*b.unchecked FROM DBO.TBDetailExtra a INNER JOIN view_TBDetail b
		ON a.ID = b.ID   WHERE b.projectid=@projectid 

--添加新的询证对象
INSERT INTO DBO.TBWlhz (ProjectID,ID,AccountName,sample,Sendletter,HZNumber,HZSortID) 
	SELECT * ,'',0 FROM (SELECT @projectid as ProjectID,NEWID() as ID,AccountName,0 as sample,1 as Sendletter FROM @TableWlhz GROUP BY AccountName) T
		WHERE t.AccountName not in(select AccountName from dbo.TBWlhz where ProjectID=@projectid)

DELETE DBO.WlhzandTB WHERE PROJECTID=@projectid AND  ID collate Chinese_PRC_CS_AS_KS_WS NOT IN (SELECT ID FROM @TableWlhz)

INSERT DBO.WlhzandTB SELECT @projectid,ID,NEWID(),FSCode,AccountCode,AuxiliaryCode,AccountName,1 FROM @TableWlhz
	WHERE ID collate Chinese_PRC_CS_AS_KS_WS NOT IN (SELECT ID FROM DBO.WlhzandTB WHERE PROJECTID=@projectid)

UPDATE tb SET tb.WlhzID=wlhz.ID FROM DBO.WlhzandTB TB INNER JOIN DBO.TBWlhz wlhz 
	on tb.projectid=wlhz.projectid and tb.accountname=wlhz.accountname
	where tb.projectid=@projectid



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'PRO_THROW')
   BEGIN
       DROP  Procedure  PRO_THROW
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2010 Huapu (Beijing)
  Customer  : 
  Project   : EAS -异常处理
  Created   : 2011/05/24 by dengll,rshibin
  Version   : 1.0.8
********************************************************************************/

Create PROCEDURE dbo.PRO_THROW
		@projectid varchar(100),
		@ErrorProcedure1	varchar(100)=''
    AS  
BEGIN  
      
    SET NOCOUNT ON;  
        DECLARE   
        @ErrorMessage    NVARCHAR(4000),  
        @ErrorNumber     INT,  
        @ErrorSeverity   INT,  
        @ErrorState      INT,  
        @ErrorLine       INT,  
        @ErrorProcedure  NVARCHAR(200);  
        SELECT   
        @ErrorNumber = ERROR_NUMBER(),  
        @ErrorSeverity = ERROR_SEVERITY(),  
        @ErrorState = ERROR_STATE(),  
        @ErrorLine = ERROR_LINE(), 
        @ErrorProcedure = ISNULL(ISNULL(ERROR_PROCEDURE(), '-'),@ErrorProcedure1);  
        SELECT @ErrorMessage = N'Error %d, Level %d, State %d, Procedure %s, Line %d, ' + 'Message: '+ ERROR_MESSAGE();  
      
	  EXEC dbo.LogWrongInfo @projectid,@ErrorProcedure

    RAISERROR (  
        @ErrorMessage,   
        @ErrorSeverity,   
        1,                 
        @ErrorNumber,  
        @ErrorSeverity,  
        @ErrorState,  
        @ErrorProcedure,  
        @ErrorLine  
        );  
      
END  
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'ProcessAccountData')
   BEGIN
       DROP  Procedure  ProcessAccountData
	END
GO
/*
多核算类型处理 多多核算数据存在t_itemclass表
*/

CREATE  PROCEDURE dbo.ProcessAccountData
	@ProjectID	varchar(1000)
AS

BEGIN TRY	
--BEGIN	TransAction
SET NOCOUNT ON
SET XACT_ABORT ON

declare	@sql	nvarchar(max)
declare	@km	varchar(1000)=@ProjectID+'km'
declare	@kmye	varchar(1000)=@ProjectID+'kmye'
declare	@jzpz	varchar(1000)=@ProjectID+'jzpz'
declare	@voucher	varchar(1000)=@ProjectID+'voucher'
declare	@account	varchar(1000)=@ProjectID+'account'
declare @PROJECTYPE	varchar(1000)=@ProjectID+'PROJECTTYPE'
declare	@PROJECT	varchar(1000)=@ProjectID+'PROJECT'
declare	@WL	varchar(1000)=@ProjectID+'wl'
declare	@WLye	varchar(1000)=@ProjectID+'wlye'
declare	@xm	varchar(1000)=@ProjectID+'xm'
declare	@xmye	varchar(1000)=@ProjectID+'xmye'
declare	@bm	varchar(1000)=@ProjectID+'bm'
declare	@bmye	varchar(1000)=@ProjectID+'bmye'
declare	@t_itemclass	varchar(1000)=@ProjectID+'t_itemclass'
declare	@t_fzye	varchar(1000)=@ProjectID+'t_fzye'
declare	@t_itemdetail	varchar(1000)=@ProjectID+'t_itemdetail'
declare	@pzk	varchar(1000)=@ProjectID+'pzk'

IF OBJECT_ID('tempdb..#KMXMTYPE') IS NOT  NULL
	DROP TABLE	#KMXMTYPE
CREATE	TABLE	#KMXMTYPE(
	KMDM	VARCHAR(1000)	NOT NULL,
	XMDM VARCHAR(1000)	COLLATE Chinese_PRC_CS_AS_KS_WS	NULL,	
	TYPECODE	VARCHAR(1000)	COLLATE Chinese_PRC_CS_AS_KS_WS	NULL,
	[ProjectCode]	VARCHAR(1000),
	PI INT DEFAULT(0))
	--在插入下面数据之前需要先删除一下
SET @sql='
	delete	'+@account+'	
	'
EXEC(@sql)
--处理account,project表数据
SET	@sql='
INSERT	#KMXMTYPE(KMDM,XMDM,TYPECODE)
SELECT	DISTINCT	_xmye.KMDM,_xmye.XMDM,icl.FITEMID	FROM	
	'+@XMYE+'	_xmye
	JOIN '+@xm+' xm
	ON _xmye.Xmdm	COLLATE Chinese_PRC_CS_AS_KS_WS =xm.Xmdm	COLLATE Chinese_PRC_CS_AS_KS_WS 
	INNER JOIN '+@t_itemclass+'	icl
	ON LEFT(xm.Xmdm,LEN(icl.FItemId))=icl.FItemId


--begin 构造科目数据（account)
INSERT	'+@ACCOUNT+'(ACCOUNTCODE,ACCOUNTNAME,[IsMx],Jb,Hsxms,ncye,ncsl)--Attribute,
SELECT	Distinct	_km.KMDM,_km.KMMC,_km.kmmx,_km.kmjb,0,
isnull(_kmye.ncye,0),
isnull(_kmye.ncsl,0)
FROM '+@KM+'	_km	
left	join	'+@kmye+'	_kmye
on	_km.kmdm	COLLATE Chinese_PRC_CS_AS_KS_WS =_kmye.kmdm	COLLATE Chinese_PRC_CS_AS_KS_WS 
WHERE	ISNUMERIC(LEFT(LTRIM(RTRIM(_km.KMDM)),1))=1
;
DECLARE	@kmx	TABLE(kmdm VARCHAR(255)	 COLLATE Chinese_PRC_CS_AS_KS_WS NOT NULL,typecode VARCHAR(255)	COLLATE Chinese_PRC_CS_AS_KS_WS	NULL)
INSERT @kmx
SELECT	DISTINCT	KMDM,typecode	from	#kmxmtype   
;
SELECT distinct kmdm
    , [val] = stuff ((SELECT	'';''+b.typecode
                      FROM @kmx AS b
						where	b.kmdm=a.kmdm
                          FOR xml path ('''')
                          ), 1, 1, ''''
                          )
into	#a3
FROM @kmx AS a
GROUP BY kmdm

update	a set 
	a.typecode=#a3.[val]
	from	'+@account+'	a
	left	join	#a3
	on	a.accountcode=#a3.kmdm COLLATE Chinese_PRC_CS_AS_KS_WS 

drop table #a3

update	'+@account+' set hsxms=dbo.IndexSplterNumber(typecode,'';'')
update 	'+@account+'	set TypeCode=LTRIM(rtrim(TypeCode))
'
exec(@sql)

end try
begin catch
	--ROLLBACK TransAction
	EXEC DBO.[PRO_THROW] @ProjectID,'ProcessAccountData'
end catch

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'ProcessAuxiliaryDetailAndTbAuxData')
   BEGIN
       DROP  Procedure  ProcessAuxiliaryDetailAndTbAuxData
	END
GO
/********************************************************************************  
  Database  : EAS  
  Copyright : 2010 Huapu (Beijing)  
  Customer  :   
  Project   : EAS -处理本期/前期/期后数据到tbaux表  
  Version   : 1.0.0  
********************************************************************************/  
CREATE Procedure ProcessAuxiliaryDetailAndTbAuxData  
@ProjectID varchar(100),  
@dataType int=0 --0 本期，1前期,-1期后  
AS  
  
BEGIN TRY  
  
--BEGIN TransAction  
SET NOCOUNT ON  
SET XACT_ABORT ON  
  
declare @t_itemclass varchar(1000)=@ProjectID+'t_itemclass'  
declare @t_fzye varchar(1000)=@ProjectID+'t_fzye'  
declare @t_itemdetail varchar(1000)=@ProjectID+'t_itemdetail'  
declare @km varchar(1000)=@ProjectID+'km'  
declare @xm varchar(1000)=@ProjectID+'xm'  
declare @xmye varchar(1000)=@ProjectID+'xmye'  
  
DECLARE @ID INT,@COUNT INT,@T1 VARCHAR(255),@A VARCHAR(255),@sql nvarchar(max)  
  
DECLARE @FNAME VARCHAR(1000)=''  
  
IF OBJECT_ID('tempdb..#tmp') IS NOT NULL  
 DROP TABLE #tmp  
create table #tmp(fname varchar(1000))  
  
--把处理好的数据插入t_fzye  
declare @year varchar(4)  
select top 1 @year=kjdate from kjqj where ProjectID=@ProjectID  
  
--构造t_fzye表数据  
SET @sql='  
DECLARE @spl VARCHAR(10)='';''  
IF EXISTS(Select 1 from '+@t_itemclass+')BEGIN  
   
 DECLARE @fid varchar(100)  
 SELECT @fid=stuff ((SELECT '';''+CAST([FItemId] AS VARCHAR)  
   FROM '+@t_itemclass+'  
    FOR xml path ('''')), 1, 1,'''')  
 from '+@t_itemclass+'  
  
 ;WITH A1 AS(  
 SELECT ''ltrim(rtrim(ISNULL(F''+CAST(t.FItemClassID AS VARCHAR(100))+'',''+''space(0)''+'')))'' AS FT FROM '+@t_itemclass+' t  
 INNER JOIN DBO.fn_SplitTSQL(@fid,'';'') t1  
 ON  REPLACE(t.FItemId,'' '','''') COLLATE Chinese_PRC_CS_AS_KS_WS=REPLACE(t1.Code,'' '',''''))  
  
 insert #tmp  
 SELECT top 1 stuff ((SELECT ''+''+Ft  
   FROM A1  
    FOR xml path ('''')), 1, 1,'''')  
 FROM A1;  
  
END  
'  
  
exec(@sql)  
  
select @FNAME=isnull(fname,space(0)) from #tmp  
  
declare @sqlx nvarchar(max)  
declare @filder varchar(max)  
if(dbo.isnullempty(@FNAME,'')!='') begin  
  
set @sql='  
 declare @kjdate varchar(10);  
 select top 1 @kjdate=kjdate from dbo.kjqj where ProjectID='''+@ProjectID+'''  
  
 DECLARE @spl VARCHAR(10)='';''  
 IF EXISTS(Select 1 from '+@t_fzye+')begin  
  CREATE TABLE #itemdetailtable(kmdm varchar(1000) COLLATE Chinese_PRC_CS_AS_KS_WS NOT NULL,FDetailID int,  
   ProjectCode varchar(1000) COLLATE Chinese_PRC_CS_AS_KS_WS NULL)  
      
  declare @tt table(f varchar(1000));   
    
  insert @tt   
  select Code from  dbo.fn_SplitTSQL('''+@FNAME+''',''+'')  
    
  while exists(select 1 from @tt )begin  
   declare @xcode varchar(100)  
   select @xcode =f from @tt  
   declare @x1 nvarchar(max)=''  
   insert #itemdetailtable  
   SELECT ltrim(rtrim(a.kmdm)),idet.FDetailID,''+@xcode+''  
      FROM '+@t_itemdetail+' idet  
      join '+@t_fzye+' a  
      on a.FDetailID=idet.FDetailID  
      where  ''+@xcode+''!=space(0)''  
   exec(@x1)  
   delete @tt where f=@xcode   
  end  
'   
  
set @sqlx='  
  declare @dtype int='+convert(nvarchar,@datatype)+'    
  SET ROWCOUNT 5000;  
  declare @ii int=0  
  WHILE 1 = 1  
  BEGIN  
   set @ii =0;  
   delete dbo.AuxiliaryFDetail where projectid='''+@ProjectID+'''    and datatype=@dtype  and datayear=@kjdate  
   set @ii+=@@ROWCOUNT  
     
   if(@dtype=0)  
    delete dbo.tbaux where projectid='''+@ProjectID+'''  
   set @ii+=@@ROWCOUNT  
   IF @ii = 0  
    BREAK;  
  END  
  SET ROWCOUNT 0;  
    
  CREATE TABLE #p1(ID int IDENTITY(1,1),accountcode varchar(100),AuxiliaryCode varchar(100)  COLLATE Chinese_PRC_CS_AS_KS_WS ,FDetailID int)  
    
  insert #p1  
  SELECT  DISTINCT kmdm,projectcode,FDetailID from #itemdetailtable  where projectcode!=space(0)   
    
  SELECT distinct '''+@ProjectID+''' as ProjectID,    idet.accountcode,idet.AuxiliaryCode,     isnull(xm.xmmc,space(0)) as AuxiliaryName,xmye.ncye as Sqqmye,0 as jfje,0 as dfje   INTO #p2   FROM (select distinct accountcode,AuxiliaryCode from #p1) idet   
  join '+@xm+' xm   on LTRIM(rtrim(xm.xmdm)) COLLATE Chinese_PRC_CS_AS_KS_WS=idet.AuxiliaryCode COLLATE Chinese_PRC_CS_AS_KS_WS 
      join '+@xmye+' xmye   on idet.accountcode COLLATE Chinese_PRC_CS_AS_KS_WS=ltrim(rtrim(xmye.kmdm)) COLLATE Chinese_PRC_CS_AS_KS_WS     and idet.AuxiliaryCode COLLATE Chinese_PRC_CS_AS_KS_WS=LTRIM(rtrim(xmye.xmdm)) COLLATE Chinese_PRC_CS_AS_KS_WS   --group by idet.accountcode,idet.AuxiliaryCode,xm.xmmc  
  
  alter table #p2 add ID int IDENTITY(1,1)    
    
  declare @leve int=1000  
  declare @ix int=1  
  declare @ixend int=@leve   
    
  while (1=1)begin  
   set @ii =0;  
   insert dbo.AuxiliaryFDetail(projectid,accountcode,AuxiliaryCode,FDetailID,DataType,DataYear)  
   select '''+@ProjectID+''',accountcode,AuxiliaryCode,FDetailID,@dtype,@kjdate from #p1 a  
    where (ID BETWEEN @ix and @ixend)   
    and not exists(select 1 from dbo.AuxiliaryFDetail   
     where projectid='''+@ProjectID+''' COLLATE Chinese_PRC_CS_AS_KS_WS   
      and accountcode=a.accountcode COLLATE Chinese_PRC_CS_AS_KS_WS  
      and AuxiliaryCode=a.AuxiliaryCode COLLATE Chinese_PRC_CS_AS_KS_WS  
      and FDetailID=a.FDetailID  
      and DataType=@dtype  
      and DataYear=@kjdate)  
     
   set @ii+=@@ROWCOUNT  
     
   if(@dtype=0)  
    insert dbo.TBAux(ProjectID,fscode, AccountCode, AuxiliaryCode, AuxiliaryName, Sqqmye, jfje, dfje,qmye,kmsx,tbgrouping)  
    SELECT ProjectID,space(0), AccountCode, AuxiliaryCode,AuxiliaryName,Sqqmye,jfje,dfje,0,0,AccountCode   
     FROM  #p2 where ID BETWEEN @ix and @ixend  
     
   set @ii+=@@ROWCOUNT  
     
   if @ii=0  
    break;  
   set @ix+=@leve   
   set @ixend+=@leve   
  end  
    
 end  
 '  
  
exec(@sql+@sqlx)  
  
end  
  
END TRY  
  
BEGIN CATCH   
 EXEC DBO.[PRO_THROW] @ProjectID,'ProcessAuxiliaryDetailAndTbAuxData'  
END CATCH  
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'ProcessAuxiliaryDetailData')
   BEGIN
       DROP  Procedure  ProcessAuxiliaryDetailData
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2010 Huapu (Beijing)
  Customer  : 
  Project   : EAS -处理本期/前期/期后数据到tbaux表
  Version   : 1.0.0
********************************************************************************/
CREATE Procedure ProcessAuxiliaryDetailData
@ProjectID	varchar(100),
@dateType int
AS

BEGIN	TRY

--BEGIN	TransAction
SET NOCOUNT ON
SET XACT_ABORT ON

declare	@t_itemclass	varchar(1000)=@ProjectID+'t_itemclass'
declare	@t_fzye	varchar(1000)=@ProjectID+'t_fzye'
declare	@t_itemdetail	varchar(1000)=@ProjectID+'t_itemdetail'
declare	@km	varchar(1000)=@ProjectID+'km'
declare	@tbaux	varchar(1000)=@ProjectID+'tbaux'
declare	@xm	varchar(1000)=@ProjectID+'xm'
declare	@xmye	varchar(1000)=@ProjectID+'xmye'

DECLARE	@ID	INT,@COUNT	INT,@T1	VARCHAR(255),@A	VARCHAR(255),@sql	nvarchar(max)

DECLARE	@FNAME VARCHAR(1000)=''

IF OBJECT_ID('tempdb..#tmp') IS NOT NULL
	DROP TABLE #tmp
create	table	#tmp(fname	varchar(1000))

--把处理好的数据插入t_fzye
declare @year varchar(4)
select top 1	@year=kjdate	from	kjqj	where ProjectID=@ProjectID

--构造t_fzye表数据
SET	@sql='
DECLARE	@spl	VARCHAR(10)='';''
IF EXISTS(Select 1 from '+@t_itemclass+')BEGIN
	
	DECLARE	@fid	varchar(100)
	SELECT @fid=stuff ((SELECT	'';''+CAST([FItemId] AS VARCHAR)
			FROM '+@t_itemclass+'
				FOR xml path ('''')), 1, 1,'''')
	from	'+@t_itemclass+'

	;WITH A1 AS(
	SELECT	''ltrim(rtrim(ISNULL(F''+CAST(t.FItemClassID AS VARCHAR(100))+''+@spl''+'',''+''space(1)''+'')))'' AS FT FROM '+@t_itemclass+'	t
	INNER	JOIN	DBO.fn_SplitTSQL(@fid,'';'')	t1
	ON  REPLACE(t.FItemId,'' '','''')	COLLATE Chinese_PRC_CS_AS_KS_WS=REPLACE(t1.Code,'' '',''''))

	insert	#tmp
	SELECT top 1 stuff ((SELECT ''+''+Ft
			FROM A1
				FOR xml path ('''')), 1, 1,'''')
	FROM A1;

END
'
exec(@sql)

select @FNAME=fname from #tmp

if(dbo.isnullempty(@FNAME,'')!='') begin

	set	@sql='
	
	IF EXISTS(Select 1 from '+@t_fzye+')begin
		CREATE TABLE #itemdetailtable(kmdm varchar(1000)	COLLATE Chinese_PRC_CS_AS_KS_WS	NOT NULL,FDetailID int,
			ProjectCode	varchar(1000)	COLLATE Chinese_PRC_CS_AS_KS_WS	NULL)
		
		DECLARE @tmp table (kmdm varchar(1000)	COLLATE Chinese_PRC_CS_AS_KS_WS	NOT NULL,FDetailID int,
			ProjectCode	varchar(1000)	COLLATE Chinese_PRC_CS_AS_KS_WS	NULL)
				
		insert	#itemdetailtable
		SELECT	ltrim(rtrim(a.kmdm)),idet.FDetailID,'+@FNAME+' as ProjectCode
					FROM	'+@t_itemdetail+'	idet
					join	'+@t_fzye+'	a
					on	a.FDetailID=idet.FDetailID

		insert @tmp
		select * from #itemdetailtable	where dbo.TJCHAR(projectcode,'';'')>1

		while exists(select 1 from	@tmp)begin
			declare @kmdm	varchar(100),@FID int,@PCode varchar(100)
			select top 1 @kmdm=kmdm ,@FID=FDetailID,@PCode=ProjectCode from @tmp
	
			insert	#itemdetailtable
			select @kmdm,@FID,Code from	dbo.fn_SplitTSQL(@PCode,'';'')
	
			delete @tmp	where kmdm=@kmdm and FDetailID=@FID and ProjectCode=@PCODE
			delete #itemdetailtable	where kmdm=@kmdm and FDetailID=@FID and ProjectCode=@PCODE
		end

		update #itemdetailtable set ProjectCode=LTRIM(rtrim(replace(ProjectCode,'';'',space(1))))	
			where ProjectCode is not null and ProjectCode!=space(1)

		SET ROWCOUNT 5000;
		WHILE 1 = 1
		BEGIN
			delete	dbo.AuxiliaryFDetail where projectid='''+@ProjectID+'''    
		IF @@ROWCOUNT = 0
			BREAK;
		END
		SET ROWCOUNT 0;

		create table #p1(ID int IDENTITY(1,1),accountcode	varchar(100),AuxiliaryCode	varchar(100),FDetailID int)
		insert #p1
		select  distinct kmdm,projectcode,FDetailID from	#itemdetailtable  where projectcode!=space(1)	
		
		declare @leve int=1000
		declare @ix int=1
		declare @ixend int=@leve 

		while (1=1)begin
			insert	dbo.AuxiliaryFDetail(projectid,accountcode,AuxiliaryCode,FDetailID)
			select '''+@ProjectID+''',accountcode,AuxiliaryCode,FDetailID	from #p1
				where id BETWEEN @ix	and @ixend
	
			if @@ROWCOUNT=0
				break;
			set @ix+=@leve 
			set	@ixend+=@leve 
		end
		
		INSERT	'+@tbaux+'	(ProjectID, AccountCode, AuxiliaryCode, AuxiliaryName,Sqqmye, jfje, dfje)
		SELECT	distinct	'''+@ProjectID+''',idet.kmdm,idet.projectcode,xm.xmmc,xmye.ncye,xmye.jfje1,xmye.dfje1
		FROM	(select distinct kmdm,projectcode from	#p1) idet
		 join '+@xm+'	xm
		on	xm.xmdm	COLLATE Chinese_PRC_CS_AS_KS_WS=idet.projectcode	COLLATE Chinese_PRC_CS_AS_KS_WS
		 join '+@xmye+'	xmye
		on	idet.kmdm	COLLATE Chinese_PRC_CS_AS_KS_WS=xmye.kmdm	COLLATE Chinese_PRC_CS_AS_KS_WS 
			and	idet.ProjectCode	COLLATE Chinese_PRC_CS_AS_KS_WS=xmye.xmdm	COLLATE Chinese_PRC_CS_AS_KS_WS
	end
	'

	exec(@sql)

end

END	TRY

BEGIN CATCH	
	EXEC DBO.[PRO_THROW] @ProjectID
END	CATCH


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'ProcessKmdm_jdToKmdm')
   BEGIN
       DROP  Procedure  ProcessKmdm_jdToKmdm
	END
GO

/*

2017/08/22 by dengll
对新纪元数据进行处理

*/

CREATE  PROCEDURE dbo.ProcessKmdm_jdToKmdm
	@ProjectID	varchar(1000)
AS
	--print 2/0
	declare	@sql	nvarchar(max)
	declare	@km	varchar(1000)=@ProjectID+'km'
	declare	@kmye	varchar(1000)=@ProjectID+'kmye'
	declare	@jzpz	varchar(1000)=@ProjectID+'jzpz'
	declare	@voucher	varchar(1000)=@ProjectID+'voucher'
	declare	@account	varchar(1000)=@ProjectID+'account'
	declare @PROJECTYPE	varchar(1000)=@ProjectID+'PROJECTTYPE'
	declare	@PROJECT	varchar(1000)=@ProjectID+'PROJECT'
	declare	@WL	varchar(1000)=@ProjectID+'wl'
	declare	@WLye	varchar(1000)=@ProjectID+'wlye'
	declare	@xm	varchar(1000)=@ProjectID+'xm'
	declare	@xmye	varchar(1000)=@ProjectID+'xmye'
	declare	@bm	varchar(1000)=@ProjectID+'bm'
	declare	@bmye	varchar(1000)=@ProjectID+'bmye'
	declare	@t_itemclass	varchar(1000)=@ProjectID+'t_itemclass'
	declare	@t_fzye	varchar(1000)=@ProjectID+'t_fzye'
	declare	@t_itemdetail	varchar(1000)=@ProjectID+'t_itemdetail'
	

	declare	@tabname	varchar(1000)
	
BEGIN TRY	
--BEGIN	TransAction
SET NOCOUNT ON
SET XACT_ABORT ON

if exists(select * from syscolumns where id=object_id(@km) and lower([name])='kmdm_jd')begin
		
		if OBJECT_ID('DBO.tmpDFKM') is null
			begin
				create table tmpDFKM(PID VARCHAR(100),kmdm varchar(1000),kmdm_jd varchar(1000))
			end
		delete tmpDFKM where pid=@ProjectID
		
		exec('
		insert tmpDFKM(PID, kmdm,kmdm_jd)
		select '''+@ProjectID+''',kmdm,kmdm_jd from  '+@km+' ')

set @sql='
	select ROW_NUMBER() OVER (ORDER BY NEWID()) AS ID,
				ltrim(rtrim(Kmdm))kmdm ,ltrim(rtrim(kmdm_jd))kmdm_jd into #p	from	 '+@km+'
	
	if	exists(select * from #p where kmdm!=kmdm_jd)begin
			update a set a.AccountCode=k.kmdm_jd
					from '+@voucher+' a inner join #p k on ltrim(rtrim(a.AccountCode))=k.Kmdm	COLLATE Chinese_PRC_CS_AS_KS_WS
						
			SELECT DISTINCT dfkm into #voucherDFKM FROM '+@voucher+'

			SELECT dfkm,dbo.GetDFKMCode (DFKM,'''+@ProjectID+''') AS kmdm
				into #NewVoucherDFKM	FROM 	#voucherDFKM
				
			UPDATE a set a.dfkm=b.kmdm
				from '+@voucher+' a, #NewVoucherDFKM b	where  a.dfkm=b.dfkm

			update a set a.AccountCode=k.kmdm_jd
				from dbo.AuxiliaryFDetail  a 
				inner join #p k 
				on ltrim(rtrim(a.AccountCode))	COLLATE Chinese_PRC_CS_AS_KS_WS =k.Kmdm	COLLATE Chinese_PRC_CS_AS_KS_WS
				and a.projectid='''+@ProjectID+'''

			update a set a.AccountCode=k.kmdm_jd,a.TBGrouping=k.kmdm_jd
				from dbo.TbAux  a 
				inner join #p k 
				on ltrim(rtrim(a.AccountCode))	COLLATE Chinese_PRC_CS_AS_KS_WS =k.Kmdm	COLLATE Chinese_PRC_CS_AS_KS_WS
				and a.projectid='''+@ProjectID+'''
				
			IF OBJECT_ID('''+@ACCOUNT+''') is not null
				update a set a.AccountCode=k.kmdm_jd
					from '+@ACCOUNT+'  a inner join #p k on ltrim(rtrim(a.AccountCode))	COLLATE Chinese_PRC_CS_AS_KS_WS =k.Kmdm	COLLATE Chinese_PRC_CS_AS_KS_WS
		end
		'
	exec(@sql)
end
	
end try
begin catch
	--ROLLBACK TransAction
	EXEC DBO.[PRO_THROW] @ProjectID,'ProcessKmdm_jdToKmdm'
end catch
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'ProcessProjectData')
   BEGIN
       DROP  Procedure  ProcessProjectData
	END
GO
/*
多核算类型处理 多多核算数据存在t_itemclass表
*/

CREATE  PROCEDURE dbo.ProcessProjectData
	@ProjectID	varchar(1000)
AS

BEGIN TRY	
--BEGIN	TransAction
SET NOCOUNT ON
SET XACT_ABORT ON

declare	@sql	nvarchar(max)
declare	@km	varchar(1000)=@ProjectID+'km'
declare	@kmye	varchar(1000)=@ProjectID+'kmye'
declare	@jzpz	varchar(1000)=@ProjectID+'jzpz'
declare	@voucher	varchar(1000)=@ProjectID+'voucher'
declare	@account	varchar(1000)=@ProjectID+'account'
declare @PROJECTYPE	varchar(1000)=@ProjectID+'PROJECTTYPE'
declare	@PROJECT	varchar(1000)=@ProjectID+'PROJECT'
declare	@WL	varchar(1000)=@ProjectID+'wl'
declare	@WLye	varchar(1000)=@ProjectID+'wlye'
declare	@xm	varchar(1000)=@ProjectID+'xm'
declare	@xmye	varchar(1000)=@ProjectID+'xmye'
declare	@bm	varchar(1000)=@ProjectID+'bm'
declare	@bmye	varchar(1000)=@ProjectID+'bmye'
declare	@t_itemclass	varchar(1000)=@ProjectID+'t_itemclass'
declare	@t_fzye	varchar(1000)=@ProjectID+'t_fzye'
declare	@t_itemdetail	varchar(1000)=@ProjectID+'t_itemdetail'
declare	@pzk	varchar(1000)=@ProjectID+'pzk'

SET @sql='
	delete	'+@PROJECT+'	
'
EXEC(@sql)
--处理account,project表数据
SET	@sql='
INSERT	'+@PROJECT+'
SELECT Distinct LEFT(XMDM,CHARINDEX(''.'',XMDM)),XMDM,XMMC,NULL,XMJB,XMMX
FROM	'+@XM+';
update 	'+@PROJECT+'	set ProjectCode=LTRIM(rtrim(ProjectCode)),TypeCode=LTRIM(rtrim(TypeCode))
'
exec(@sql)

end try
begin catch
	--ROLLBACK TransAction
	EXEC DBO.[PRO_THROW] @ProjectID,'ProcessProjectData'
end catch

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'ProcessProjectTypeData')
   BEGIN
       DROP  Procedure  ProcessProjectTypeData
	END
GO
/*
多核算类型处理 多多核算数据存在t_itemclass表
*/

CREATE  PROCEDURE dbo.ProcessProjectTypeData
	@ProjectID	varchar(1000)
AS

BEGIN TRY	
--BEGIN	TransAction
SET NOCOUNT ON
SET XACT_ABORT ON

declare	@sql	nvarchar(max)
declare	@km	varchar(1000)=@ProjectID+'km'
declare	@kmye	varchar(1000)=@ProjectID+'kmye'
declare	@jzpz	varchar(1000)=@ProjectID+'jzpz'
declare	@voucher	varchar(1000)=@ProjectID+'voucher'
declare	@account	varchar(1000)=@ProjectID+'account'
declare @PROJECTYPE	varchar(1000)=@ProjectID+'PROJECTTYPE'
declare	@PROJECT	varchar(1000)=@ProjectID+'PROJECT'
declare	@WL	varchar(1000)=@ProjectID+'wl'
declare	@WLye	varchar(1000)=@ProjectID+'wlye'
declare	@xm	varchar(1000)=@ProjectID+'xm'
declare	@xmye	varchar(1000)=@ProjectID+'xmye'
declare	@bm	varchar(1000)=@ProjectID+'bm'
declare	@bmye	varchar(1000)=@ProjectID+'bmye'
declare	@t_itemclass	varchar(1000)=@ProjectID+'t_itemclass'
declare	@t_fzye	varchar(1000)=@ProjectID+'t_fzye'
declare	@t_itemdetail	varchar(1000)=@ProjectID+'t_itemdetail'
declare	@pzk	varchar(1000)=@ProjectID+'pzk'

--在插入下面数据之前需要先删除一下
SET @sql='
	delete	'+@PROJECTYPE+'	
'
EXEC(@sql)
--处理account,project表数据
SET	@sql='
--begin 构造project表数据(项目核算)
IF	EXISTS(SELECT	1	FROM	'+@XM+')BEGIN
	INSERT	'+@PROJECTYPE+'
	SELECT		FITEMID,FName	FROM	'+@t_itemclass+'
END
update 	'+@PROJECTYPE+'	set TypeCode=LTRIM(rtrim(TypeCode))
'
exec(@sql)
end try
begin catch
	--ROLLBACK TransAction
	EXEC DBO.[PRO_THROW] @ProjectID,'ProcessProjectTypeData'
end catch

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'ProcessVoucherData')
   BEGIN
       DROP  Procedure  ProcessVoucherData
	END
GO
/*
多核算类型处理 多多核算数据存在t_itemclass表
*/

CREATE  PROCEDURE dbo.ProcessVoucherData
	@ProjectID	varchar(1000)
AS

BEGIN TRY	
--BEGIN	TransAction
SET NOCOUNT ON
SET XACT_ABORT ON

declare	@sql	nvarchar(max)
declare	@km	varchar(1000)=@ProjectID+'km'
declare	@kmye	varchar(1000)=@ProjectID+'kmye'
declare	@jzpz	varchar(1000)=@ProjectID+'jzpz'
declare	@voucher	varchar(1000)=@ProjectID+'voucher'
declare	@account	varchar(1000)=@ProjectID+'account'
declare @PROJECTYPE	varchar(1000)=@ProjectID+'PROJECTTYPE'
declare	@PROJECT	varchar(1000)=@ProjectID+'PROJECT'
declare	@WL	varchar(1000)=@ProjectID+'wl'
declare	@WLye	varchar(1000)=@ProjectID+'wlye'
declare	@xm	varchar(1000)=@ProjectID+'xm'
declare	@xmye	varchar(1000)=@ProjectID+'xmye'
declare	@bm	varchar(1000)=@ProjectID+'bm'
declare	@bmye	varchar(1000)=@ProjectID+'bmye'
declare	@t_itemclass	varchar(1000)=@ProjectID+'t_itemclass'
declare	@t_fzye	varchar(1000)=@ProjectID+'t_fzye'
declare	@t_itemdetail	varchar(1000)=@ProjectID+'t_itemdetail'
declare	@pzk	varchar(1000)=@ProjectID+'pzk'

declare	@sqlx2 nvarchar(max)
-- 将多余的jzpz表的数据也导入,除jzpz.db外
declare	@sqlx	nvarchar(max),@jzpzname	varchar(max)
create table	#js	(jzpzname	varchar(255))
set @sqlx='
insert	#js
select	Pzk_TableName	from	'+@pzk+'	where	Pzk_TableName!=''jzpz'' and Pzk_TableName like ''jzpz%''
'
exec(@sqlx)

declare 	@ix_ppzh_index	varchar(100)='ix_ppzh_'+replace(cast(newid() as varchar(50)),'-','');

--begin 处理voucher表数据
set @sqlx2='
insert	'+@Voucher+'(date,pzh,djh,accountcode,zy,jfje,dfje,jfsl,dfsl,zdr,FDetailID,DFKM)
select	pzrq,pzh,fjzs,kmdm,zy,
case when jd=''借'' then rmb else 0 end as jfje,
case when jd=''贷'' then rmb else 0 end as dfje,
case when jd=''借'' then sl  else 0 end as jfsl,
case when jd=''贷'' then sl  else 0 end as dfsl,
sr,
FDetailID,DFKM  from '+@jzpz+'
'

while exists(select	1	from	#js)begin
	select	top 1	@jzpzname=jzpzname	from	#js
	if OBJECT_ID(@ProjectID+@jzpzname) is not null begin
			set	@sqlx2+='
			union all 
			select	pzrq,pzh,fjzs,kmdm,zy,
			case when jd=''借'' then rmb else 0 end as jfje,
			case when jd=''贷'' then rmb else 0 end as dfje,
			case when jd=''借'' then sl  else 0 end as jfsl,
			case when jd=''贷'' then sl  else 0 end as dfsl,
			sr,
			FDetailID,DFKM from '+@ProjectID+@jzpzname+'
			'
	end
		delete	#js	where	jzpzname=@jzpzname
end

exec(@sqlx2)

--end
declare @year varchar(4)
select top 1	@year=kjdate	from	kjqj	where ProjectID=@ProjectID

if @year is null
	return;

set	@sqlx2='

	--update 	'+@voucher+' set [date]=dbo.ConvertWordAngle([date],0)

	update '+@voucher+'	set [date]=
	case 
		 --when len(date)=6	and cast(replace(right([date],2),space(1),0) as int)>00	then cast('''+@year+'''+''-''+replace(SUBSTRING([DATE],3,2),space(1),0)+''-''+replace(right([date],2),space(1),0) as char(10))
		 when len(date)=6	then cast('''+@year+'''+''-''+replace(SUBSTRING([DATE],3,2),space(1),0)+''-''+replace(right([date],2),space(1),0) as char(10))
		 when len(date)=5	then cast('''+@year+'''+''-''+replace(SUBSTRING([DATE],2,2),space(1),0)+''-''+replace(right([date],2),space(1),0) as char(10))
		else null end
	
	update '+@voucher+'	set Period=month([date])
	alter table '+@voucher+' drop column	IncNo;
	alter table '+@voucher+' add IncNo	int;
	
	--计算好incno
	select ROW_NUMBER() OVER (ORDER BY period) AS RowNumber,
	period,pzh	INTO #t from	'+@voucher+'
	group by period,pzh
	having  COUNT(period)>1 AND count(pzh)>1

	create index ix_pp_t on #t (period,pzh)
	
	create index '+@ix_ppzh_index+' on '+@voucher+'(period,pzh)

	update  vv set vv.IncNo=v.RowNumber
	from	'+@voucher+'	vv
	,	#t v
	where vv.period=v.period and vv.pzh=v.pzh;

	update '+@voucher+' 
	set	zy=replace(zy,char(9),space(0))
	where charindex(char(9),zy,0)>0

	'
	exec(@sqlx2)

end try
begin catch
	--ROLLBACK TransAction
	EXEC DBO.[PRO_THROW] @ProjectID,'ProcessVoucherData'
end catch

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'ReadCutoffTesting')
   BEGIN
       DROP  Procedure  ReadCutoffTesting
	END
GO

/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : 获取.OS 从账到单的数据
  Created   : Dengll	090225
  updated	:	20091215	by len	edit code	changed fs to RMB
  Updated	:	2010/06/12 by len
  Updated	:	2011/06/22 by jpeng
  Updated	:	2014/06/24 by jpeng
  Version   : 1.0.13
********************************************************************************/

CREATE Procedure [dbo].[ReadCutoffTesting]
	@projectid	varchar(100),
	@Code	varchar(100)
	
AS
SET NOCOUNT ON
	Declare	@tempSample1	table(Sample	nvarchar(1000),OsDate	varchar(10),Pzh	varchar(100),jd	varchar(10),je	varchar(100),zy	nvarchar(500))
	Declare	@tempSample2	table(Sample	nvarchar(1000),OsDate	varchar(10),Pzh	varchar(100),jd	varchar(10),je	varchar(100),zy	nvarchar(500))
	
	Insert	@tempSample1
  select top 2000  a.Sample, 
  convert(VARCHAR(10),a.OsDate,21) AS OsDate
  , a.PZH, 
  CASE WHEN a.Jd=1 THEN '借' WHEN a.Jd =-1 THEN '贷' END AS JD
  , a.JE, a.ZY from Cutofftest a where a.ProjectID=@projectid and a.FSCode=@Code and a.isbefore =1
  order by OsDate,a.Pzh desc
  
	Insert	@tempSample1
	SELECT	'截止日前' AS Sample,NULL	AS	OsDate,NULL AS Pzh,NULL AS JD,NULL AS JE,null AS ZY
	
	Insert	@tempSample1
	SELECT	'-------' AS Sample,
  '-------'	AS	OsDate,
  '截止日期：' AS Pzh,
  (select convert(char(10),PeriodEndDate,111) from NeweasV5.dbo.ProjectsInfo where projectid=@projectid) AS JD,
  '-------' AS JE,
  '-------' AS ZY
	
	Insert	@tempSample1
	SELECT	'截止日后' AS Sample,NULL	AS	OsDate,NULL AS Pzh,NULL AS JD,NULL AS JE,null AS ZY
	
	Insert	@tempSample1
  select top 2000  Sample,
  convert(VARCHAR(10),OsDate,21) AS OsDate
  , PZH, 
  CASE WHEN Jd=1 THEN '借' WHEN Jd =-1 THEN '贷' END AS JD
  , JE, ZY from Cutofftest where ProjectID=@projectid and FSCode=@Code and isbefore =0
  order by OsDate,Pzh
  
	select * from @tempSample1
	select * from @tempSample2







GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'ResumeIndex')
   BEGIN
       DROP  Procedure  ResumeIndex
	END
GO
/*
	恢复表索引
*/

CREATE PROC ResumeIndex
	@tablename VARCHAR(100)
AS
--聚集索引
declare	@clusteredType varchar(100)='clustered located on PRIMARY'
--复核索引
declare	@nonclusteredType varchar(100)='nonclustered located on PRIMARY'
--主键索引
declare	@clusteredPRIMARYType varchar(100)='clustered, unique, primary key located on PRIMARY'
declare	@clusteredPRIMARYType1 varchar(100)='nonclustered, unique, primary key located on PRIMARY'

DECLARE  @t TABLE 
	(
	index_name NVARCHAR (255),
	index_description VARCHAR (255),
	index_keys NVARCHAR (4000)
	)
insert @t
SELECT index_name,index_description,index_keys FROM dbo.TableIndex WHERE tablename=@tablename

WHILE EXISTS(SELECT 1 FROM @t)BEGIN
	
	DECLARE @indexName	VARCHAR(100),@sqlx NVARCHAR(MAX),@index_keys	nvarchar(max),@index_description	nvarchar(max)
	SELECT @indexName=index_name,@index_keys=index_keys,@index_description=index_description FROM @t 

	IF (CHARINDEX('<',@indexName)=0 and CHARINDEX(',',@indexName)=0)BEGIN
		if(@index_description=@nonclusteredType)--复核索引
			SET @sqlx='create nonclustered index '+@indexName+'	on '+@tablename+'	('+@index_keys+')	'	
		else if(@index_description=@clusteredPRIMARYType or @index_description=@clusteredPRIMARYType1)--主键索引
			SET @sqlx='ALTER TABLE '+@tablename+' ADD   CONSTRAINT	'+@indexName+'  PRIMARY KEY ('+@index_keys+')'
		else if(@index_description=@clusteredType)--聚集索引
			set @sqlx='create clustered index '+@indexName+'	on '+@tablename+'	('+@index_keys+')	'
		EXEC(@sqlx)
	END
	
	DELETE @t WHERE index_name=@indexName
END


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'SampleProportion')
   BEGIN
       DROP  Procedure  SampleProportion
	END
GO

/********************************************************************************
  Copyright : HuaPu
  Customer  : HuaPu
  Project   : Easy Audit System - 获取样本比例
  Created   : by jpeng
*********************************************************************************/
CREATE Procedure [dbo].[SampleProportion]
(
	@ProjectID nvarchar(50)	,
	@FsCode nvarchar(50),
	@Type int
)
AS


declare @Sample table (fscode	varchar(50) collate Chinese_PRC_CS_AS_KS_WS,fsname varchar(100) collate Chinese_PRC_CS_AS_KS_WS,sampleNum decimal(20,2),sampleNum1 decimal(20,2),Proportion1 decimal(20,2),sampleNum2 decimal(20,2),Proportion2 decimal(20,2),sampleNum3 decimal(20,2),Proportion3 decimal(20,2))
declare @Sample1 table (fscode	varchar(50) collate Chinese_PRC_CS_AS_KS_WS,sampleNum decimal(20,2))
declare @Sample2 table (fscode	varchar(50) collate Chinese_PRC_CS_AS_KS_WS,sampleNum decimal(20,2))
declare @Sample3 table (fscode	varchar(50) collate Chinese_PRC_CS_AS_KS_WS,sampleNum decimal(20,2))
if (@Type = 0)--余额
begin
	--样本容量（总体）
	insert into @Sample(fscode,fsname,sampleNum)
	select fs.fsCode,fs.fsName ,fs.yefx*fs.unchecked 
	from dbo.VIEW_TBFS fs 
	where fs.ProjectID=@projectID
	and fs.FSCode= @FsCode 
	and EXISTS(select 1 from DBO.AccountQues aq where aq.ProjectID=@projectID and aq.quesid='Q011' and aq.selectedyesno=1 and	aq.accountcode=@FsCode )
	and fs.unchecked<>0
	--统计抽样
	insert into @Sample1
	select @FsCode,sum(isnull(a.Yefx*a.Unchecked,0))
	from VIEW_TBDetail a
	join TBDetailExtra b
	on a.ID  = b.ID 
	and a.ProjectID = @projectID
	and substring(a.fscode,1,5) = @FsCode
	and a.IsMx = 1
	and b.SampleSelectedYesNo = 1
	where exists (select 1 from  AccountQues c where c.ProjectID = @projectID and QuesID = 'Q031' and SelectedYesNo = 1 and	c.accountcode=@FsCode )	
	--选取特定项目
	insert into @Sample2
	select @FsCode,sum(isnull(a.Yefx*a.Unchecked,0))
	from VIEW_TBDetail a
	join TBDetailExtra b
	on a.ID  = b.ID 
	and a.ProjectID = @projectID
	and substring(a.fscode,1,5) = @FsCode
	and a.IsMx = 1
	and SampleSelectedType > 0
	where exists (select 1 from  AccountQues c where c.ProjectID = @projectID and QuesID = 'Q033' and SelectedYesNo=1 and	c.accountcode=@FsCode )	
	--统计抽样+选取特定项目
	insert into @Sample3
	select @FsCode,sum(isnull(a.Yefx*a.Unchecked,0))
	from VIEW_TBDetail a
	join TBDetailExtra b
	on a.ID  = b.ID 
	and a.ProjectID = @projectID
	and substring(a.fscode,1,5) = @FsCode
	and a.IsMx = 1
	where (exists (select 1 from  AccountQues c where c.ProjectID = @projectID and QuesID = 'Q031' and SelectedYesNo = 1
			and	c.accountcode=@FsCode )	 
			and b.SampleSelectedYesNo = 1) 
		or (exists (select 1 from  AccountQues c where c.ProjectID = @projectID and QuesID = 'Q033' and SelectedYesNo=1 
			and	c.accountcode=@FsCode )	 
			and SampleSelectedType > 0)
end
else if (@Type = 1)--借方
begin
	--样本容量（总体）
	insert into @Sample(fscode,fsname,sampleNum)
	select fs.fsCode,fs.fsName+'(借方)',fs.jfje 
	from dbo.VIEW_TBFS fs
	where fs.ProjectID=@projectID 
	and fs.fscode = @FsCode
	and EXISTS(select 1 from DBO.AccountQues aq where aq.ProjectID=@projectID and aq.quesid in ('Q012','Q013') and aq.selectedyesno=1 and aq.accountcode=@FsCode )
	and fs.jfje<>0
	--统计抽样
	insert into @Sample1
	select @FsCode,sum(isnull(b.Jfje,0))
	from VIEW_TBDetail a
	join TBVoucher b
	on a.ProjectID = b.ProjectID 
	and a.AccountCode = b.AccountCode 
	and a.AuxiliaryCode = isnull(b.projectcode,'')
	where  a.ProjectID = @projectID
	and substring(a.fscode,1,5) = @FsCode
	and b.SampleSelectedYesNo = 1
	and  exists (select 1 from  AccountQues c where c.ProjectID = @projectID and QuesID = 'Q031' and SelectedYesNo=1 and	c.accountcode=@FsCode)	
	--选取特定项目
	insert into @Sample2
	select @FsCode,sum(isnull(b.Jfje,0))
	from VIEW_TBDetail a
	join TBVoucher b
	on a.ProjectID = b.ProjectID 
	and a.AccountCode = b.AccountCode 
	and a.AuxiliaryCode = isnull(b.projectcode,'')
	where  a.ProjectID = @projectID
	and substring(a.fscode,1,5) = @FsCode
	and b.SampleSelectedType > 0
	and  exists (select 1 from  AccountQues c where c.ProjectID = @projectID and QuesID = 'Q033' and SelectedYesNo=1 and	c.accountcode=@FsCode )
	--统计抽样+选取特定项目
	insert into @Sample3
	select @FsCode,sum(isnull(b.Jfje,0))
	from VIEW_TBDetail a
	join TBVoucher b
	on a.ProjectID = b.ProjectID 
	and a.AccountCode = b.AccountCode 
	and a.AuxiliaryCode = isnull(b.projectcode,'')
	where  a.ProjectID = @projectID
	and substring(a.fscode,1,5) = @FsCode
	and ((b.SampleSelectedYesNo = 1 	
			and  exists (select 1 from  AccountQues c where c.ProjectID = @projectID and QuesID = 'Q031' and SelectedYesNo=1 and	c.accountcode=@FsCode ))	
		or (b.SampleSelectedType > 0 	
			and  exists (select 1 from  AccountQues c where c.ProjectID = @projectID and QuesID = 'Q033' and SelectedYesNo=1 and	c.accountcode=@FsCode )))
	
	

end
else if (@Type = 2)
begin
	--样本容量（总体）
	insert into @Sample(fscode,fsname,sampleNum)
	select fs.fsCode,fs.fsName+'(贷方)' ,fs.dfje 
	from dbo.VIEW_TBFS fs
	where fs.ProjectID=@projectID 
	and fs.fscode = @FsCode
	and EXISTS(select 1 from DBO.AccountQues aq where aq.ProjectID=@projectID and aq.quesid in ('Q012','Q013') and aq.selectedyesno=1 and aq.accountcode=@FsCode )
	and fs.dfje<>0
	--统计抽样
	insert into @Sample1
	select @FsCode,sum(isnull(b.dfje,0))
	from VIEW_TBDetail a
	join TBVoucher b
	on a.ProjectID = b.ProjectID 
	and a.AccountCode = b.AccountCode 
	and a.AuxiliaryCode = isnull(b.projectcode,'')
	where  a.ProjectID = @projectID
	and substring(a.fscode,1,5) = @FsCode
	and b.SampleSelectedYesNo = 1
	and  exists (select 1 from  AccountQues c where c.ProjectID = @projectID and QuesID = 'Q031' and SelectedYesNo=1 and	c.accountcode=@FsCode)
	
	--选取特定项目
	insert into @Sample2
	select @FsCode,sum(isnull(b.dfje,0))
	from VIEW_TBDetail a
	join TBVoucher b
	on a.ProjectID = b.ProjectID 
	and a.AccountCode = b.AccountCode 
	and a.AuxiliaryCode = isnull(b.projectcode,'')
	where  a.ProjectID = @projectID
	and substring(a.fscode,1,5) = @FsCode
	and b.SampleSelectedType > 0
	and  exists (select 1 from  AccountQues c where c.ProjectID = @projectID and QuesID = 'Q033' and SelectedYesNo=1 and	c.accountcode=@FsCode)
	--统计抽样+选取特定项目
	insert into @Sample3
	select @FsCode,sum(isnull(b.dfje,0))
	from VIEW_TBDetail a
	join TBVoucher b
	on a.ProjectID = b.ProjectID 
	and a.AccountCode = b.AccountCode 
	and a.AuxiliaryCode = isnull(b.projectcode,'')
	where  a.ProjectID = @projectID
	and substring(a.fscode,1,5) = @FsCode
	and ((b.SampleSelectedYesNo = 1
			and  exists (select 1 from  AccountQues c where c.ProjectID = @projectID and QuesID = 'Q031' and SelectedYesNo=1 and	c.accountcode=@FsCode )) 
		or (b.SampleSelectedType > 0
			and  exists (select 1 from  AccountQues c where c.ProjectID = @projectID and QuesID = 'Q033' and SelectedYesNo=1 and	c.accountcode=@FsCode )))
	
end


	 update a 	 set 
	 sampleNum1 = b.sampleNum,
	 sampleNum2 = c.sampleNum,
	 sampleNum3 = d.sampleNum,
	 Proportion1 = case when a.sampleNum = 0 then 0 else round((b.sampleNum/a.sampleNum)*100,2) end,
	 Proportion2 = case when a.sampleNum = 0 then 0 else round((c.sampleNum/a.sampleNum)*100,2) end,
	 Proportion3 = case when a.sampleNum = 0 then 0 else round((d.sampleNum/a.sampleNum)*100,2) end
	 from @Sample  a
	 join @Sample1 b
	 on a.fscode = b.fscode
	 join @Sample2 c
	 on a.fscode = c.fscode 
	 join @Sample3 d
	 on a.fscode = d.fscode 


	 select fscode,fsname,
	 isnull(sampleNum,0) as sampleNum,
	 isnull(sampleNum1,0) as sampleNum1,
	 isnull(Proportion1,0) as Proportion1,
	 isnull(sampleNum2,0) as sampleNum2,
	 isnull(Proportion2,0) as Proportion2,
	 isnull(sampleNum3,0) as sampleNum3,
	 isnull(Proportion3,0) as Proportion3
	 from @Sample


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'SaveCutoffTest')
   BEGIN
       DROP  Procedure  SaveCutoffTest
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : 获取.OS 从账到单的数据
  Created   : 
********************************************************************************/

CREATE Procedure [dbo].SaveCutoffTest
  @VoucherID           varchar(50) ,
  @ProjectID    varchar(100)       ,
  @FSCode       varchar(50)        ,
  @AccountCode  varchar(100)       ,
  @AccountName  varchar(100)       ,
  @ProjectCode  varchar(100)       ,
  @IsBefore     int                ,
  @Sample       int                ,
  @OsDate       datetime           ,
  @PZH          VARCHAR(100)       ,
  @dfkm         varchar(100)       ,
  @JD           INT                ,
  @JE           decimal(20,2)      ,
  @ZY           varchar(255)       
AS
  IF EXISTS 
    (
      SELECT 
        VoucherID 
      FROM 
        Cutofftest
      WHERE
        projectid=@ProjectID and VoucherID=@VoucherID
    )
    BEGIN
      UPDATE
        Cutofftest 
      SET
        FSCode = @FSCode -- varchar(50)
        ,AccountCode = @AccountCode -- varchar(100)
        ,AccountName = @AccountName -- varchar(100)
        ,ProjectCode = @ProjectCode -- varchar(100)
        ,IsBefore = @IsBefore -- int
        ,Sample = @Sample -- int
        ,OsDate = @OsDate -- datetime
        ,PZH = @PZH -- varchar(100)
        ,dfkm = @dfkm -- varchar(100)
        ,JD = @JD -- int
        ,JE = @JE -- decimal(20, 2)
        ,ZY =@ZY  -- varchar(255)
      WHERE 
        projectid=@ProjectID and VoucherID=@VoucherID
    END
  ELSE
    BEGIN
      INSERT  INTO
        Cutofftest 
          (
            VoucherID,
            ProjectID,
            FSCode,
            AccountCode,
            AccountName,
            ProjectCode, 
            IsBefore, 
            Sample, 
            OsDate, 
            PZH, 
            dfkm, 
            JD, 
            JE, 
            ZY
           )
      Values
        ( 
          @VoucherID,
          @ProjectID,
          @FSCode,
          @AccountCode,
          @AccountName,
          @ProjectCode,
          @IsBefore,
          @Sample,
          @OsDate,
          @PZH,
          @dfkm,
          @JD,
          @JE,
          @ZY
        )
    END
      



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'SaveDSIntercourse')
   BEGIN
       DROP  Procedure  SaveDSIntercourse
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : 
  Project   : EAS -保存往来询证表数据
  Created   : Dengll PM 2009-06-10
  Updated   : 2010/05/26 liwei 更新字段 -PostCode,PostAddress,Recipient
  Updated   : by jpeng 2011/07/11
  Version   : 1.0.1
********************************************************************************/

CREATE Procedure [dbo].[SaveDSIntercourse]
	@projectid	VARCHAR(100),
	@ID	varchar(50),
	@PostCode VARCHAR(50),
	@PostAddress VARCHAR(100),
	@Recipient VARCHAR(50),
	@ConsultDate	DATETIME,
	@ConfirmDate	DATETIME
AS

UPDATE	DBO.TBWlhz	SET	ConsultDate=@ConsultDate ,
							ConfirmDate=@ConfirmDate,
							PostCode = @PostCode ,
							PostAddress = @PostAddress,
							Recipient = @Recipient		 WHERE projectID=@projectID	and ID=@ID






GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'SaveTbwlzl')
   BEGIN
       DROP  Procedure  SaveTbwlzl
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : 
  Project   : EAS -保存函证控制的回函金额
  Created   : Dengll PM 2009-06-10
  Updated   : dengll 2009/07/11	add  and @W LDM<>space(1)
  update	:	dengll	2009/10/19	comment code
	ConsultBalance=@ConsultBalance,
	,ConsultType=@ConsultType
  Updated   : by jpeng 2011/07/11
  Updateed	: by dengll added ，更新发函金额
  Version   : 1.0.1
********************************************************************************/
create Procedure [dbo].[SaveTbwlzl]
	@projectid	varchar(100),
	@AccountCode	varchar(200),
	@auxiliarycode	varchar(200),
	@ConfirmBalance	DECIMAL(20,2),
	@ConsultBalance	DECIMAL(20,2),
	@FsCode varchar(100),
	@IsRje int
AS

UPDATE	a
set a.ConfirmBalance=ISNULL(@ConfirmBalance,0)
from DBO.TBDetailExtra	a
join TBDetail b
on a.ID = b.ID 
where b.PROJECTID=@PROJECTID AND b.AccountCode=@AccountCode and b.auxiliarycode=@auxiliarycode and Fscode = @FsCode 



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'SelectaccountperiodData')
   BEGIN
       DROP  Procedure  SelectaccountperiodData
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2010 Huapu (Beijing)
  Customer  : 
  Project   : EAS -
  Created   : 2011/12/28 by jpeng 
  Updated   : 20140830 by dengll
  Updated   : 20150713 by dengll
  Version   : 1.0.2
********************************************************************************/
CREATE Procedure SelectaccountperiodData
	@projectid varchar(100)
AS

--select p.period as accountperiod,p.StartDate,p.EndDate,1 as Period,isnull(a.DateType,0)DateType
--from	'+@PeriodName+' p
--left	join	accountperiod A
--on	A.accountperiod = p.period
--WHERE	CONVERT(varchar(10),p.StartDate,111)>@PreviousPeriodDate	and CONVERT(varchar(10),p.EndDate,111)<=@periodenddate
--end	else	begin
--	select A.accountperiod,A.StartDate,A.EndDate,0 as Period,A.DateType
--	from  '+@accountperiodName+' A
--	join '+@PeriodName+' B
--	on A.accountperiod = B.period	and CONVERT(varchar(10),b.EndDate,111)<=@periodenddate
--end









GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'SelectBasicData')
   BEGIN
       DROP  Procedure  SelectBasicData
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS - 获取实际执行重要性
  Created   : dengll PM 05.09.2008
  Updated   : -changed CurrentNotAdjustedTax to CurrentAdjustedTax	dengll 08/11/29
  Updated	:	2010/05/26 by len	PlanningMateriality	to @PROJECTID
  Updated	: 2010/11/29 by len
  Updated	: 2010/12/22 by len	add where CompleteControlSubCorpYesNo=1
  Updated	: 20141215
  Version   : 1.0.5
********************************************************************************/
CREATE PROCEDURE [dbo].[SelectBasicData]
    @PROJECTID NVARCHAR(100) ,
    @fscode	varchar(100)
	
AS 

		declare	@mp	decimal(20,2),@Mp1	int,@valueofMp	int,@grosspretax	int,@j	decimal(20,2),@QuantityFactors	bit,@rvalue	decimal(20,2)
		--规范处理方法
		--select	@grosspretax=GrossPretax
		--	from TBFS	where	ProjectID = @PROJECTID and  fscode=@fscode
			
		--select
		--		@Mp1=case when @grosspretax=1	
		--		then CurrentAdjustedTax	else	
		--		CurrentNotAdjustedTax	end	
		--		from	PMPlanningMateriality	where ProjectID = @PROJECTID

		select @mp= CurrentAdjustedTax	from	PMPlanningMateriality	where ProjectID = @PROJECTID	

		if	exists(select	1	from	PMofFsCode 	where	ProjectID = @PROJECTID and fscode=@fscode)
		begin
			select	@mp=valueofMP	
			from	PMofFsCode				
			where	ProjectID = @PROJECTID and fscode=@fscode				
		end	
		
		exec	dbo.ByfscodeGetRValue	@PROJECTID,@fscode,'A',@rvalue output	--获取R值
		
		set	@j=@mp/@rvalue
		
		SELECT    null as Projectname, @mp as Mp, @j AS JSpacebetwenn

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'SelectSampleSelectedQues')
   BEGIN
       DROP  Procedure  SelectSampleSelectedQues
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -Module 
  Created   : dengll PM 05.09.2008
  Updated   : 2010/05/26 BY LEN @TBNAME	CHANGED TO @PROJECTID
  Updated	:	2010/10/27 by len 更新查询统计抽样的方法的条件。Q003 changed to Q031
  说明：
	Q001 表示选择了那类数据进行做实质性测试
	Q002 表示选择了那类测试程序
	Q003 表示选择了那类统计抽样方法(全部项目还是统计抽样)
  Updated	:	2010/11/29 by len
  Updated	:	2012/09/29 by len	add	q033
  Updated	:	2013/11/29 by len	add	q033
  Version   : 1.0.5
********************************************************************************/

CREATE PROCEDURE [dbo].[SelectSampleSelectedQues]
    @PROJECTID VARCHAR(100) ,
    @AccountCode VARCHAR(500) ,
    @QuesCode VARCHAR(500)
AS 

	IF (@QuesCode)='Q002'	BEGIN
		SELECT     ID, AccountCode, QuesID, QuesDescription, 
		CASE QuesID WHEN	'Q021' THEN 'A'	--实质性分析程序
					WHEN	'Q022'     THEN 'B'		--细节测试
					WHEN 	'Q023'     THEN 'C'				--两者结合
			END AS 	 QuesAnswer
		FROM         DBO.AccountQues	where ProjectID=@ProjectID and AccountCode=@AccountCode	and QuesID in ('Q021','Q022','Q023')	and	Selectedyesno=1
	END  
	ELSE	IF (@QuesCode)='Q001' BEGIN
		SELECT     ID, AccountCode, QuesID, QuesDescription, 
		case QuesID	when 	'Q011'	then	'A'
					when 	'Q012'	then	'B'
					when 	'Q013'	then	'C'
					End
		as QuesAnswer
		FROM         DBO.AccountQues	where ProjectID=@ProjectID and AccountCode=@AccountCode	and QuesID in('Q011','Q012','Q013')	and	Selectedyesno=1
	END
	ELSE	IF (@QuesCode)='Q003' BEGIN
		SELECT     ID, AccountCode, QuesID, QuesDescription, 
		CASE  WHEN	Selectedyesno=1	 
					THEN 'A'	--是
					ELSE 'C'	--否	
					END as QuesAnswer
		FROM         DBO.AccountQues	where ProjectID=@ProjectID and  AccountCode=@AccountCode	and QuesID='Q031'
	END
	ELSE	BEGIN
		IF(@QuesCode='Q033')
		SELECT     ID, AccountCode, QuesID, QuesDescription,isnull(Selectedyesno,0) as QuesAnswer
			FROM         DBO.AccountQues	where ProjectID=@ProjectID and  AccountCode=SUBSTRING(@AccountCode,1,LEN(ACCOUNTCODE))	and QuesID=@QuesCode
		ELSE 
		SELECT     ID, AccountCode, QuesID, QuesDescription,isnull(Selectedyesno,0) as QuesAnswer
			FROM         DBO.AccountQues	where ProjectID=@ProjectID and AccountCode=@AccountCode	and QuesID=@QuesCode
	END





GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'SelectTbFslinsdata')
   BEGIN
       DROP  Procedure  SelectTbFslinsdata
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -Module SASManage
  Created   : dengll PM 05.09.2008
  Updated   : 2010/05/26 by len	@tbname	to @projectid
  Updated   : 2011/06/28 
  Updated   : 2011/07/16 
  Updated   : 2012/08/21
  Version   : 1.0.4
********************************************************************************/

create Procedure [dbo].[SelectTbFslinsdata]
	@projectid			nvarchar(100),
	@fscode	nvarchar(100)
AS

SELECT     
fscode,
fsName as Projectname,
ISNULL(Unchecked,0)*yefx as qmye,
isnull(jfje,0) as jfje,
isnull(dfje,0) as dfje,
isnull(qcye,0)*yefx as qcye
FROM  view_TBFS	
where ProjectID = @projectid  and  fscode=@fscode






GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'sp_GetCombinationList')
   BEGIN
       DROP  Procedure  sp_GetCombinationList
	END
GO

CREATE PROCEDURE [dbo].[sp_GetCombinationList]
	@projectID varchar(100)
AS
	declare @count int
	set @count=(select count(1) from CombinationList where projectid=@projectID)
	if @count=0
	BEGIN
	insert into CombinationList (projectid,comcode,comname) values (@projectID,'23300','合并财务报表及附注')
	END
	select * from  CombinationList where projectid=@projectID


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'StartAutomaticProcessing')
   BEGIN
       DROP  Procedure  StartAutomaticProcessing
	END
GO

/*

2017/08/22 by dengll
对新纪元数据进行处理

*/

CREATE  PROCEDURE dbo.StartAutomaticProcessing
	@ProjectID	varchar(1000)
AS
BEGIN TRY	
--BEGIN	TransAction
SET NOCOUNT ON
SET XACT_ABORT ON

	--print 2/0
	declare	@sql	nvarchar(max)
	declare	@km	varchar(1000)=@ProjectID+'km'
	declare	@kmye	varchar(1000)=@ProjectID+'kmye'
	declare	@jzpz	varchar(1000)=@ProjectID+'jzpz'
	declare	@voucher	varchar(1000)=@ProjectID+'voucher'
	declare	@account	varchar(1000)=@ProjectID+'account'
	declare @PROJECTYPE	varchar(1000)=@ProjectID+'PROJECTTYPE'
	declare	@PROJECT	varchar(1000)=@ProjectID+'PROJECT'
	declare	@WL	varchar(1000)=@ProjectID+'wl'
	declare	@WLye	varchar(1000)=@ProjectID+'wlye'
	declare	@xm	varchar(1000)=@ProjectID+'xm'
	declare	@xmye	varchar(1000)=@ProjectID+'xmye'
	declare	@bm	varchar(1000)=@ProjectID+'bm'
	declare	@bmye	varchar(1000)=@ProjectID+'bmye'
	declare	@t_itemclass	varchar(1000)=@ProjectID+'t_itemclass'
	declare	@t_fzye	varchar(1000)=@ProjectID+'t_fzye'
	declare	@t_itemdetail	varchar(1000)=@ProjectID+'t_itemdetail'

	declare	@tabname	varchar(1000)
	--定义数据结果表结构
	--exec dbo.AutomaticProcessingForCreateTables	@ProjectID
	--清除重分类数据
	--delete from dbo.TBRjeItems where ProjectID=@ProjectID
	--判断又没有把多核算数据存放在t_itemClass表
	set @tabname	=@ProjectID+'t_itemclass';
	create table #itemClass(id int)
	if object_id(@tabname) is not null
	begin
		declare	@sql1	nvarchar(max)
		set	@sql1='
		if	exists(select	1	from	'+@tabname+')
		begin
			insert	#itemClass
			select	1
		end
		'
		exec(@sql1)
	end

	create table	#hslx	(hslx	int)
	set	@sql='
		if	exists(select 1 from '+@km+')
			insert	#hslx	select	1
		if	exists(select 1 from '+@wl+')
			insert	#hslx	select	2
		if	exists(select 1 from '+@bm+')
			insert	#hslx	select	3
	'
	exec(@sql)

	if exists(select	1	from	#itemClass)
		exec dbo.AutomaticProcessingForMultipleAccountingAtxm	@ProjectID--多核算类型处理
	else --if not exists(select * from	#hslx)--由于无法处理t_fzye表所以只要是基本核算或分部门的项目核算都需要按基本核算处理 by dengll 2017/11/09
		exec dbo.AutomaticProcessingForBasicAccounting	@ProjectID--基本核算
	--else 
		--exec dbo.AutomaticProcessingForMultipleAccounting	@ProjectID--多核算类型处理分表数据
	
	exec dbo.AutomaticProcessingForUpdateProject	@ProjectID
	
	exec dbo.ProcessKmdm_jdToKmdm @projectid

--Commit TransAction
end try
begin catch
	--ROLLBACK TransAction
	EXEC DBO.[PRO_THROW] @ProjectID,'StartAutomaticProcessing'
end catch

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'SuspendIndex')
   BEGIN
       DROP  Procedure  SuspendIndex
	END
GO
/*
	20171019 by dengll 挂起表的索引
*/
CREATE PROC SuspendIndex
	@tablename VARCHAR(100)
AS
--存储表索引
IF OBJECT_ID ('dbo.TableIndex') IS  NULL BEGIN	
CREATE TABLE TableIndex
	(
	tableName	VARCHAR(255),
	index_name NVARCHAR (255),
	index_description VARCHAR (255),
	index_keys NVARCHAR (4000)
	)
END 

--主键索引
declare	@clusteredPRIMARYType varchar(100)='clustered, unique, primary key located on PRIMARY'
declare	@clusteredPRIMARYType1 varchar(100)='nonclustered, unique, primary key located on PRIMARY'

DECLARE  @t TABLE 
	(
	index_name NVARCHAR (255),
	index_description VARCHAR (255),
	index_keys NVARCHAR (4000)
	)

INSERT @t
EXEC sp_helpindex @tablename

DELETE TableIndex WHERE tablename=@tablename

INSERT TableIndex
SELECT @tablename,* FROM @t

--drop index
WHILE EXISTS(SELECT 1 FROM @t)BEGIN
	DECLARE @indexName	VARCHAR(100),@sqlx NVARCHAR(MAX),@index_description	nvarchar(max)
	SELECT @indexName=index_name,@index_description=index_description FROM @t 

	IF (CHARINDEX('<',@indexName)=0 and CHARINDEX(',',@indexName)=0)BEGIN
		if (@clusteredPRIMARYType=@index_description	or @clusteredPRIMARYType1=@index_description)
			SET @sqlx='alter table '+@tablename+' drop constraint '+@indexName+''
		else 
			SET @sqlx='drop index '+	@indexName	+' on '+ @tablename +''
		EXEC(@sqlx)
	END
	
	DELETE @t WHERE index_name=@indexName
END


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'SynchorAccountScheme')
   BEGIN
       DROP  Procedure  SynchorAccountScheme
	END
GO

/********************************************************************************
  DATABASE  : EAS
  COPYRIGHT : 2008 HUAPU (BEIJING)
  Customer  : Huapu
  PROJECT   : 同步分账户审计方案
  CREATED   : Huasheng 2019/01/23
  Updated	: 20131204 by dengll
  VERSION   : 1.0.0
********************************************************************************/

CREATE PROCEDURE [dbo].[SynchorAccountScheme]
	@ProjectID varchar(50),
	@Type int		--1：从上级同步  2：同步到所有下级
AS
if(@Type=1) begin
	declare @isTop int,@UpperProjectID varchar(100)
	SELECT @isTop=IsTopProject,@UpperProjectID=UpperProjectID FROM NEWEASV5.dbo.ProjectsInfo WHERE ProjectID=@ProjectID
	if(@isTop=0) begin
		DELETE AuditGoalandCognizance WHERE ProjectID=@ProjectID
		INSERT INTO AuditGoalandCognizance SELECT @ProjectID AS ProjectID,ClassCode,AuditGoalCode,AuditGoalName,Cognizance FROM AuditGoalandCognizance WHERE ProjectID=@UpperProjectID

		delete AccountQues where ProjectID=@ProjectID
		insert into AccountQues select @ProjectID as ProjectID,AccountCode,QuesID,QuesDescription,SelectedYesNo,AuditProgramCode,QuestionType,MutexQuesIDs
			FROM AccountQues where ProjectID=@UpperProjectID    
	end
end else begin
	declare @childPID varchar(100),@index int,@row_count int
	declare @table_project table(projectid varchar(100),upperPID varchar(100),projectName varchar(500))
	insert @table_project exec neweasv5.dbo.GetAllSubProjectID @PID=@projectID
	set @row_count=@@ROWCOUNT
	set @index=1

		while(@index<=@row_count) begin
			select top 1 @childPID=projectid from @table_project
			if(@childPID<>@projectID) begin
				DELETE AuditGoalandCognizance WHERE ProjectID=@childPID
				INSERT INTO AuditGoalandCognizance SELECT @childPID AS ProjectID,ClassCode,AuditGoalCode,AuditGoalName,Cognizance FROM AuditGoalandCognizance WHERE ProjectID=@projectID
				
				delete AccountQues where ProjectID=@childPID
				insert into AccountQues select @childPID as ProjectID,AccountCode,QuesID,QuesDescription,SelectedYesNo,AuditProgramCode,QuestionType,MutexQuesIDs
					FROM AccountQues where ProjectID=@projectID    
			end	
			delete @table_project where projectid=@childPID
			set @index=@index+1
		end
end






GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'SynchroTbDetailAndVoucherTable')
   BEGIN
       DROP  Procedure  SynchroTbDetailAndVoucherTable
	END
GO

/*

2018/11/13 by dengll	默认只同步一个辅助核算类型到tbdetail

*/

CREATE  PROCEDURE dbo.SynchroTbDetailAndVoucherTable
	@ProjectID	varchar(1000)
AS

BEGIN TRY	
SET NOCOUNT ON
SET XACT_ABORT ON

--获取具有辅助核算的基本核算明细
SELECT a.projectid,a.accountcode,case when charindex(';',a.typecode)>0 then substring(a.TypeCode,0,charindex(';',a.typecode)) else a.TypeCode end TypeCode,b.FSCode,b.kmsx,b.Yefx,b.Tbtype
 INTO #p
 FROM ACCOUNT a
 INNER JOIN  VIEW_TBDetail b
 ON a.ProjectID=b.ProjectID
 	AND a.AccountCode=b.AccountCode
 WHERE a.ProjectID=@ProjectID
	AND a.Hsxms>0
	AND a.TypeCode!=''
	 and b.DataType=0 and b.IsAux =0

--获取辅助核算明细数据
SELECT DISTINCT b.*,a.AuxiliaryCode,a.AuxiliaryName as AccAuxName,
	(a.Sqqmye + a.QQccgz) AS Sqqmye,	a.jfje,a.dfje
	INTO #o
 FROM TBAux a
	INNER JOIN #p b
	ON a.ProjectID=b.projectid
		AND a.AccountCode=b.accountcode	AND a.AuxiliaryCode LIKE b.TypeCode+'%'

--根据辅助核算明细数据获取AuxiliaryFDetail数据，用于更新凭证上表的projectcode
SELECT a.projectid,a.Accountcode,a.AuxiliaryCode,a.FDetailID,a.DataYear,a.DataType 
	INTO #z
	FROM #o o
	INNER JOIN dbo.AuxiliaryFDetail a
	ON o.projectid=a.projectid 
		AND o.Accountcode=a.Accountcode
			AND a.AuxiliaryCode=o.AuxiliaryCode
			AND a.DataType=0

--begin获取差异数据
;with a1 as (
SELECT projectid,Accountcode,AuxiliaryCode,fscode FROM dbo.TBDetail where projectid=@ProjectID	and datatype=0	and AuxiliaryCode<>''
except  
SELECT projectid,Accountcode,AuxiliaryCode,fscode FROM  #o where  projectid=@ProjectID	 
)

--插入前，要删除处理，防止重复执行造成的重复数据		
delete t1 from dbo.TBDetail t1 
	join a1 o 
		on o.ProjectID = t1.ProjectID 
			and o.AccountCode = t1.AccountCode 
				and o.AuxiliaryCode = t1.AuxiliaryCode 
					and o.FSCode = t1.FSCode  
						and t1.DataType = 0
;
--end 


--插入tbdetila表辅助核算明细数据
insert dbo.TBDetail(ID,ProjectID,FSCode,AccountCode, AuxiliaryCode, AccAuxName, 
		DataType, TBGrouping, TBType, IsMx, IsAccMx, IsAux, kmsx, Yefx, Sqqmye, jfje, dfje,SourceFSCode)  
 select newid(), ProjectID,FSCode,AccountCode, AuxiliaryCode, AccAuxName, 
		0 as DataType, AccountCode, TBType, 1, 0, 1, kmsx, Yefx, Sqqmye, jfje, dfje,'' 
			from   #o t1 where not exists(select 1 from dbo.TBDetail o where  o.ProjectID = t1.ProjectID 
			and o.AccountCode = t1.AccountCode 
				and o.AuxiliaryCode = t1.AuxiliaryCode 
					and o.FSCode = t1.FSCode) 


--update TBDetail ismx
update a set a.ismx=1
	from	 TBDetail a
	inner join #p b
		on a.projectid=b.projectid	and a.accountcode=b.accountcode and a.datatype=0

----更新本期凭证上
--UPDATE a SET a.projectcode=b.auxiliarycode
--	FROM dbo.tbvoucher a
--	INNER JOIN #z b
--	ON a.ProjectID=b.projectid
--		AND a.AccountCode=b.accountcode	AND a.FDetailID=b.FDetailID
--			WHERE b.DataType=0

----更新期后凭证
--UPDATE a SET a.projectcode=b.auxiliarycode
--	FROM dbo.Qhjzpz a
--	INNER JOIN #z b
--	ON a.ProjectID=b.projectid
--		AND a.AccountCode=b.accountcode	AND a.FDetailID=b.FDetailID
--			WHERE b.DataType=1

----更新前期凭证
--UPDATE a SET a.projectcode=b.auxiliarycode
--	FROM dbo.Qcwljzpz a
--	INNER JOIN #z b
--	ON a.ProjectID=b.projectid
--		AND a.AccountCode=b.accountcode	AND a.FDetailID=b.FDetailID
--			WHERE b.DataType=-1	AND YEAR(a.Date)=b.datayear			

exec UpdateVoucherProjectCode @ProjectID,'',0 
exec UpdateVoucherProjectCode @ProjectID,'',1 
exec UpdateVoucherProjectCode @ProjectID,'',-1 
/*
exec UpdateTbDetailISMXISAUXISACCMX @ProjectID  
exec ByFllxUpdateTbAccAndTbAux @ProjectID
exec ByFllxUpdateTbAccAndTbAuxQqccgz @ProjectID
exec UpdateTBfsandTBaccbyTBGrouping @ProjectID
*/


drop table #p
drop table #o
drop table #z

			
END TRY
BEGIN CATCH
	EXEC DBO.[PRO_THROW] @ProjectID,'SynchroTbDetailAndVoucherTable'
END CATCH

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'SyncNoteAttributes')
   BEGIN
       DROP  Procedure  SyncNoteAttributes
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -Module AuditPrograml
  Created   : Huasheng 2016/06/15
  Updated   : -
  Version   : 1.0.0
  说明：同步两个项目的附注结构
********************************************************************************/

CREATE PROCEDURE [dbo].[SyncNoteAttributes]
	@SourcePID	varchar(100),	
	@EndPID	 varchar(100)
AS
BEGIN
SET NOCOUNT ON
SET XACT_ABORT ON
BEGIN TRAN	
	
	--附注列
	DELETE NoteColumnAttribute WHERE ProjectID=@EndPID 
		AND FormCode IN (select FormCode from NoteForm where ProjectID=@SourcePID)
	INSERT INTO NoteColumnAttribute (ProjectID,ColumnCode,FormCode,FSCode,Title,SortID,[Type],IsConnect,ConnectName,IsMerge,IsCheckRow)
		SELECT @EndPID AS ProjectID,ColumnCode,FormCode,FSCode,Title,SortID,[Type],IsConnect,ConnectName,IsMerge,IsCheckRow
			FROM NoteColumnAttribute WHERE ProjectID=@SourcePID AND FormCode IN (select FormCode from NoteForm where ProjectID=@SourcePID)

	--附注行
	DELETE NoteRowAttribute WHERE ProjectID=@EndPID 
		AND FormCode IN (select FormCode from NoteForm where ProjectID=@SourcePID)
	INSERT INTO NoteRowAttribute (ProjectID,NoteCode,UpperNoteCode,FormCode,FSCode,SortID,Bth,IsQzh,IsGdh,IsCheckRow,IsConnect)
		SELECT @EndPID AS ProjectID,NoteCode,UpperNoteCode,FormCode,FSCode,SortID,Bth,IsQzh,IsGdh,IsCheckRow,IsConnect
			FROM NoteRowAttribute WHERE ProjectID=@SourcePID AND FormCode IN (select FormCode from NoteForm where ProjectID=@SourcePID)

	--附注公式
	DELETE NoteFormula WHERE ProjectID=@EndPID 
		AND FormCode IN (select FormCode from NoteForm where ProjectID=@SourcePID)
	INSERT INTO NoteFormula (ProjectID,ColumnCode,NoteCode,FormCode,FSCode,Formula)
		SELECT @EndPID AS ProjectID,ColumnCode,NoteCode,FormCode,FSCode,Formula
			FROM NoteFormula WHERE ProjectID=@SourcePID AND FormCode IN (select FormCode from NoteForm where ProjectID=@SourcePID)
	
	--附注表格
	DELETE NoteForm WHERE ProjectID=@EndPID 
		AND FormCode IN (select FormCode from NoteForm where ProjectID=@SourcePID)
	INSERT INTO NoteForm (ProjectID,FormCode,FormName,SortID,IsUse,FSCode,FormType,Remark,StructHash,DataHash,IsChangeRow,IsCombination) 
		SELECT @EndPID AS ProjectID,FormCode,FormName,SortID,IsUse,FSCode,FormType,Remark,NEWID(),NEWID(),IsChangeRow,IsCombination
			FROM NoteForm WHERE ProjectID=@SourcePID AND FormCode IN (select FormCode from NoteForm where ProjectID=@SourcePID)

	--删除多余的附注关联关系
	DELETE NoteAndTB WHERE ProjectID=@EndPID AND
		NoteCode NOT IN (SELECT NoteCode FROM NoteRowAttribute WHERE ProjectID=@EndPID) 
			
	DELETE NoteMemo WHERE ProjectID=@EndPID AND
		FormCode NOT IN (SELECT FormCode FROM NoteForm WHERE  ProjectID=@EndPID)
	
	INSERT INTO NoteMemo (ProjectID,FormCode,Memo,memohelp) 
		SELECT @EndPID AS ProjectID,FormCode,Memo,memohelp FROM NoteMemo 
			WHERE ProjectID=@SourcePID AND FormCode NOT IN (SELECT FormCode FROM NoteForm WHERE  ProjectID=@EndPID)

	DELETE ComNoteMemo WHERE ProjectID=@EndPID AND
		FormCode NOT IN (SELECT FormCode FROM NoteForm WHERE  ProjectID=@EndPID)
		 
	--同步附注校验信息
	DELETE NoteCheckRule WHERE projectid=@EndPID AND ID IN (SELECT ID FROM NoteCheckRule WHERE ProjectID=@SourcePID)
	INSERT INTO NoteCheckRule (ID,ProjectID,FSCode,FormType,CheckPathOne,CheckPathTwo,Remark,IsUseCom,IsUse,SelectType)
		SELECT ID,@EndPID AS ProjectID,FSCode,FormType,CheckPathOne,CheckPathTwo,Remark,IsUseCom,IsUse,SelectType 
			FROM NoteCheckRule WHERE projectid=@SourcePID 

COMMIT TRAN
END


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'SyncNoteAttributesByFormCode')
   BEGIN
       DROP  Procedure  SyncNoteAttributesByFormCode
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -Module AuditPrograml
  Created   : Huasheng 2016/06/15
  Updated   : -
  Version   : 1.0.0
  说明：同步两个项目的附注结构
********************************************************************************/

CREATE PROCEDURE [dbo].[SyncNoteAttributesByFormCode]
	@SourcePID	varchar(100),	
	@EndPID	 varchar(100),
	@fsCode varchar(100)
AS
BEGIN
SET NOCOUNT ON
SET XACT_ABORT ON
BEGIN TRAN	
	
	--附注列
	DELETE NoteColumnAttribute WHERE ProjectID=@EndPID AND FSCode=@FSCode	
	INSERT INTO NoteColumnAttribute (ProjectID,ColumnCode,FSCode,FormCode,Title,SortID,[Type],IsConnect,ConnectName,IsMerge,IsCheckRow)
		SELECT @EndPID AS ProjectID,ColumnCode,FSCode,FormCode,Title,SortID,[Type],IsConnect,ConnectName,IsMerge,IsCheckRow
			FROM NoteColumnAttribute WHERE ProjectID=@SourcePID AND FSCode=@FSCode

	--附注行
	DELETE NoteRowAttribute WHERE ProjectID=@EndPID AND FSCode=@FSCode
	INSERT INTO NoteRowAttribute (ProjectID,NoteCode,UpperNoteCode,FormCode,FSCode,SortID,Bth,IsQzh,IsGdh,IsCheckRow,IsConnect)
		SELECT @EndPID AS ProjectID,NoteCode,UpperNoteCode,FormCode,FSCode,SortID,Bth,IsQzh,IsGdh,IsCheckRow,IsConnect
			FROM NoteRowAttribute WHERE ProjectID=@SourcePID AND FSCode=@FSCode

	--附注公式
	DELETE NoteFormula WHERE ProjectID=@EndPID AND FSCode=@FSCode
	INSERT INTO NoteFormula (ProjectID,FSCode,ColumnCode,NoteCode,FormCode,Formula)
		SELECT @EndPID AS ProjectID,FSCode,ColumnCode,NoteCode,FormCode,Formula
			FROM NoteFormula WHERE ProjectID=@SourcePID AND FSCode=@FSCode
	
	--附注表格
	DELETE NoteForm WHERE ProjectID=@EndPID AND FSCode=@FSCode		
	INSERT INTO NoteForm (ProjectID,FormCode,FormName,SortID,IsUse,FSCode,FormType,Remark,StructHash,DataHash,IsChangeRow,IsCombination) 
		SELECT @EndPID AS ProjectID,FormCode,FormName,SortID,IsUse,FSCode,FormType,Remark,NEWID(),NEWID(),IsChangeRow,IsCombination
			FROM NoteForm WHERE ProjectID=@SourcePID AND FSCode=@FSCode	

	--删除多余的附注关联关系
	DELETE NoteAndTB WHERE ProjectID=@EndPID AND FSCode=@FSCode AND
		NoteCode NOT IN (SELECT NoteCode FROM NoteRowAttribute WHERE ProjectID=@EndPID AND FSCode=@FSCode) 
	
	IF NOT EXISTS(SELECT 1 FROM NoteMemo WHERE FSCode=@FSCode AND ProjectID=@EndPID) BEGIN
		INSERT INTO NoteMemo (ProjectID,FormCode,Memo,memohelp) 
			SELECT @EndPID AS ProjectID,FormCode,Memo,memohelp FROM NoteMemo WHERE ProjectID=@SourcePID AND FSCode=@FSCode
	END

	IF NOT EXISTS(SELECT 1 FROM ComNoteMemo WHERE FSCode=@FSCode AND ProjectID=@EndPID) BEGIN
		INSERT INTO ComNoteMemo (ProjectID,FormCode,Memo,memohelp) 
			SELECT @EndPID AS ProjectID,FormCode,Memo,memohelp FROM NoteMemo WHERE ProjectID=@SourcePID AND FSCode=@FSCode
	END	

	--同步附注校验信息
	DELETE NoteCheckRule WHERE projectid=@EndPID AND FSCODE=@FSCode
		AND ID IN (SELECT ID FROM NoteCheckRule WHERE ProjectID=@SourcePID)
	INSERT INTO NoteCheckRule (ID,ProjectID,FSCode,FormType,CheckPathOne,CheckPathTwo,Remark,IsUseCom,IsUse,SelectType)
		SELECT ID,@EndPID AS ProjectID,FSCode,FormType,CheckPathOne,CheckPathTwo,Remark,IsUseCom,IsUse,SelectType 
			FROM NoteCheckRule WHERE projectid=@SourcePID AND FSCODE=@FSCode

COMMIT TRAN
END


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'SyncNoteAttributesFormPack')
   BEGIN
       DROP  Procedure  SyncNoteAttributesFormPack
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -Module AuditPrograml
  Created   : Huasheng 2016/06/15
  Updated   : -
  Version   : 1.0.0
  说明：从PACK同步项目的附注结构
********************************************************************************/

CREATE PROCEDURE [dbo].[SyncNoteAttributesFormPack]
	@SourcePID	varchar(100),	
	@EndPID	 varchar(100)
AS
BEGIN
SET NOCOUNT ON
SET XACT_ABORT ON
BEGIN TRAN	
	
	--附注列
	DELETE NoteColumnAttribute WHERE ProjectID=@EndPID 
		
	INSERT INTO NoteColumnAttribute (ProjectID,ColumnCode,FormCode,FSCode,Title,SortID,[Type],IsConnect,ConnectName,IsMerge,IsCheckRow)
		SELECT @EndPID AS ProjectID,ColumnCode,FormCode,FSCode,Title,SortID,[Type],IsConnect,ConnectName,IsMerge,IsCheckRow
			FROM Atspackage.DBO.NoteColumnAttribute WHERE ProjectID=@SourcePID AND FormCode IN (select FormCode from Atspackage.DBO.NoteForm where ProjectID=@SourcePID)

	--附注行
	DELETE NoteRowAttribute WHERE ProjectID=@EndPID 
		
	INSERT INTO NoteRowAttribute (ProjectID,NoteCode,UpperNoteCode,FormCode,FSCode,SortID,Bth,IsQzh,IsGdh,IsCheckRow,IsConnect)
		SELECT @EndPID AS ProjectID,NoteCode,UpperNoteCode,FormCode,FSCode,SortID,Bth,IsQzh,IsGdh,IsCheckRow,IsConnect
			FROM Atspackage.DBO.NoteRowAttribute WHERE ProjectID=@SourcePID AND FormCode IN (select FormCode from Atspackage.DBO.NoteForm where ProjectID=@SourcePID)

	--附注公式
	DELETE NoteFormula WHERE ProjectID=@EndPID 
		
	INSERT INTO NoteFormula (ProjectID,ColumnCode,NoteCode,FormCode,FSCode,Formula)
		SELECT @EndPID AS ProjectID,ColumnCode,NoteCode,FormCode,FSCode,Formula
			FROM Atspackage.DBO.NoteFormula WHERE ProjectID=@SourcePID AND FormCode IN (select FormCode from Atspackage.DBO.NoteForm where ProjectID=@SourcePID)
	
	--附注表格
	DELETE NoteForm WHERE ProjectID=@EndPID 
		
	INSERT INTO NoteForm (ProjectID,FormCode,FormName,SortID,IsUse,FSCode,FormType,Remark,StructHash,DataHash,IsChangeRow,IsCombination) 
		SELECT @EndPID AS ProjectID,FormCode,FormName,SortID,IsUse,FSCode,FormType,Remark,NEWID(),NEWID(),IsChangeRow,IsCombination
			FROM Atspackage.DBO.NoteForm WHERE ProjectID=@SourcePID

	--删除多余的附注关联关系
	DELETE NoteAndTB WHERE ProjectID=@EndPID AND
		NoteCode NOT IN (SELECT NoteCode FROM NoteRowAttribute WHERE ProjectID=@EndPID) 
			
	DELETE NoteMemo WHERE ProjectID=@EndPID AND
		FormCode NOT IN (SELECT FormCode FROM NoteForm WHERE  ProjectID=@EndPID)
	
	INSERT INTO NoteMemo (ProjectID,FormCode,Memo,memohelp) 
		SELECT @EndPID AS ProjectID,FormCode,Memo,memohelp FROM Atspackage.DBO.NoteMemo 
			WHERE ProjectID=@SourcePID AND FormCode NOT IN (SELECT FormCode FROM NoteForm WHERE  ProjectID=@EndPID)

	DELETE ComNoteMemo WHERE ProjectID=@EndPID AND
		FormCode NOT IN (SELECT FormCode FROM NoteForm WHERE  ProjectID=@EndPID)

	--同步附注校验信息
	DELETE NoteCheckRule WHERE projectid=@EndPID AND ID IN (SELECT ID FROM Atspackage.DBO.NoteCheckRule WHERE ProjectID=@SourcePID)
	INSERT INTO NoteCheckRule (ID,ProjectID,FSCode,FormType,CheckPathOne,CheckPathTwo,Remark,IsUseCom,IsUse,SelectType)
		SELECT ID,@EndPID AS ProjectID,FSCode,FormType,CheckPathOne,CheckPathTwo,Remark,IsUseCom,IsUse,SelectType 
			FROM Atspackage.DBO.NoteCheckRule WHERE projectid=@SourcePID 

COMMIT TRAN
END


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'SyncNoteCheckRule')
   BEGIN
       DROP  Procedure  SyncNoteCheckRule
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -Module AuditPrograml
  Created   : Huasheng 2016/12/16
  Updated   : -
  Version   : 1.0.0
  说明：同步两个项目的附注校验信息
********************************************************************************/

CREATE PROCEDURE [dbo].[SyncNoteCheckRule]
	@SourcePID	varchar(100),	
	@EndPID	 varchar(100),
	@FsCode	varchar(50)=null
AS
BEGIN
	SET NOCOUNT ON
	SET XACT_ABORT ON

	--同步附注校验信息
	IF(@FsCode is null) BEGIN	
		DELETE NoteCheckRule WHERE projectid=@EndPID AND ID IN (SELECT ID FROM NoteCheckRule WHERE ProjectID=@SourcePID)
		INSERT INTO NoteCheckRule (ID,ProjectID,FSCode,FormType,CheckPathOne,CheckPathTwo,Remark,IsUseCom,IsUse,SelectType)
			SELECT ID,@EndPID AS ProjectID,FSCode,FormType,CheckPathOne,CheckPathTwo,Remark,IsUseCom,IsUse,SelectType 
				FROM NoteCheckRule WHERE projectid=@SourcePID
	END ELSE BEGIN
		DELETE NoteCheckRule WHERE projectid=@EndPID and fscode=@FsCode AND ID IN (SELECT ID FROM NoteCheckRule WHERE ProjectID=@SourcePID)
		INSERT INTO NoteCheckRule (ID,ProjectID,FSCode,FormType,CheckPathOne,CheckPathTwo,Remark,IsUseCom,IsUse,SelectType)
			SELECT ID,@EndPID AS ProjectID,FSCode,FormType,CheckPathOne,CheckPathTwo,Remark,IsUseCom,IsUse,SelectType 
				FROM NoteCheckRule WHERE projectid=@SourcePID and fsCode=@FsCode
	END
END


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'UPDATEACCOUNTINGPOLICIES_Batch')
   BEGIN
       DROP  Procedure  UPDATEACCOUNTINGPOLICIES_Batch
	END
GO

/********************************************************************************
  DATABASE  : EAS
  COPYRIGHT : 2008 HUAPU (BEIJING)
  Customer  : Huapu
  PROJECT   : EAS -更新被审计单位选择和运用的会计政策数据
  CREATED   : DENGLL 2009/07/24
  Updated	:	2009/11/29 by dengll
  Updated	: DENGLL 2011/08/23
  Updated	: 20131204 by dengll
  VERSION   : 1.0.2
********************************************************************************/

CREATE PROCEDURE [dbo].[UPDATEACCOUNTINGPOLICIES_Batch]

	@PID	VARCHAR(100),
	@ID INT,
	@UPPERID varchar(max),
	@POLICIESID varchar(max),
	@ORDER INT,
	@POLICIES VARCHAR(50),
	@CLIENTPOLICIES TEXT,
	@POLICIESEVALUATION TEXT,
	@CHANGE INT,
	@OLDPOLICIES TEXT

AS


	
IF EXISTS(SELECT ID FROM AccountingPolicies	WHERE	ProjectID = @PID and ID = @ID)BEGIN
	
UPDATE	AccountingPolicies	SET
UPPERID=@UPPERID,
POLICIESID=@POLICIESID,
[ORDER]=@ORDER,
POLICIES=@POLICIES,
CLIENTPOLICIES=@CLIENTPOLICIES,
POLICIESEVALUATION=@POLICIESEVALUATION,
CHANGE=@CHANGE,
OLDPOLICIES=@OLDPOLICIES
WHERE		ProjectID = @PID and ID = @ID
	
END	ELSE	BEGIN
	
DECLARE	@_ID	INT,@_Order	int
		
SELECT @_Order=ISNULL(MAX([Order]),0)+1	FROM	AccountingPolicies	where	UPPERID=@UPPERID and ProjectID = @PID
	
INSERT	INTO AccountingPolicies
(ProjectID,ID, UPPERID, POLICIESID, [ORDER], POLICIES, CLIENTPOLICIES, POLICIESEVALUATION, CHANGE, OLDPOLICIES)	VALUES
(@PID,@ID,@UPPERID,@POLICIESID,@ORDER,@POLICIES,@CLIENTPOLICIES,@POLICIESEVALUATION,@CHANGE,@OLDPOLICIES)
END
		
	








GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'UpdateAccountingPoliciesChange_Batch')
   BEGIN
       DROP  Procedure  UpdateAccountingPoliciesChange_Batch
	END
GO

/********************************************************************************
  DATABASE  : EAS
  COPYRIGHT : 2008 HUAPU (BEIJING)
  Customer  : Huapu
  PROJECT   : EAS -更新被审计单位选择和运用的会计政策数据
  CREATED   : DENGLL 2009/07/24
  Updated	: 20131204 by dengll
  VERSION   : 1.0.1
********************************************************************************/

create Procedure [dbo].[UpdateAccountingPoliciesChange_Batch]
	@PID	varchar(100),
	@ID int, 
	@UpperID varchar(max), 
	@PoliciesID varchar(max), 
	@OldPolicies text,
	@ClientPolicies text,
	@ChangeDate datetime,
	@ChangeReasons text, 
	@ChangeResults text, 
	@ChangeEvaluation text
AS


IF EXISTS(SELECT ID FROM AccountingPolicies	WHERE	ID=@ID and ProjectID = @PID)BEGIN
UPDATE	AccountingPolicies	SET	
OldPolicies=@OldPolicies,
ChangeDate=@ChangeDate,
ChangeReasons=@ChangeReasons,
ChangeResults=@ChangeResults,
ChangeEvaluation=@ChangeEvaluation
where	ID=@ID and ProjectID = @PID
END
		







GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'UpdateAccountPeriod')
   BEGIN
       DROP  Procedure  UpdateAccountPeriod
	END
GO

/*
	
*/

CREATE PROCEDURE [dbo].UpdateAccountPeriod
	@ProjectID	varchar(100),
	@dateType	int
AS
BEGIN TRY	
--BEGIN	TransAction
SET NOCOUNT ON
SET XACT_ABORT ON

declare	@PeriodTable	table(Period	int,StartDate	datetime,EndDate datetime)
declare @i int=1;
declare @kjdate varchar(10);
select top 1	@kjdate=kjdate	from	dbo.kjqj	where	ProjectID=@ProjectID
while(@i<=12)begin
	declare @date	varchar(10)
	if(@i>9)
		set @date=@kjdate+cast(@i as varchar(2))+'01'
	else 
		set @date=@kjdate+'0'+cast(@i as varchar(2))+'01'

	INSERT @PeriodTable
	select	cast(CONVERT(char(6),@date,112) as int),	
	convert(varchar(10),DATEADD(mm, DATEDIFF(mm,0,@date), 0),111),
	CONVERT(varchar(10),DATEADD(ms,-3,DATEADD(mm, DATEDIFF(m,0,@date)+1, 0)),111)
	set @i=@i+1
end

if(@dateType!=0)
delete	dbo.accountperiod	where	ProjectID=@ProjectID	
		and	DateType=@dateType	and	year(StartDate)=year(@kjdate)
else 
	delete	dbo.accountperiod	where	ProjectID=@ProjectID	and	DateType=@dateType

insert into dbo.accountperiod(ProjectID,accountperiod,Period,StartDate,EndDate,DateType,currentyearPID)
select @ProjectID,B.Period,0, B.StartDate, B.EndDate,@dateType ,@ProjectID
from  @PeriodTable B where	not exists
(select  A.accountperiod from  dbo.accountperiod A where	A.ProjectID=@ProjectID and B.period = A.accountperiod )
--Commit TransAction
end try
begin catch
--ROLLBACK TransAction
	EXEC DBO.[PRO_THROW] @ProjectID,'UpdateAccountPeriod'
end catch

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'UpdateAccountUpperCodeLevel1')
   BEGIN
       DROP  Procedure  UpdateAccountUpperCodeLevel1
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2010 Huapu (Beijing)
  Customer  : 
  Project   : EAS -更新Account中的UppderCode，jb,ISmx字段值  STEP TWO
  Created   : 2011/05/24 by dengll,rshibin
  Version   : 1.0.8
********************************************************************************/
CREATE Procedure UpdateAccountUpperCodeLevel1
	@ProjectID nvarchar(50)
AS

BEGIN TRY
--BEGIN	TransAction
SET NOCOUNT ON
SET XACT_ABORT ON

declare	@km	varchar(1000)=@ProjectID+'km'
UPDATE ACCOUNT SET UpperCode=NULL WHERE ProjectID=@ProjectID;

declare	@isFParentID	int=0;
if exists(select * 
	from syscolumns 
	where id=object_id(@km) and lower([name])='FParentID')
	set	@isFParentID=1;

--如果存在FParentid字段列可以按新纪元的数据找上下级关系.by dengll 20180120
IF	(@isFParentID=1)begin
	declare	@sql	nvarchar(max)
	set	@sql='
		
		----提前获取更新锁,这个更新不启任何更新作用
		UPDATE DBO.ACCOUNT SET Attribute=1
		WHERE ProjectID='''+@ProjectID+''' AND 1!=1

		update	a set a.UpperCode=c.kmdm_jd
		from	dbo.account	a
		left	join	'+@km+'	b
		on a.accountcode	COLLATE Chinese_PRC_CS_AS_KS_WS	=b.kmdm_jd	COLLATE Chinese_PRC_CS_AS_KS_WS
		left	join	'+@km+'	c
		on	b.FParentID	COLLATE Chinese_PRC_CS_AS_KS_WS=c.FAccountID	COLLATE Chinese_PRC_CS_AS_KS_WS
		where	a.projectid='''+@ProjectID+'''
	'

	exec(@sql)
end 
else begin
--如果新纪元没有FParentID需要自己分析数据上下级关系
set nocount on

DECLARE @minLen INT
SELECT @minLen=MIN(LEN(accountCode)) FROM dbo.ACCOUNT with(nolock) WHERE ProjectID=@projectid
;
DECLARE @a1 TABLE(ID int IDENTITY(1,1),accountcode VARCHAR(100) COLLATE Chinese_PRC_CS_AS_KS_WS,uppercode VARCHAR(100) COLLATE Chinese_PRC_CS_AS_KS_WS,jb INT)
	;
INSERT @a1
SELECT accountcode,null,1
			FROM dbo.ACCOUNT with(nolock) WHERE ProjectID=@projectid AND LEN(accountcode)=@minLen

DECLARE @a2 TABLE(accountcode VARCHAR(100)COLLATE Chinese_PRC_CS_AS_KS_WS,lens int)

INSERT @a2
SELECT DISTINCT accountcode,len(accountcode)lens FROM dbo.Account with(nolock) WHERE ProjectID=@projectid	GROUP BY accountcode
DECLARE @jb INT=0
WHILE (1=1)BEGIN
	;
	WITH a3 AS (
		SELECT * from	@a2	WHERE accountcode NOT IN (SELECT accountcode FROM @a1))
	,a2 AS (SELECT * FROM a3	WHERE lens <= (SELECT MIN(lens)lens FROM a3))

	INSERT @a1		
	SELECT  a.AccountCode,aa.accountcode AS uppercode,aa.jb+1 AS jb 
	FROM  a2 a
	INNER JOIN @a1 aa
	ON  a.AccountCode LIKE aa.accountcode+'%'
	WHERE   aa.jb=@jb+1  
	IF @@ROWCOUNT=0
		BREAK;
	SET @jb=@jb+1	
END

--update account
declare @leve int=1000
declare @ix int=1
declare @ixend int=@leve 

while (1=1)begin
	update a set a.uppercode=b.uppercode
		from	dbo.Account  a
		inner join (select * from 	@a1 where id BETWEEN @ix	and @ixend)b
		on a.AccountCode collate Chinese_PRC_CS_AS_KS_WS=b.accountcode collate Chinese_PRC_CS_AS_KS_WS
		where a.projectid=@ProjectID
	
	if @@ROWCOUNT=0
		break;
	set @ix+=@leve 
	set	@ixend+=@leve 
end


---补充处理uppercode为Null的accountcode, 主要是由于accountcode长短不统一导致
DECLARE @a3 TABLE (accountcode VARCHAR (100) COLLATE Chinese_PRC_CS_AS_KS_WS, 
	uppercode VARCHAR (100) COLLATE Chinese_PRC_CS_AS_KS_WS, 
	jb INT)

INSERT @a3
SELECT accountcode,NULL,jb FROM dbo.ACCOUNT with(nolock) WHERE ProjectID=@projectid and Jb>1 AND UpperCode IS NULL

IF EXISTS(SELECT 1 FROM @A3)BEGIN

	DECLARE @a4 TABLE (accountcode VARCHAR (100)  COLLATE Chinese_PRC_CS_AS_KS_WS, 
		uppercode VARCHAR (100)  COLLATE Chinese_PRC_CS_AS_KS_WS, 
		jb INT)
	
	CREATE TABLE #account (ID int IDENTITY(1,1),accountcode VARCHAR(100) COLLATE Chinese_PRC_CS_AS_KS_WS,
		uppercode VARCHAR(100) COLLATE Chinese_PRC_CS_AS_KS_WS,jb INT)
	
	INSERT @a4
	SELECT accountcode,uppercode,jb FROM dbo.ACCOUNT WHERE len(accountcode)<(SELECT min(len(accountcode)) FROM @a3)

	;WITH a1 AS(
		SELECT accountcode,uppercode,jb FROM @a4
		UNION ALL
		SELECT a.accountcode,b.accountcode AS uppercode,a.jb FROM	@a3 a 
		inner JOIN  dbo.ACCOUNT 	b	with(nolock)
		ON a.accountcode!=b.accountcode AND
			 a.accountcode LIKE b.accountcode+'%'
		where a.jb=b.jb+1	and b.projectid=@ProjectID
	)

	insert #account
	select accountcode,uppercode,jb from a1	--where  AccountCode LIKE '6602%';

	set @leve =1000
	set @ix =1
	set @ixend =@leve 

	while (1=1)begin
		update a set a.uppercode=b.uppercode
			from	dbo.Account  a
			inner join (select * from 	#account where id BETWEEN @ix	and @ixend)b
			on a.AccountCode collate Chinese_PRC_CS_AS_KS_WS=b.accountcode collate Chinese_PRC_CS_AS_KS_WS
			where a.projectid=@ProjectID
	
		if @@ROWCOUNT=0
			break;
		set @ix+=@leve 
		set	@ixend+=@leve 
	end
	drop table #account
end	

end

--Commit TransAction
end try
begin catch
	EXEC DBO.[PRO_THROW] @ProjectID,'UpdateAccountUpperCodeLevel1'
end catch

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'UpdateAuxiliaryProjects')
   BEGIN
       DROP  Procedure  UpdateAuxiliaryProjects
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2010 Huapu (Beijing)
  Customer  : Huapu Chinese varchar(100),bj
  Project   : EAS -保存辅助核算明细
  Created   : 20181020
  Version   : 1.0.1
********************************************************************************/
CREATE Procedure [dbo].UpdateAuxiliaryProjects
@addState int,-- add=0 del=1
@projectid varchar(100),
@FSCode varchar(100),
@AccountCode varchar(100), 
@AuxiliaryCode varchar(100), 
@AccAuxName varchar(100), 
@DataType varchar(100), 
@TBGrouping varchar(100), 
@TBType int,
@IsMx int,
@IsAccMx int,
@IsAux int,
@kmsx varchar(100), 
@Yefx int,
@Sqqmye decimal(20,2),
@jfje decimal(20,2),
@dfje decimal(20,2),
@SourceFSCode	varchar(100)
AS

declare	@year	int
select @year=year(PeriodEndDate)
			from neweasv5.dbo.projectsinfo where projectid=@ProjectID
if(@addState=0)begin

if not exists(select 1 from 	dbo.TBDetail where projectid=@projectid and accountcode=@AccountCode and AuxiliaryCode=@AuxiliaryCode)
	
	insert dbo.TBDetail(ID,ProjectID,FSCode,AccountCode, AuxiliaryCode, AccAuxName, DataType, TBGrouping, TBType, IsMx, IsAccMx, IsAux, kmsx, Yefx, Sqqmye, jfje, dfje,SourceFSCode)
	values(newid(),@ProjectID,@FSCode,@AccountCode, @AuxiliaryCode, @AccAuxName, @DataType, @TBGrouping, @TBType, @IsMx, @IsAccMx, @IsAux, @kmsx, @Yefx, @Sqqmye, @jfje, @dfje,@SourceFSCode)
	
	 update dbo.TBDetail set ismx=0 where projectid=@ProjectID and accountcode=@AccountCode and datatype=0 and AuxiliaryCode=''	

	 UPDATE v
        SET v.ProjectCode = @AuxiliaryCode
        FROM dbo.TBVoucher v 
        INNER JOIN (SELECT * FROM dbo.AuxiliaryFDetail with(nolock)
        WHERE projectid = @ProjectID
        AND Accountcode =@AccountCode
        AND AuxiliaryCode =@AuxiliaryCode
		and	datayear=@year
		and datatype=0) a 
        ON v.ProjectID = a.ProjectID AND v.AccountCode = a.AccountCode AND v.FDetailID = a.FDetailID
        WHERE v.ProjectID = a.ProjectID

end	else if(@addState=1) begin

	delete dbo.TBDetail where projectid=@projectid and accountcode=@AccountCode and AuxiliaryCode=@AuxiliaryCode
	update dbo.TBDetail set ismx=1 where projectid=@ProjectID and accountcode=@AccountCode and datatype=0 and AuxiliaryCode=''	

	UPDATE v
        SET v.ProjectCode = ''
        FROM dbo.TBVoucher v 
        INNER JOIN (SELECT * FROM dbo.AuxiliaryFDetail with(nolock)
        WHERE projectid = @ProjectID
        AND Accountcode =@AccountCode
        AND AuxiliaryCode =@AuxiliaryCode
		and	datayear=@year
		and datatype=0) a 
        ON v.ProjectID = a.ProjectID AND v.AccountCode = a.AccountCode AND v.FDetailID = a.FDetailID
        WHERE v.ProjectID = a.ProjectID
end





GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'UpdateAuxiliaryProjectsWithTD')
   BEGIN
       DROP  Procedure  UpdateAuxiliaryProjectsWithTD
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2010 Huapu (Beijing)
  Customer  : Huapu Chinese varchar(100),bj
  Project   : EAS -保存辅助核算明细
  Created   : 20181020
  Version   : 1.0.1
********************************************************************************/

CREATE Procedure [dbo].UpdateAuxiliaryProjectsWithTD
@ProjectID varchar(100),  
@tvpTBDetail  [dbo].[TBDetailType] readonly  
AS  
  
delete t1 from  dbo.TBDetail t1 
	join  @tvpTBDetail t2  
		on t1.projectid collate  Chinese_PRC_CS_AS_KS_WS = t2.projectid 
			and t1.accountcode  collate  Chinese_PRC_CS_AS_KS_WS = t2.accountcode collate  Chinese_PRC_CS_AS_KS_WS
				and t1.AuxiliaryCode collate  Chinese_PRC_CS_AS_KS_WS = t2.AuxiliaryCode collate  Chinese_PRC_CS_AS_KS_WS 
					and t2.addState=1 

 insert dbo.TBDetail(ID,ProjectID,FSCode,AccountCode, AuxiliaryCode, AccAuxName, 
		DataType, TBGrouping, TBType, IsMx, IsAccMx, IsAux, kmsx, Yefx, Sqqmye, jfje, dfje,SourceFSCode)  
 select newid(), ProjectID,FSCode,AccountCode, AuxiliaryCode, AccAuxName, 
		0 as DataType, TBGrouping, TBType, IsMx, IsAccMx, IsAux, kmsx, Yefx, Sqqmye, jfje, dfje,'' 
			from   @tvpTBDetail t2 
				where t2.addState=0 
					and not exists(select 1 from dbo.TBDetail
							where t2.AccountCode COLLATE	Chinese_PRC_CS_AS_KS_WS=AccountCode COLLATE	Chinese_PRC_CS_AS_KS_WS	
								and t2.AuxiliaryCode COLLATE	Chinese_PRC_CS_AS_KS_WS=AuxiliaryCode COLLATE	Chinese_PRC_CS_AS_KS_WS
								 and t2.ProjectID  COLLATE	Chinese_PRC_CS_AS_KS_WS = ProjectID COLLATE	Chinese_PRC_CS_AS_KS_WS  
								  and t2.FSCode COLLATE	Chinese_PRC_CS_AS_KS_WS  = FSCode COLLATE	Chinese_PRC_CS_AS_KS_WS 
								)  
          
 -- update  tv set  tv.ismx=t2.addState      
 --from dbo.TBDetail tv     
 -- join   @tvpTBDetail t2      
 --  on t2.projectid collate  Chinese_PRC_CS_AS_KS_WS=tv.projectid     
 --   and tv.accountcode=t2.accountcode  collate  Chinese_PRC_CS_AS_KS_WS    
 --    --and tv.datatype =0     
 --    and tv.AuxiliaryCode=''  


  update  tv set  tv.ismx=t2.addState  
	from dbo.TBDetail tv 
		join   @tvpTBDetail t2  
			on t2.projectid collate  Chinese_PRC_CS_AS_KS_WS=tv.projectid 
				and tv.accountcode=t2.accountcode  collate  Chinese_PRC_CS_AS_KS_WS
					--and tv.datatype =0 
					and tv.AuxiliaryCode=''   
  
  UPDATE v
        SET v.ProjectCode =case when a.addState=1 then '' else a.AuxiliaryCode end
        FROM dbo.TBVoucher v 
		INNER JOIN (SELECT f.ProjectID ,f.AccountCode, f.FDetailID,f.AuxiliaryCode,t2.addState 
			FROM dbo.AuxiliaryFDetail f with(nolock) 
				join   @tvpTBDetail t2 
					on t2.projectid = f.ProjectID  collate  Chinese_PRC_CS_AS_KS_WS
						AND t2.Accountcode =f.AccountCode  collate  Chinese_PRC_CS_AS_KS_WS
							AND t2.AuxiliaryCode =f.AuxiliaryCode  collate  Chinese_PRC_CS_AS_KS_WS
							AND	f.datatype=0
						/*and t2.addState=1*/  ) a 
			ON v.ProjectID = a.ProjectID AND v.AccountCode = a.AccountCode AND v.FDetailID = a.FDetailID
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'UpdateBuilderSample')
   BEGIN
       DROP  Procedure  UpdateBuilderSample
	END
GO
/******************************************************************** ************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -Module xxx50 更新生成好的样本更新到302,303,304
  Created   : 20120917 by dengll
  Updated	: 201040821 by deng
  SampleSelectedYesno=@SampleSelectedYesno,
  by dengll added auxid update 
  Version   : 1.0.1
********************************************************************************/
CREATE Procedure [dbo].[UpdateBuilderSample]
@pid	varchar(500),
@accountcode	varchar(500),
@auxCode	varchar(500),
@SampleSelectedType	int,
@TBGrouping varchar(500)
AS
	declare	@sst	int=0,@auxid	int=-1 ,@tbgroupingIndex int =0

	
begin
	if(isnull(@auxCode, '')	= '')
		update	a	
		set	a.SampleSelectedType=@SampleSelectedType
		from TBDetailExtra a
		join TBDetail b
		on a.id=b.id
		where	b.ProjectID = @pid and b.accountcode=@accountcode and b.ismx=1
	else
		update	a	
		set	a.SampleSelectedType=@SampleSelectedType
		from TBDetailExtra a
		join TBDetail b
		on a.id=b.id
		where	b.ProjectID = @pid and b.accountcode=@accountcode	and	b.AuxiliaryCode=@auxCode  and b.ismx=1
end

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'UpdateBuilderSampleBC')
   BEGIN
       DROP  Procedure  UpdateBuilderSampleBC
	END
GO

/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -Module xxx50 更新生成好的样本更新到304
  Created   : 20120924 by dengll
  Updated	: 201040821 by deng
  Version   : 1.0.0
********************************************************************************/
create Procedure [dbo].[UpdateBuilderSampleBC]
@pid	varchar(500),
@voucherid	varchar(100),
@incno	varchar(500),
@SampleSelectedType	int
AS

	
	update	TBVoucher	set	SampleSelectedType=@SampleSelectedType
			where	ProjectID = @pid and  voucherid=@voucherid	and	incno=@incno


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'UpdateCarryforward')
   BEGIN
       DROP  Procedure  UpdateCarryforward
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2010 Huapu (Beijing)
  Customer  : Huapu Chinese,bj
  Project   : EAS -
  Created   : 2013/1/9 by jpeng
  Updated   : 2015-2-14 by dshufa 增加对表302中（fscode= ''74200'' and accountcode=''Wjzbnlr''）的处理，以保证未分配利润可以生成附注。
  Updated   : 2016-3-30 为兼容审计调整修改原报，在@Carryforward = 0（账结法）下注释掉--a.jfje=0,
  Version   : 1.0.1
********************************************************************************/
CREATE Procedure [dbo].[UpdateCarryforward]
@PID varchar(100),
@Carryforward int,
@wjzlr  decimal(20,2)

AS

update PIDInformation  set Carryforward=@Carryforward where projectID=@pid
if @Carryforward = 1
   begin
	update a  set a.Sqqmye = t1.Sqqmye, a.Qqccgz = t1.Qqccgz, a.jfje = t1.jfje, a.dfje = t1.dfje, 
				  a.CrjeJF = t1.CrjeJF, a.CrjeDF = t1.CrjeDF, a.AjeJF = t1.AjeJF, a.AjeDF = t1.AjeDF, 
				  a.RjeJF = t1.RjeJF, a.RjeDF = t1.RjeDF
    from tbfs a
    inner join tbfs t1
		ON t1.fscode = '80000' and a.fscode=  '74200' and a.projectid=t1.projectid
	and a.projectid=@pid
end
else
begin
	update a  	set a.dfje=@wjzlr,--a.jfje=0,
	a.AjeJF = t1.AjeJF, a.AjeDF = t1.AjeDF, a.RjeJF = t1.RjeJF, a.RjeDF = t1.RjeDF
    from tbfs a
    inner join tbfs t1
		ON t1.fscode = '80000' and a.fscode=  '74200' and a.projectid=t1.projectid and a.projectid=@pid
end

--将fscode=74200 赋值给表302中（fscode= ''74200'' and accountcode=''Wjzbnlr''）

--IF not EXISTS(select 1 from tbacc where projectID=@pid and fscode= '74200' and accountcode='Wjzbnlr')
--       begin
--	   insert  tbacc 
--       select FSCode, AccountCode,AccountName, TBType, IsMx, kmsx, Yefx, TBGrouping,Sqqmye, Qqccgz, qcye, jfje, dfje, Qmye,
--              CrjeJF, CrjeDF, Unchecked, AjeJF, AjeDF, Adjusted, RjeJF, RjeDF, Checked, TaxBase, PY1, CRjeTarget, Memo, ReferenceList,
--              SelectedSampleLebelYesNo, MaterialityProgramIndex, MaterialityProgram, SelectSampleMethod, DrSelectedSampleLebelYesNo, 
--              DrMaterialityProgramIndex, DrMaterialityProgram, DrSelectSampleMethod, CrSelectedSampleLebelYesNo, CrMaterialityProgramIndex,
--              CrMaterialityProgram, CrSelectSampleMethod, SampleSelectedYesNo, SampleSelectedType, ConsultBalance, ConfirmBalance, ConsultType, 
--              RelatedClientID, Notaux, SampleSelecteStep, ErrorYesNO, StepofSample, AdjustedNo, dfje1, dfje2, jfje1, jfje2
--              from Atspackage.DBO.AudCASTBAcc where accountcode='Wjzbnlr'
--end
       update acc
	       	  set acc.Sqqmye= fs.Sqqmye,acc.Qqccgz= fs.Qqccgz,
				  acc.Jfje= fs.Jfje,acc.Dfje= fs.Dfje,
				  acc.CrjeJF= fs.CrjeJF,acc.CrjeDF= fs.CrjeDF,
				  acc.AjeJF= fs.AjeJF,acc.AjeDF= fs.AjeDF,
				  acc.RjeJF= fs.RjeJF,acc.RjeDF= fs.RjeDF
			  from tbdetail acc inner join  tbfs fs on acc.fscode=fs.fscode and acc.projectid=fs.projectid
			  and acc.projectid=@pid and fs.fscode= '74200' and acc.accountcode='Wjzbnlr'

--重新试算平衡 
exec dbo.UpdateTBfsandTBaccbyTBGrouping  @pid
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'UpdateConsultTypeAndConsultBalance')
   BEGIN
       DROP  Procedure  UpdateConsultTypeAndConsultBalance
	END
GO

/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : 
  Project   : EAS -更新tbwl字段
  Created   : Dengll PM 2009-10-19
  Updated   : by jpeng 2011/07/11
  Updated	: by dengll
  Version   : 1.0.1
********************************************************************************/

create Procedure [dbo].[UpdateConsultTypeAndConsultBalance]
	@projectid	varchar(100),
	@AccountCode	varchar(200),
	@auxiliarycode	varchar(200),
	@ConsultType	VARCHAR(200),
	@ConsultBalance	decimal(20,2),
	@Sendletteryesno	int,
	@FsCode varchar(100)
AS

	UPDATE	a	SET	ConsultType=ISNULL(@ConsultType,''),ConsultBalance=ISNULL(@ConsultBalance,0)	
	from DBO.TBDetailExtra a
	join TBDetail b
	on a.ID = b.ID 
	where b.ProjectID=@ProjectID and b.AccountCode=@AccountCode and b.auxiliarycode=@auxiliarycode and b.FsCode = @FsCode
	update	DBO.WlhzandTB set Sendletteryesno=@Sendletteryesno	where ProjectID=@ProjectID and	AccountCode=@AccountCode and auxiliarycode=@auxiliarycode and FsCode = @FsCode


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'UpdateContentOfSampleTest')
   BEGIN
       DROP  Procedure  UpdateContentOfSampleTest
	END
GO
/********************************************************************************
  Copyright : HuaPu
  Customer  : HuaPu
  Project   : Easy Audit System - BCSampleTest
  Created   : by LiNa 2012/09/013
  Updated   : by Lina 2013/01/14  added decimal(20,2)
*********************************************************************************/
create Procedure [dbo].[UpdateContentOfSampleTest]
(
	@pid varchar(50),
	@VoucherID varchar(100),
	@IncNo varchar(50),
	@contentID varchar(100),
	@NumberofAE varchar(100),
	@DateofAE datetime,
	@AmountofAE decimal(20,2),
	@QuantityofAE decimal(20,2),
	@AuditEvidence varchar(500),
	@copyofEvidence varchar(50),-- by dengll 151204
	@RecordType int,
	@AccountCode varchar(50),
	@AuxiliaryCode varchar(50),
	@ErrorYesNo int,
	@Flag varchar(50),
	@AdjustedNo varchar(50)
)
AS
--DECLARE @tbRecordofST nvarchar(50),@sql nvarchar(4000),@tbAux varchar(50),@tbVoucher varchar(50)

--SET @tbAux = dbo.gettablename(@pid,303);
--SET @tbVoucher = dbo.gettablename(@pid,304);
--SET @tbRecordofST=dbo.gettablename(@pid,305)
--SET @sql='

--IF(@Flag = 'A')
--BEGIN
--	IF (@AuxiliaryCode = '')
--		BEGIN
--			IF EXISTS(SELECT 1 FROM DBO.TBAccExtra WHERE ProjectID=@pid and AccountCode = @AccountCode)
--			BEGIN
--				UPDATE DBO.TBAccExtra SET ErrorYesNo = @ErrorYesNo,AdjustedNo=@AdjustedNo
--				Where ProjectID=@pid and AccountCode = @AccountCode
--			END
--		END
--	ELSE
--		BEGIN
--			IF EXISTS(SELECT 1 FROM DBO.TBAuxExtra WHERE ProjectID=@pid and AccountCode=@AccountCode and auxiliaryCode=@AuxiliaryCode)
--			BEGIN
--				UPDATE DBO.TBAuxExtra set ErrorYesNo = @ErrorYesNo,AdjustedNo=@AdjustedNo Where ProjectID=@pid and AccountCode=@AccountCode and auxiliaryCode=@AuxiliaryCode
--			END
--		END
--END
--IF(@Flag = 'BC')
--BEGIN
--	IF EXISTS(SELECT 1 FROM DBO.TBVoucher WHERE ProjectID=@pid and VoucherID = @VoucherID)
--	BEGIN
--		UPDATE DBO.TBVoucher SET ErrorYesNo=@ErrorYesNo/*,adjustedNo=@AdjustedNo*/ where ProjectID=@pid and VoucherID = @VoucherID
--	END
--END

IF(@contentID is not NULL)
BEGIN

	IF EXISTS(SELECT RecordID from DBO.RecordOfSampleTest WHERE ProjectID=@pid and VoucherID=@VoucherID AND ContentID=@contentID)
		BEGIN
			UPDATE dbo.RecordOfSampleTest
				SET NumberofAE=@NumberofAE,
					DateofAE=@DateofAE,
					AmountofAE=@AmountofAE,
					QuantityofAE=@QuantityofAE,
					AuditEvidence=@AuditEvidence
			WHERE projectID=@pid and VoucherID=@VoucherID AND ContentID=@contentID
		END
	ELSE
		BEGIN
			INSERT INTO dbo.RecordOfSampleTest (ProjectID,VoucherID,IncNo,ContentID,NumberofAE,DateofAE,AmountofAE,QuantityofAE,AuditEvidence,RecordType,RecordID)
			VALUES(@pid,@VoucherID,@IncNo,@contentID,@NumberofAE,@DateofAE,@AmountofAE,@QuantityofAE,@AuditEvidence,@RecordType,NEWID())
		END
END
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'UpdateCStyleLive')
   BEGIN
       DROP  Procedure  UpdateCStyleLive
	END
GO
 /********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu Baden
  Project   : EAS -xxx50 样本层数据
  Created   : 2010/10/14 by len
  updated   : 2010/11/10 by len
  updated   : 2012/05/07 by len
  updated   : 2012/08/27 by len
  Version   : 1.0.3
********************************************************************************/
CREATE Procedure UpdateCStyleLive
@pid	VARCHAR(max),
@code	VARCHAR(max),
@upperCode	VARCHAR(max),
@tbtype	INT,
@jfname	VARCHAR(max),
@MaterialityProgram	VARCHAR(max),
@SampleMethod	VARCHAR(max),
@EASREF	VARCHAR(max),
@SelectedSampleLebelYesNo	int
AS

BEGIN TRANSACTION
IF(@MaterialityProgram	IS NOT NULL	or @SampleMethod	is not null)BEGIN
	EXEC	dbo.AccountStylebookSavetoTb	@pid,@code,@upperCode,@tbtype,@jfname,@SelectedSampleLebelYesNo,@SampleMethod,@MaterialityProgram,0,@EASREF
END	

DECLARE	@T	TABLE(ACCOUNTCODE	VARCHAR(100) collate Chinese_PRC_CS_AS_KS_WS,TBGROUPING VARCHAR(100) collate Chinese_PRC_CS_AS_KS_WS)
DECLARE	@T1	TABLE(ACCOUNTCODE	VARCHAR(100) collate Chinese_PRC_CS_AS_KS_WS,TBGROUPING VARCHAR(100) collate Chinese_PRC_CS_AS_KS_WS,ISMX INT)
INSERT	@T EXEC DBO.ByCodeFindForACCThisAfterCode	@PID,@code
INSERT	@T1 EXEC DBO.ByCodeFindForACCAUXThisAfterCode @PID,@CODE,@upperCode

DECLARE @ROW_COUNT INT,@INDEX INT,@ACCOUNTCODE	VARCHAR(100),@TBGROUPING VARCHAR(100)
SET @INDEX=1
SELECT @ROW_COUNT=COUNT(1) FROM @T
WHILE(@INDEX<=@ROW_COUNT) BEGIN
	SELECT TOP 1 @ACCOUNTCODE=ACCOUNTCODE,@TBGROUPING=TBGROUPING FROM @T
	UPDATE T1 SET SAMPLESELECTEDTYPE=0 FROM DBO.TBDetailExtra T1 INNER JOIN DBO.TBDetail T2
		ON T1.ID = t2.ID and IsAux = 0 and SourceFSCode = ''
		WHERE T1.PROJECTID=@PID AND T2.ACCOUNTCODE=@ACCOUNTCODE AND T2.TBGROUPING=@TBGROUPING AND T1.SampleSelectedType<2
	
	DELETE @T WHERE ACCOUNTCODE=@ACCOUNTCODE AND TBGROUPING=@TBGROUPING
	SET @INDEX=@INDEX+1
END

--UPDATE T1 SET SAMPLESELECTEDYESNO=0,SAMPLESELECTEDTYPE=0 FROM DBO.TBAccExtra	T1
--INNER	JOIN	@T	T2
--ON	T1.ACCOUNTCODE=T2.ACCOUNTCODE and T1.TBGROUPING=T2.TBGROUPING	AND	T1.SampleSelectedType<2 AND T1.PROJECTID=@PID

UPDATE T1 SET SAMPLESELECTEDTYPE=0 FROM DBO.TBDetailExtra	T1
join TBDetail  t3
on t1.ID = t3.ID and  IsAux = 1 and SourceFSCode = ''
INNER	JOIN	@T1	T2
ON	T3.ACCOUNTCODE=T2.ACCOUNTCODE and T3.AuxiliaryCode=T2.TBGROUPING	AND	T1.SampleSelectedType<2	AND	T2.ISMX=1 AND T1.PROJECTID=@PID
	

COMMIT	TRANSACTION

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'UpdateERisksLevel')
   BEGIN
       DROP  Procedure  UpdateERisksLevel
	END
GO

 /********************************************************************************
  Database  : EAS
  Copyright :
  Customer  : Huapu 
  Project   : 舞弊风险 
  Created   : 20170705 by jpeng
  Updated   : 
  Version   : 
********************************************************************************/
CREATE PROCEDURE [dbo].[UpdateERisksLevel] 
@pid varchar(255),
@ID int,
@RiskYesNo int,
@ImportantRiskYesNo int,
@Reference varchar(255)
AS
	
update  ERisksLevel set RiskYesNO=convert(varchar,@RiskYesNo),ImportantRiskYesNo=convert(varchar,@ImportantRiskYesNo),Reference=@Reference
where ID=convert(varchar,@ID) 
and projectID = @pid



		









GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'UpdateERisksLevelANDInherentRisk')
   BEGIN
       DROP  Procedure  UpdateERisksLevelANDInherentRisk
	END
GO
 /********************************************************************************
  Database  : EAS
  Copyright : HuaPu
  Customer  : 
  Project   : 舞弊风险因素分析
  Created   : 20170705 by jpeng
  Updated   : 
  Version   : 
********************************************************************************/
CREATE PROCEDURE [dbo].[UpdateERisksLevelANDInherentRisk] 
@pid varchar(255)
AS
declare @sql nvarchar(4000)
update A 
set A.ImportantRiskYesNo=1,A.SpecialRiskYesNo=1 
from InherentRisk A
inner join ERisksLevel B 
on A.ID = B.RiskID
where B.ImportantRiskYesNo=1
and A.ProjectID = @pid
and B.ProjectID = @pid
		
			
UPDATE t1 
SET t1.ImportantRiskYesNo=0,t1.SpecialRiskYesNo=0 
FROM InherentRisk t1 
INNER JOIN ERisksLevel t2 
ON t1.ID=t2.RiskID
WHERE t1.id NOT IN(SELECT RiskID FROM ERisksLevel WHERE ImportantRiskYesNo=1)
and t1.ProjectID = @pid
and t2.ProjectID = @pid

DELETE FROM InherentRiskAccount	
WHERE RISKID IN (SELECT	DISTINCT RISKID from ERisksLevel)
AND RISKID NOT IN 
(SELECT	DISTINCT A.RISKID FROM InherentRiskAccount A
INNER	JOIN	ERisksLevel	B
ON A.RISKID=B.[RiskID] AND B.ImportantRiskYesNo=1)
and ProjectID = @pid









GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'UpdateFllxToVoucher')
   BEGIN
       DROP  Procedure  UpdateFllxToVoucher
	END
GO
/********************************************************************************
  Copyright : EAS
  Customer  : HuaPu
  Project   : EAS -更新分录类型数据
  Created   : 17919 by dengll
  Updated	: 
*********************************************************************************/
CREATE Procedure [dbo].[UpdateFllxToVoucher]
	@PID			 VARCHAR(50),
	@voucherid	varchar(50),
	@fllx	int
AS
	update dbo.tbvoucher set fllx=@fllx where projectid=@pid and voucherid=@voucherid
	 



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'UpdateNewAccountingAge')
   BEGIN
       DROP  Procedure  UpdateNewAccountingAge
	END
GO

/********************************************************************************
  DATABASE  : EAS
  COPYRIGHT : 2008 HUAPU (BEIJING)
  Customer  : Huapu
  PROJECT   : EAS -更新重要会计估计
  CREATED   : DENGLL 2009/07/24
  Updated	: 09/08/03 by dengll changed set	@filter=''ZLD''+CAST(@AgeCeiling AS VARCHAR) to set	@filter=''ZLD''+CAST(@Order AS VARCHAR)
  updated	:	Sampling=@Sampling	by dengll 2009/09/28
  updated	:	by jpeng 2011/07/07
  Updated	:	20131125 by dengll	update	t.126
  Updated	:	20151112 by dengll BadDebtRate not null
  VERSION   : 1.0.3
********************************************************************************/

CREATE Procedure [dbo].[UpdateNewAccountingAge]
	@Projectid	varchar(100),
	@ID	int,
	@Order varchar (50),
	@FieldName	varchar (50),	
	@FieldText varchar (50),
	@AgeMinimum int,
	@AgeCeiling int,
	@BadDebtRate float,
	@Sampling bit ,
	@ApplyYesno	int
AS

DECLARE	@APPLYYESNO1	INT,@AGEMINIMUM1	INT,@AGECEILING1	INT,@FSCODE	VARCHAR(MAX),@BADDEBTRATE1	FLOAT,
@sql nvarchar(max)
IF	EXISTS(SELECT	1	FROM	AccountingAgeOfFscode	WHERE	ID=@ID and ProjectID = @Projectid)
BEGIN
SELECT	@APPLYYESNO1=APPLYYESNO,@AGEMINIMUM1=AGEMINIMUM,@AGECEILING1=AGECEILING,@FSCODE=FSCODE,@BADDEBTRATE1=BADDEBTRATE
FROM	AccountingAgeOfFscode	WHERE	ID=@ID and ProjectID = @Projectid
--IF(@APPLYYESNO1=@APPLYYESNO	AND	(@AGEMINIMUM1!=@AGEMINIMUM	OR	@AGECEILING1!=@AGECEILING))
--UPDATE	Tbwlzl	SET	AGEANALYSIS=0,BALANCEANALYSIS=0	WHERE	FSCODE=@FSCODE and ProjectID = @Projectid
--ELSE	IF(@APPLYYESNO1=@APPLYYESNO	AND	@BADDEBTRATE1!=@BADDEBTRATE)
--UPDATE	Tbwlzl	SET	BALANCEANALYSIS=0	WHERE	FSCODE=@FSCODE and ProjectID = @Projectid
--ELSE	IF(@APPLYYESNO1!=@APPLYYESNO)
UPDATE	Tbwlzl	SET	AGEANALYSIS=0,BALANCEANALYSIS=0	WHERE	FSCODE=@FSCODE and ProjectID = @Projectid
END

	
update	AccountingAgeOfFscode set	
[Order]=@Order,
FieldName=@FieldName,
FieldText=@FieldText,
AgeMinimum=@AgeMinimum,
AgeCeiling=@AgeCeiling,
BadDebtRate=isnull(@BadDebtRate,0),
Sampling=@Sampling,
ApplyYesno=@ApplyYesno
where	ID=@ID and ProjectID = @Projectid

if (@ApplyYesno=0)
begin 
set @sql = 'update Tbwlzl set '  +@FieldName+'=0 where ProjectID='''+@Projectid+''' and fscode='''+@FSCODE+''''
print(@sql)
exec(@sql)
end


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'UpdateR1Risk')
   BEGIN
       DROP  Procedure  UpdateR1Risk
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu Switzerland, Baden
  Project   : EAS -25200 数据保存过程
  Created   : 2010/10/23 by len
  Version   : 1.0.0
********************************************************************************/
create Procedure [dbo].[UpdateR1Risk]
@pid	VARCHAR(max),
@id	INT,
@RiskSource	VARCHAR(MAX),
@Results	NVARCHAR(max),
@Referencelist	NVARCHAR(max)
AS

update	InherentRisk	set	Results=@Results,Referencelist=@Referencelist	where	id=@id	and	RiskSource=@RiskSource and ProjectID = @pid









GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'UpdateR1RiskAccount')
   BEGIN
       DROP  Procedure  UpdateR1RiskAccount
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 EAS (Beijing)
  Customer  : Huapu
  Project   : EAS -25200 数据保存过程 (保存认定层次风险的结论和索引号)
  Created   : 2010/10/23 by len
  Version   : 1.0.0
********************************************************************************/
create Procedure [dbo].[UpdateR1RiskAccount]
@pid	VARCHAR(max),
@id	INT,
@RiskSource	VARCHAR(MAX),
@Results	NVARCHAR(max),
@Referencelist	NVARCHAR(max)
AS

update	InherentRiskAccount
set	Memo=@Results,Referencelist1=@Referencelist	where	id=@id	and	RiskSource=@RiskSource and ProjectID = @pid


		








GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'UpdateRecordofSampleImage')
   BEGIN
       DROP  Procedure  UpdateRecordofSampleImage
	END
GO
/********************************************************************************
  Copyright : HuaPu
  Customer  : HuaPu
  Project   : Easy Audit System - 单独更新上传附件名称
  Created   : by Huasheng 2016/03/05 
  Updated   : 
*********************************************************************************/
CREATE Procedure [dbo].[UpdateRecordofSampleImage]
(
	@pid varchar(50),
	@VoucherID varchar(50),
	@IncNo varchar(50),
	@contentID varchar(50),
	@RecordType int,
	@copyofEvidence varchar(50)	
)
AS

IF EXISTS(SELECT RecordID from RecordOfSampleTest  WHERE ProjectID = @pid and  VoucherID=@VoucherID AND ContentID=@contentID	)
		--and	recordtype=@RecordType)
	BEGIN
		UPDATE RecordOfSampleTest 
			SET copyofEvidence=@copyofEvidence
		WHERE ProjectID = @pid and VoucherID=@VoucherID AND ContentID=@contentID	
			--and	recordtype=@RecordType
	END
ELSE
	BEGIN
		INSERT INTO RecordOfSampleTest  (ProjectID,VoucherID,IncNo,ContentID,RecordID,RecordType,copyofEvidence)
		VALUES(@pid,@VoucherID,@IncNo,@contentID,newid(),@RecordType,@copyofEvidence)
	END


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'UpdateSampleTestInfo')
   BEGIN
       DROP  Procedure  UpdateSampleTestInfo
	END
GO
/********************************************************************************
  Copyright : HuaPu
  Customer  : HuaPu
  Project   : Easy Audit System - BCSampleTest
  Created   : by LiNa 2012/09/07
*********************************************************************************/
CREATE Procedure UpdateSampleTestInfo
(
	@pid varchar(50),
	@fsCode varchar(50),
	@contentID int,
	@functionType varchar(10),
	@iNumberofAE INT,
	@iDateofAE INT,
	@iAmountofAE INT,
	@iQuantityofAE INT,
	@iAuditEvidence INT,
	@icopyofEvidence	int,
	@display int
	--@recordtype	int
)
AS

--IF EXISTS(SELECT contentID from dbo.ContentofsampleTestInfo WHERE ProjectID=@pid and contentID=@contentID and fscode=@fscode	and	recordtype=@recordtype)
--	BEGIN
--		UPDATE dbo.ContentofsampleTestInfo
--			SET NumberofAE=@iNumberofAE,
--				DateofAE=@iDateofAE,
--				AmountofAE=@iAmountofAE,
--				QuantityofAE=@iQuantityofAE,
--				AuditEvidence=@iAuditEvidence,
--				copyofEvidence=@icopyofEvidence
--		WHERE ProjectID=@pid and contentID=@contentID and fscode=@fscode	and	recordtype=@recordtype
		
--		UPDATE dbo.ContentofSampleTest
--				SET Display = @display
--			WHERE ProjectID=@pid and contentID=@contentID and fscode = @fscode	and	recordtype=@recordtype
--	END

--ELSE	
--兼容数据
IF EXISTS(SELECT contentID from dbo.ContentofsampleTestInfo 
	WHERE ProjectID=@pid and contentID=@contentID and fscode=@fscode and functionType=@functionType)
	BEGIN
		UPDATE dbo.ContentofsampleTestInfo
			SET NumberofAE=@iNumberofAE,
				DateofAE=@iDateofAE,
				AmountofAE=@iAmountofAE,
				QuantityofAE=@iQuantityofAE,
				AuditEvidence=@iAuditEvidence,
				recordtype=null,
				copyofEvidence=@icopyofEvidence
		WHERE ProjectID=@pid and contentID=@contentID and fscode=@fscode and functionType=@functionType
		
		UPDATE dbo.ContentofSampleTest
				SET Display = @display,
				recordtype=null
			WHERE ProjectID=@pid and contentID=@contentID and fscode = @fscode and functionType=@functionType
	END
ELSE
	BEGIN
		INSERT INTO dbo.ContentofsampleTestInfo
		VALUES(@pid,@fsCode,@contentID,@functionType,null,@iNumberofAE,@iDateofAE,@iAmountofAE,@iQuantityofAE,@iAuditEvidence,@icopyofEvidence)
		
		INSERT INTO dbo.ContentofSampleTest
			VALUES(@pid,@fsCode,@functionType,@contentID,null,null,@display)
	END

	




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'UpdateTbDetailISMXISAUXISACCMX')
   BEGIN
       DROP  Procedure  UpdateTbDetailISMXISAUXISACCMX
	END
GO
/********************************************************************************
  Copyright : HuaPu
  Customer  : HuaPu
  Project   : Easy Audit System - 更新ismx,isaux,isaccmx
  Created   : 20181022 dengll
  Updated	: 20181214 hhy
*********************************************************************************/
CREATE Procedure [dbo].[UpdateTbDetailISMXISAUXISACCMX]
	@projectid varchar(100)
AS

SET NOCOUNT ON

--BEGIN TRAN;

SELECT DISTINCT TBGrouping INTO #TBGrouping1
	FROM TBDetail
	WHERE ProjectID = @projectID
		AND AuxiliaryCode = '';
CREATE INDEX idx_tbgrouping1 ON #TBGrouping1(TBGrouping);

SELECT DISTINCT TBGrouping INTO #TBGrouping2
	FROM TBDetail
	WHERE ProjectID = @projectID
CREATE INDEX idx_tbgrouping2 ON #TBGrouping2(TBGrouping);

UPDATE TBDetail
	SET IsAux = 0
	WHERE ProjectID = @projectID
		AND AuxiliaryCode = '';

UPDATE TBDetail
	SET IsAux = 1
	WHERE ProjectID = @projectID
		AND AuxiliaryCode <> '';

UPDATE TBDetail
	SET IsAccMx = 0
	WHERE ProjectID = @projectID
		AND (AuxiliaryCode <> ''
			OR AccountCode COLLATE Chinese_PRC_CS_AS_KS_WS IN (SELECT TBGrouping FROM #TBGrouping1));

UPDATE TBDetail
	SET IsAccMx = 1
	WHERE ProjectID = @projectID
		AND (AuxiliaryCode = ''
			AND AccountCode COLLATE Chinese_PRC_CS_AS_KS_WS NOT IN (SELECT TBGrouping FROM #TBGrouping1));

UPDATE TBDetail
	SET IsMx = 0
	WHERE ProjectID = @projectID
		AND (AuxiliaryCode = ''
			AND (AccountCode COLLATE Chinese_PRC_CS_AS_KS_WS IN (SELECT TBGrouping FROM #TBGrouping2)));

UPDATE TBDetail
	SET IsMx = 1
	WHERE ProjectID = @projectID
		AND (AuxiliaryCode <> ''
			OR (AccountCode COLLATE Chinese_PRC_CS_AS_KS_WS NOT IN (SELECT TBGrouping FROM #TBGrouping2)));

--COMMIT TRAN;


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'UpdateTBfsandTBaccbyTBGrouping')
   BEGIN
       DROP  Procedure  UpdateTBfsandTBaccbyTBGrouping
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2010 EAS (Beijing)
  Customer  : Huapu
  Project   : EAS -根据TBGrouping，层层向上汇总tb数据（包括PY1） 
  Created   : 2011/08/04 by 
  Updated   : 20150205 by hhy 使用新方法
  Updated   : 20150214 by dshufa 两处修改：
              1.根据业务委托类型ContinueDate 判断是否更新PY1
              2.将表301.fscode='74200'数据同步更新到表302中（fscode= ''74200'' and accountcode=''Wjzbnlr''），以保证未分配利润可以生成附注。
  Updated   : 20150310 by dshufa 原有代码insert into #tb2 values(''XXXX'', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
                                 导致表301.fscode='74200'的Sqqmye, Qqccgz, qcye, jfje, dfje被清零,改用其他方法实现.
  Version   : 1.1.3
********************************************************************************/

CREATE Procedure [dbo].[UpdateTBfsandTBaccbyTBGrouping]
@Projectid nvarchar(50)
AS

SET NOCOUNT ON

declare @level int;
declare @code1 varchar(100);
declare @code2 varchar(100);
declare @carryforward int,@jlr	decimal(20,2);

IF object_id('#tb1') IS NOT NULL DROP TABLE #tb1;
IF object_id('#tb2') IS NOT NULL DROP TABLE #tb2;
IF object_id('#tb3') IS NOT NULL DROP TABLE #tb3;

create table #tb1(Code varchar(100) collate Chinese_PRC_CS_AS_KS_WS, TBGrouping varchar(100) collate Chinese_PRC_CS_AS_KS_WS, TBType int, CodeType int,
				  Sqqmye decimal(20,2), Qqccgz decimal(20,2), jfje decimal(20,2), 
				  dfje decimal(20,2), CrjeJF decimal(20,2), CrjeDF decimal(20,2), 
				  AjeJF decimal(20,2), AjeDF decimal(20,2), 
				  RjeJF decimal(20,2), RjeDF decimal(20,2), PY1 decimal(20,2),
				  jfje2 decimal(20,2), dfje2 decimal(20,2));

create table #tb2(TBGrouping varchar(100) collate Chinese_PRC_CS_AS_KS_WS,
				  Sqqmye decimal(20,2), Qqccgz decimal(20,2), jfje decimal(20,2), 
				  dfje decimal(20,2), CrjeJF decimal(20,2), CrjeDF decimal(20,2),	
				  AjeJF decimal(20,2), AjeDF decimal(20,2), 
				  RjeJF decimal(20,2), RjeDF decimal(20,2), PY1 decimal(20,2),
				  jfje2 decimal(20,2), dfje2 decimal(20,2));

create table #tb3(Code varchar(100) collate Chinese_PRC_CS_AS_KS_WS, TBGrouping varchar(100) collate Chinese_PRC_CS_AS_KS_WS, TBType int, CodeType int,
				  Sqqmye decimal(20,2), Qqccgz decimal(20,2), jfje decimal(20,2), 
				  dfje decimal(20,2), CrjeJF decimal(20,2), CrjeDF decimal(20,2), 
				  AjeJF decimal(20,2), AjeDF decimal(20,2), 
				  RjeJF decimal(20,2), RjeDF decimal(20,2), PY1 decimal(20,2),
				  jfje2 decimal(20,2), dfje2 decimal(20,2));

insert into #tb1
	select FSCode, TBGrouping, 0, 1, 
			--Sqqmye, Qqccgz, jfje, dfje, CrjeJF, CrjeDF, AjeJF, AjeDF, RjeJF, RjeDF, PY1, jfje2, dfje2
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0, 0, 0
		from TBFS WHERE PROJECTID = @Projectid;
insert into #tb3
	select FSCode, TBGrouping, 0, 1, 
			--Sqqmye, Qqccgz, jfje, dfje, CrjeJF, CrjeDF, AjeJF, AjeDF, RjeJF, RjeDF, PY1, jfje2, dfje2
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
		from TBFS WHERE PROJECTID = @Projectid AND fscode = '74200' 

--将表302中fscode= ''74200''做例外处理
insert into #tb1
	select accountcode, TBGrouping, 0, 2, Sqqmye, Qqccgz, jfje, dfje, CrjeJF, CrjeDF, AjeJF, AjeDF, RjeJF, RjeDF, PY1, jfje2, dfje2
		from TBDetail where PROJECTID=@Projectid AND isaux=0 and ( fscode<> '74200'  or fscode ='')

----构建层次关系
set @level = 1
update #tb1 set TBType = @level where TBGrouping ='' 

while @@ROWCOUNT > 0
begin
	set @level = @level + 1

	update #tb1 set TBType = @level where TBGrouping in (select Code from #tb1 where TBType = @level - 1)
end

----从取最深层次开始向上逐级汇总
select @level = max(TBType) from #tb1

while @level >= 2
begin
	delete from #tb2

	insert into #tb2
		select TBGrouping, sum(Sqqmye), sum(Qqccgz), sum(jfje), sum(dfje), sum(CrjeJF), sum(CrjeDF), 
			   sum(AjeJF), sum(AjeDF), sum(RjeJF), sum(RjeDF), sum(PY1), sum(jfje2), sum(dfje2)
			from #tb1
			where TBType = @level
			group by TBGrouping

	update #tb1 set Sqqmye = t2.Sqqmye, Qqccgz = t2.Qqccgz, jfje = t2.jfje, 
					 dfje = t2.dfje, CrjeJF = t2.CrjeJF, CrjeDF = t2.CrjeDF, 
					 AjeJF = t2.AjeJF, AjeDF = t2.AjeDF, 
					 RjeJF = t2.RjeJF, RjeDF = t2.RjeDF, PY1 = t2.PY1,
					 jfje2 = t2.jfje2, dfje2 = t2.dfje2
		from #tb2 t2
		where Code = t2.TBGrouping

	set @level = @level - 1
end

select @carryforward = Carryforward from PIDInformation where projectid = @Projectid

if (@carryforward = 1)
	begin
	update t3 set t3.Sqqmye = t1.Sqqmye, t3.Qqccgz = t1.Qqccgz, t3.jfje = t1.jfje, t3.dfje = t1.dfje, 
					t3.CrjeJF = t1.CrjeJF, t3.CrjeDF = t1.CrjeDF, t3.AjeJF = t1.AjeJF, t3.AjeDF = t1.AjeDF, 
					t3.RjeJF = t1.RjeJF, t3.RjeDF = t1.RjeDF
           from #tb3 t3 inner join #tb1 t1
		    on  t3.code='74200' and t1.code='80000'
end	else begin
	declare	@tt	table(id	int,jlr2	decimal(20,2),jlr3	decimal(20,2))
	declare @jfje decimal(20,2)

	select @jfje=sum(jfje-dfje) from  TBAdjustedSubItems  where PROJECTID=@Projectid AND fscode like '8%' and 
  		AdjustedNO in (select adjustedno from TBAdjustedItems where PROJECTID=@Projectid AND adjustedyesno=2)

	insert	@tt	
	exec dbo.GetCarryforwardAndjlr	@Projectid
	select @jlr=jlr2 from @tt
	update t3 set  
		t3.AjeJF = t1.AjeJF, t3.AjeDF = t1.AjeDF,t3.RjeJF = t1.RjeJF, t3.RjeDF = t1.RjeDF,
		t3.jfje =isnull(@jfje,0),t3.dfje = isnull(@jlr,0)
        from #tb3 t3 
		inner join #tb1 t1	on  t3.code='74200' and t1.code='80000'
end

set @code1 = '74200'

update #tb1 set  #tb1.Sqqmye += t2.Sqqmye, #tb1.Qqccgz +=t2.Qqccgz, #tb1.jfje += t2.jfje, 
	#tb1.dfje += t2.dfje, #tb1.CrjeJF += t2.CrjeJF, #tb1.CrjeDF += t2.CrjeDF, 
	#tb1.AjeJF += t2.AjeJF, #tb1.AjeDF += t2.AjeDF, 
	#tb1.RjeJF += t2.RjeJF, #tb1.RjeDF += t2.RjeDF, #tb1.PY1 += t2.PY1,
	#tb1.jfje2 += t2.jfje2, #tb1.dfje2 += t2.dfje2
	from #tb3 t2
	where #tb1.Code = @code1  and t2.code ='74200'

select @code2 = TBGrouping from #tb1 where Code = @code1

while (@code2 <>'')
begin
	update #tb1 set  #tb1.Sqqmye += t2.Sqqmye, #tb1.Qqccgz += t2.Qqccgz, #tb1.jfje += t2.jfje, 
					 #tb1.dfje += t2.dfje, #tb1.CrjeJF += t2.CrjeJF, #tb1.CrjeDF += t2.CrjeDF, 
					#tb1.AjeJF += t2.AjeJF, #tb1.AjeDF += t2.AjeDF, 
					#tb1.RjeJF += t2.RjeJF, #tb1.RjeDF += t2.RjeDF, #tb1.PY1 += t2.PY1,
					#tb1.jfje2 += t2.jfje2, #tb1.dfje2 += t2.dfje2
		from #tb3 t2
		where #tb1.Code = @code2 and t2.code ='74200'
	set @code1 = @code2
	select @code2 = TBGrouping from #tb1 where Code = @Code1
end

----写回源表，并清理无效记录
IF EXISTS(SELECT 1 FROM NEWEASV5.DBO.ProjectsInfo WHERE ProjectID=@Projectid AND ContinueDate=1)
--连续审计项目，更新范围不包括PY1
   begin
update TBFS
	set Sqqmye = t1.Sqqmye, Qqccgz = t1.Qqccgz, jfje = t1.jfje, 
		dfje = t1.dfje, CrjeJF = t1.CrjeJF, CrjeDF = t1.CrjeDF, 
		AjeJF = t1.AjeJF, AjeDF = t1.AjeDF, 
		RjeJF = t1.RjeJF, RjeDF = t1.RjeDF, 
		jfje2 = t1.jfje2, dfje2 = t1.dfje2
	from #tb1 t1
	where FSCode = t1.Code
		and t1.CodeType = 1
		AND PROJECTID=@Projectid

update TBDetail
	set Sqqmye = t1.Sqqmye, Qqccgz = t1.Qqccgz, jfje = t1.jfje, 
		dfje = t1.dfje, CrjeJF = t1.CrjeJF, CrjeDF = t1.CrjeDF, 
		AjeJF = t1.AjeJF, AjeDF = t1.AjeDF, 
		RjeJF = t1.RjeJF, RjeDF = t1.RjeDF,  
		jfje2 = t1.jfje2, dfje2 = t1.dfje2
	from #tb1 t1
	where TBDetail.AccountCode = t1.Code AND TBDetail.TBGrouping=T1.TBGrouping
		and t1.CodeType = 2 AND PROJECTID=@Projectid  AND TBDetail.isaux=0
end 
else
begin
--首次委托（首次使用EAS）项目,更新范围包括PY1
update TBFS
	set Sqqmye = t1.Sqqmye, Qqccgz = t1.Qqccgz, jfje = t1.jfje, 
		dfje = t1.dfje, CrjeJF = t1.CrjeJF, CrjeDF = t1.CrjeDF, 
		AjeJF = t1.AjeJF, AjeDF = t1.AjeDF, 
		RjeJF = t1.RjeJF, RjeDF = t1.RjeDF, PY1 = t1.PY1,
		jfje2 = t1.jfje2, dfje2 = t1.dfje2
	from #tb1 t1
	where FSCode = t1.Code
		and t1.CodeType = 1 AND PROJECTID=@Projectid

update TBDetail
	set Sqqmye = t1.Sqqmye, Qqccgz = t1.Qqccgz, jfje = t1.jfje, 
		dfje = t1.dfje, CrjeJF = t1.CrjeJF, CrjeDF = t1.CrjeDF, 
		AjeJF = t1.AjeJF, AjeDF = t1.AjeDF, 
		RjeJF = t1.RjeJF, RjeDF = t1.RjeDF, PY1 = t1.PY1,
		jfje2 = t1.jfje2, dfje2 = t1.dfje2
	from #tb1 t1
	where TBDetail.AccountCode = t1.Code AND TBDetail.TBGrouping=T1.TBGrouping
		and t1.CodeType = 2 AND PROJECTID=@Projectid AND TBDetail.isaux=0
end

--将fscode=74200 赋值给表302中（fscode= ''74200'' and AccountCode=''Wjzbnlr''）
IF not EXISTS(select 1 from TBDetail where PROJECTID=@Projectid AND AccountCode='Wjzbnlr')
begin
	 INSERT INTO TBDetail (ID,ProjectID,FSCode,AccountCode,AuxiliaryCode,AccAuxName,DataType,TBGrouping,TBType,IsMx,IsAccMX,IsAux,kmsx,Yefx,SourceFSCode,Sqqmye,Qqccgz
	  ,jfje,dfje,CrjeJF,CrjeDF,AjeJF,AjeDF,RjeJF,RjeDF,TaxBase,PY1,jfje1,dfje1,jfje2,dfje2) VALUES (
	   NEWID(),@Projectid,'74200','Wjzbnlr','','本年利润（及审计调整）',0,N'74200',1,1,1,0,'101',-1,'',0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
end
   UPDATE TBDetail SET FSCODE='74200',KMSX='101',TBGROUPING='74200',YEFX=-1 WHERE PROJECTID=@Projectid AND AccountCode='Wjzbnlr'
   update acc set acc.Sqqmye= fs.Sqqmye,acc.Qqccgz= fs.Qqccgz,
				  acc.Jfje= fs.Jfje,acc.Dfje= fs.Dfje,
				  acc.CrjeJF= fs.CrjeJF,acc.CrjeDF= fs.CrjeDF,
				  acc.AjeJF= fs.AjeJF,acc.AjeDF= fs.AjeDF,
				  acc.RjeJF= fs.RjeJF,acc.RjeDF= fs.RjeDF
			  from TBDetail acc inner join  TBFS fs on acc.fscode=fs.fscode AND ACC.PROJECTID=FS.PROJECTID
			  where ACC.PROJECTID=@Projectid AND fs.fscode= '74200' and acc.AccountCode='Wjzbnlr' AND acc.isaux=0
	
	DROP TABLE #tb1
	DROP TABLE #tb2
	DROP TABLE #tb3


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'UpdateTBFscodeYefxKmsx')
   BEGIN
       DROP  Procedure  UpdateTBFscodeYefxKmsx
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2010　EAS (Beijing)
  Customer  : Huapu 
  Project   : 根据各tb数据的tbgrouping对应的FsCode、Yefx、Kmsx，层层向下赋值（FsCode、Yefx、Kmsx） 
  Created   : 2011/08/04 by  
  Updated   : 应修改为根据tbgrouping，层层向下赋值
  Updated   : 为表301添加条件 and G.ismx=1  2013/03/22 by dshufa
  Version   : 1.0.0
********************************************************************************/
CREATE Procedure UpdateTBFscodeYefxKmsx
@PID nvarchar(50)
AS

--根据公共表EASKmdzb，更新tbacc一级科目给TBGrouping赋值，F表EASKmdzb
declare @tempTable1 table 
(
	id int identity(1,1),
    AccountCode  varchar(255),
    AccAuxName varchar(255),
    Fs  varchar(255),
    FsCode varchar(255),
    Yefx int,
    Kmsx int
)
--向临时表中插入数据
insert into @tempTable1
select C.Accountcode,C.AccAuxName,G.FsName,G.FsCode,G.Yefx,G.kmsx from TBFS G
inner join TBDetail C on G.ProjectID = C.ProjectID and (C.AccAuxName=G.FsName or C.AccAuxName like G.FsName+'-%') 
where (C.Tbtype=1) and G.ismx=1
and G.ProjectID = @PID


insert into @tempTable1
select C.AccountCode,C.AccAuxName,F.Fs,G.FsCode,G.Yefx,G.Kmsx
From TBDetail C,NeweasV5.dbo.EASKmdzb F ,TBFS G
where (C.AccAuxName=F.Note or C.AccAuxName like F.Note+'-%')
 and (F.Fs=G.FsName) and (C.Tbtype=1) and G.ismx=1
 and C.AccAuxName not in (select AccAuxName from @tempTable1) --以避免与第一段insert into @tempTable1插入数据重复
 and G.ProjectID = C.ProjectID
 and G.ProjectID = @PID 

declare @max int,@Yefx int,@Kmsx int
--用来获得最大的rowNumber 
select @max=count(1) from @tempTable1
--用来获得当前行数
declare @rowNo int
declare @AccountCode varchar(255),@FsCode varchar(255)
set @rowNo=1 
while @rowNo<=@max 
	--用来对每一个rowNumber来进行循环操作
	begin 
	--此处对每一行要进行的操作的代码 
	select @AccountCode = AccountCode,@FsCode = FsCode,@Kmsx=Kmsx,@Yefx=Yefx from @tempTable1 where id= @rowNo
		update TBDetail set TBGrouping =@FsCode,FSCode=@FsCode,Yefx=@Yefx,Kmsx=@kmsx where (AccountCode = @AccountCode) and (TBType=1)   and ProjectID = @PID 
		update TBDetail set FSCode=@FsCode,Yefx=@Yefx,Kmsx=@kmsx where (left(accountcode,len(@accountcode))=@accountcode) and (tbtype>1) and ProjectID = @PID 	

	set @rowNo=@rowNo+1
	end 







GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'UpdateTBvoucherfsje')
   BEGIN
       DROP  Procedure  UpdateTBvoucherfsje
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2010 EAS (Beijing)
  Customer  : Huapu
  Project   : EAS -计算凭证表jd、fsje
  Created   : 2011/08/4  by 
  Updated   : 
  Version   : 1.0.0
********************************************************************************/
--exec UpdateTBvoucherfsje 'Audshyf_201012'
CREATE Procedure [dbo].[UpdateTBvoucherfsje]
@PID nvarchar(50)
AS
SET NOCOUNT ON
SET ANSI_WARNINGS OFF

update dbo.TBVoucher set Jd=1 where Jfje<>0		and	Projectid=@PID
update dbo.TBVoucher set Jd=-1 where Dfje<>0	and	Projectid=@PID
update dbo.TBVoucher set Fsje=Jd*(Jfje+Dfje)	where	Projectid=@PID






GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'UpdateTbwlzlLevel2')
   BEGIN
       DROP  Procedure  UpdateTbwlzlLevel2
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -修改tbwlzl表
  Created   : jpeng 2011/07/06
  update    : dshufa 20120905 注释掉--ZLD1=0,ZLD2=0,ZLD3=0,ZLD4=0,ZLD5=0,ZLD6=0,ZLD7=0,ZLD8=0,ZLD9=0
  Updated	: by dengll	20141216
  Version   : 1.0.1
********************************************************************************/

CREATE Procedure [dbo].[UpdateTbwlzlLevel2]
@pid	varchar(100),
@fscode	varchar(max)=null
AS

if(@fscode	is	null)
	update  dbo.tbwlzl  set AgeAnalysis=0 where	projectid=@pid
else 	
	update  dbo.tbwlzl  set AgeAnalysis=0	where	fscode=@fscode and projectid=@pid






GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'UpdateUpperProAAgeToCurentProAAge')
   BEGIN
       DROP  Procedure  UpdateUpperProAAgeToCurentProAAge
	END
GO

/********************************************************************************
  DATABASE  : EAS
  COPYRIGHT : 2008 HUAPU (BEIJING)
  Customer  : Huapu
  PROJECT   : EAS -将上级的项目123表更新到本项目的123内
  CREATED   : DENGLL 20131125 
  Updated	: 20131205 by dengll
  Updated  :20150120 by dengll update=1 更新比例
  VERSION   : 1.0.2
********************************************************************************/

create Procedure [dbo].[UpdateUpperProAAgeToCurentProAAge]
	@pid	varchar(100),
	@type	int		--1：同步到所有下级  2：从上级同步到本主体
AS

if(@type=2) begin
	declare @upProjectID varchar(50)
	select @upProjectID = UpperProjectID from neweasv5.dbo.ProjectsInfo where ProjectID = @pid and istopproject=0
	if(@upProjectID is not null) begin
		delete from AccountingAgeOfFscode where ProjectID = @pid
		insert	AccountingAgeOfFscode	(ProjectID,ID,[ORDER],FSCode,FIELDNAME,FIELDTEXT,AGEMINIMUM,AGECEILING,BADDEBTRATE,SAMPLING,ApplyYesno)
		select	@pid as ProjectID,ID,[ORDER],FSCode,FIELDNAME,FIELDTEXT,AGEMINIMUM,AGECEILING,BADDEBTRATE,SAMPLING,ApplyYesno from AccountingAgeOfFscode where ProjectID = @upProjectID
	end
end else begin
	declare @childPID varchar(100),@index int,@row_count int
	declare @table_project table(projectid varchar(100),upperPID varchar(100),projectName varchar(500))
	insert @table_project exec neweasv5.dbo.GetAllSubProjectID @PID=@pid
	set @row_count=@@ROWCOUNT
	set @index=1
	while(@index<=@row_count) begin
		select top 1 @childPID=projectid from @table_project

		if(@childPID<>@pid) begin
			delete from AccountingAgeOfFscode where ProjectID = @childPID
			insert	AccountingAgeOfFscode	(ProjectID,ID,[ORDER],FSCode,FIELDNAME,FIELDTEXT,AGEMINIMUM,AGECEILING,BADDEBTRATE,SAMPLING,ApplyYesno)
			select	@childPID as ProjectID,ID,[ORDER],FSCode,FIELDNAME,FIELDTEXT,AGEMINIMUM,AGECEILING,BADDEBTRATE,SAMPLING,ApplyYesno from AccountingAgeOfFscode where ProjectID = @pid	
			update neweasv5.dbo.ProjectsInfo set LastUpdateTime=getdate() where ProjectID=@childPID
		end

		delete @table_project where projectid=@childPID
		set @index=@index+1
	end
end







	
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'UpdateViewOriginalTBAcc')
   BEGIN
       DROP  Procedure  UpdateViewOriginalTBAcc
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -OriginalReportCheck 保存原报核对
  Created   : 20170927 by pwg
********************************************************************************/
create Procedure [dbo].[UpdateViewOriginalTBAcc]
@projectid	varchar(100),
@accountCode varchar(500),
@fscode	varchar(100),
@kmsx	varchar(100),	
@yefx	int
AS
create  table #tempacc(accountCode varchar(500),ProjectID varchar(500),tbgrouping varchar(500));
with temp as (
    select accountCode,ProjectID,tbgrouping
    from TBDetail 
    where ProjectID=@projectid and accountCode=@accountcode   and isaux=0
    union all 
    select a.accountCode,a.ProjectID,a.tbgrouping
    from TBDetail a
    inner join temp b
    on a.ProjectID=b.ProjectID
    and  b.accountCode=a.tbgrouping  and a.isaux=0
)
insert into  #tempacc select * from  temp 
declare @accountCodeChild varchar(500)
while exists(select 1 from #tempacc) 
  begin
    select top 1 @accountCodeChild=accountCode from #tempacc 
    update TBDetail set FSCode=@fscode,kmsx=@kmsx,yefx=@yefx 
		where projectid=@projectid and accountCode=@accountCodeChild

	update tbaux set FSCode=@fscode,kmsx=@kmsx,yefx=@yefx 
		where projectid=@projectid and accountCode=@accountCodeChild

    delete from #tempacc where accountCode=@accountCodeChild
  end
drop table #tempacc
EXEC UpdateTbDetailISMXISAUXISACCMX @projectid
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'UPDATEVoucherFllx')
   BEGIN
       DROP  Procedure  UPDATEVoucherFllx
	END
GO
 /********************************************************************************
  Database  : EAS
  Copyright : 2010 Huapu (Beijing)
  Customer  : Huapu Chinese,bj
  Project   : EAS -更新tbvoucher.fllx
********************************************************************************/
CREATE Procedure [dbo].UPDATEVoucherFllx
	@ProjectID nvarchar(50),
	@tableType	int=0	--0	tbvoucher	本期凭证;1 qhjzpz	期后凭证
AS

begin try	
DBCC DROPCLEANBUFFERS  
DBCC FREEPROCCACHE  
SET	NOCOUNT	ON
declare @incno varchar(100),@maxsyjz int,@minsyjz int;
declare @ix int=1
declare @leve int=1000
declare @ixend int=@leve 
--本期凭证
if(@tableType=0)begin
	with a1 as(
	select distinct t.incno,a.syjz from dbo.tbvoucher t	with(nolock)
	join dbo.Account a	with(nolock)
	on t.AccountCode=a.AccountCode	and t.Projectid=a.Projectid
	where a.Projectid=@ProjectID	and		t.ProjectID=@ProjectID
	)
	,a2 as (select incno,max(syjz)maxsyjz,min(syjz)minSyjz from	a1	group by incno)
	select ROW_NUMBER() OVER (ORDER BY NEWID()) AS ID, * into #a2 from a2;
	
	update v set v.fllx=case 
						when a.maxsyjz=3 then 3 
						when a.maxsyjz=2 and a.minSyjz=1 then 2
						else	1	end
			from	dbo.tbvoucher	v
			inner join #a2	a
			on v.incno=a.incno
		where ProjectID=@ProjectID
	/*
	while (1=1)begin
		update v set v.fllx=case 
								when a.maxsyjz=3 then 3 
								when a.maxsyjz=2 and a.minSyjz=1 then 2
								else	1	end
			from	dbo.tbvoucher	v
			inner join (select * from 	#a2	where id BETWEEN @ix	and @ixend)a
			on v.incno=a.incno
		where ProjectID=@ProjectID
		
		if @@ROWCOUNT=0
			break;
		set @ix+=@leve 
		set	@ixend+=@leve 
	end
	*/
end	else if(@tableType=1)begin--期后凭证
	
	update dbo.qhjzpz set fllx=1	where	ProjectID=@ProjectID;
	;
	with a1 as(
	select distinct t.incno,a.syjz from dbo.qhjzpz t with(nolock)
	join dbo.Account a with(nolock)
	on t.AccountCode=a.AccountCode	and t.Projectid=a.Projectid
	where a.Projectid=@ProjectID	and		t.ProjectID=@ProjectID
	)
	,a2 as (select incno,max(syjz)maxsyjz,min(syjz)minSyjz from	a1	group by incno)
	select ROW_NUMBER() OVER (ORDER BY NEWID()) AS ID, * into #a3 from a2;
	
	update v set v.fllx=case 
						when a.maxsyjz=3 then 3 
						when a.maxsyjz=2 and a.minSyjz=1 then 2
						else	1	end
			from	dbo.qhjzpz	v
			inner join #a3	a
			on v.incno=a.incno
		where ProjectID=@ProjectID
	
	/*
	while (1=1)begin
		update v set v.fllx=case 
								when a.maxsyjz=3 then 3 
								when a.maxsyjz=2 and a.minSyjz=1 then 2
								else	1	end
			from	dbo.qhjzpz	v
			inner join (select * from 	#a3	where id BETWEEN @ix	and @ixend)a
			on v.incno=a.incno
		where ProjectID=@ProjectID
		
		if @@ROWCOUNT=0
			break;
		set @ix+=@leve 
		set	@ixend+=@leve 
	end
	*/
end

end try
begin catch
	EXEC DBO.[PRO_THROW] @ProjectID,'UPDATEVoucherFllx'
end catch

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'UpdateVoucherProjectCode')
   BEGIN
       DROP  Procedure  UpdateVoucherProjectCode
	END
GO
 /********************************************************************************    
  Database  : EAS    
  Copyright : 2010 Huapu (Beijing)    
  Customer  : Huapu Chinese,bj    
  Project   : EAS -更新tbvoucher,qcjzpz,    
********************************************************************************/    
CREATE Procedure [dbo].UpdateVoucherProjectCode    
 @ProjectID nvarchar(50)    
 ,@FSCode varchar(50)  
 ,@DateType int--0本期tbvoucher,-1前期 Qcwljzpz,1期后 qhjzpz    
AS    
BEGIN TRY      
SET NOCOUNT ON    
declare @leve int=1000    
declare @ix int=1    
declare @ixend int=@leve     
    
if OBJECT_ID('tempdb..#p1') IS NOT NULL  
 drop table #p1  
  
select ROW_NUMBER() OVER (ORDER BY t.accountcode) AS ID,  t.fscode,  
 t.projectid, t.accountcode,t.auxiliaryCode,a.DataYear,a.FDetailID    
 into #p1   from dbo.TBDetail t   inner join dbo.AuxiliaryFDetail a    
 on t.projectid=a.projectid and t.accountcode COLLATE Chinese_PRC_CS_AS_KS_WS=a.accountcode COLLATE Chinese_PRC_CS_AS_KS_WS    
  and t.auxiliarycode COLLATE Chinese_PRC_CS_AS_KS_WS=a.auxiliarycode COLLATE Chinese_PRC_CS_AS_KS_WS    
  and a.datatype=@DateType    
 where t.projectid=@ProjectID and t.datatype=0 and t.auxiliarycode!=''    
    
  
 if len(@FSCode)>0  
begin  
 delete #p1 where fscode <>@FSCode  
end  
if(@DateType=0)begin    
    
update v  set v.ProjectCode=a1.auxiliaryCode from dbo.TBVoucher v inner join #p1 a1 on v.accountcode COLLATE Chinese_PRC_CS_AS_KS_WS=a1.accountcode COLLATE Chinese_PRC_CS_AS_KS_WS  and v.FDetailID=a1.FDetailID    and v.ProjectID COLLATE Chinese_PRC_CS_AS_KS_WS=a1.ProjectID COLLATE Chinese_PRC_CS_AS_KS_WS  where v.Projectid=@ProjectID    
    
/*     
while (1=1)begin    
 update v    set v.ProjectCode=a1.auxiliaryCode   from dbo.TBVoucher v   inner join #p1 a1   on v.accountcode COLLATE Chinese_PRC_CS_AS_KS_WS=a1.accountcode COLLATE Chinese_PRC_CS_AS_KS_WS    and v.FDetailID=a1.FDetailID      and v.ProjectID COLLATE Chine
  
se_PRC_CS_AS_KS_WS=a1.ProjectID COLLATE Chinese_PRC_CS_AS_KS_WS       and a1.ID BETWEEN @ix and @ixend   where v.Projectid=@ProjectID  if @@ROWCOUNT=0   break;  set @ix+=@leve   set @ixend+=@leve    
end    
*/    
end    
else  if(@DateType=-1)begin --前期凭证    
 update v     
  set v.ProjectCode=a1.auxiliaryCode    
  from dbo.Qcwljzpz v    
  inner join #p1 a1    
  on v.accountcode COLLATE Chinese_PRC_CS_AS_KS_WS=a1.accountcode COLLATE Chinese_PRC_CS_AS_KS_WS    
   and v.FDetailID=a1.FDetailID     
    and v.ProjectID=a1.ProjectID    
     and a1.datayear=year(v.date)     
  where v.Projectid COLLATE Chinese_PRC_CS_AS_KS_WS=@ProjectID COLLATE Chinese_PRC_CS_AS_KS_WS    
     
 /*    
 while (1=1)begin    
 update v     
  set v.ProjectCode=a1.auxiliaryCode    
  from dbo.Qcwljzpz v    
  inner join #p1 a1    
  on v.accountcode COLLATE Chinese_PRC_CS_AS_KS_WS=a1.accountcode COLLATE Chinese_PRC_CS_AS_KS_WS    
   and v.FDetailID=a1.FDetailID     
    and v.ProjectID=a1.ProjectID    
     and a1.datayear=year(v.date)     
      and a1.id BETWEEN @ix and @ixend    
  where v.Projectid COLLATE Chinese_PRC_CS_AS_KS_WS=@ProjectID COLLATE Chinese_PRC_CS_AS_KS_WS    
 if @@ROWCOUNT=0    
  break;    
 set @ix+=@leve     
 set @ixend+=@leve    
end    
*/    
end     
else  if(@DateType=1)begin--期后凭证    
     
 update v     
  set v.ProjectCode =a1.auxiliaryCode    
  from dbo.QhJzpz v    
  inner join #p1 a1    
  on v.accountcode COLLATE Chinese_PRC_CS_AS_KS_WS=a1.accountcode COLLATE Chinese_PRC_CS_AS_KS_WS    
   and v.FDetailID=a1.FDetailID     
    and v.ProjectID COLLATE Chinese_PRC_CS_AS_KS_WS=a1.ProjectID COLLATE Chinese_PRC_CS_AS_KS_WS    
     and a1.datayear=year(v.date)    
  where v.Projectid COLLATE Chinese_PRC_CS_AS_KS_WS=@ProjectID COLLATE Chinese_PRC_CS_AS_KS_WS    
    
/*    
 while (1=1)begin    
 update v     
  set v.ProjectCode =a1.auxiliaryCode    
  from dbo.QhJzpz v    
  inner join #p1 a1    
  on v.accountcode COLLATE Chinese_PRC_CS_AS_KS_WS=a1.accountcode COLLATE Chinese_PRC_CS_AS_KS_WS    
   and v.FDetailID=a1.FDetailID     
    and v.ProjectID COLLATE Chinese_PRC_CS_AS_KS_WS=a1.ProjectID COLLATE Chinese_PRC_CS_AS_KS_WS    
     and a1.datayear=year(v.date)    
      and a1.id BETWEEN @ix and @ixend    
  where v.Projectid COLLATE Chinese_PRC_CS_AS_KS_WS=@ProjectID COLLATE Chinese_PRC_CS_AS_KS_WS    
      
 if @@ROWCOUNT=0    
  break;    
 set @ix+=@leve     
 set @ixend+=@leve    
end    
*/    
end    
end try    
begin catch    
 EXEC DBO.[PRO_THROW] @ProjectID,'UpdateVoucherProjectCode'    
end catch    
    
  
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'UpdateWLHZotheMatters')
   BEGIN
       DROP  Procedure  UpdateWLHZotheMatters
	END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : 
  Project   : EAS -保存往来询证表数据
  Created   : Dengll PM 2009-06-10
  Updated   : 2010/05/26 李为 增加 字段  PostCode,PostAddress,Recipient
  Updated   : 2011/07/11 by jpeng 
  Version   : 1.0.1
********************************************************************************/

CREATE Procedure [dbo].[UpdateWLHZotheMatters]
	@projectid	VARCHAR(100),
	@ID	VARCHAR(50),
	@PostCode VARCHAR(50),
	@PostAddress VARCHAR(1000),
	@Recipient VARCHAR(100),
	@Sendletter int,
	@OtherMatters VARCHAR(500),
	@Reason VARCHAR(500)
	
AS

UPDATE	DBO.TBWlhz	SET	Sendletter=case when @Reason is null then 1 when @Reason = '' then 1 else @Sendletter end,
							OtherMatters = @OtherMatters ,
							Reason = case when @Sendletter=1 then null when @Sendletter=0 then @Reason	end,
							PostCode=@PostCode,
							PostAddress=@PostAddress,
							Recipient=@Recipient
						WHERE PROJECTID=@PROJECTID AND	ID=@ID






GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteACCOUNT')
   BEGIN
       DROP  Procedure  usp_DeleteACCOUNT
	END
GO

--region [dbo].[usp_DeleteACCOUNT]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteACCOUNT]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteACCOUNT]
	@ProjectID varchar(100),
	@AccountCode varchar(255)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[ACCOUNT]
WHERE
	[ProjectID] = @ProjectID
	AND [AccountCode] = @AccountCode

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteAccountingAgeOfFscode')
   BEGIN
       DROP  Procedure  usp_DeleteAccountingAgeOfFscode
	END
GO

--region [dbo].[usp_DeleteAccountingAgeOfFscode]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteAccountingAgeOfFscode]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteAccountingAgeOfFscode]
	@ProjectID varchar(100),
	@ID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[AccountingAgeOfFscode]
WHERE
	[ProjectID] = @ProjectID
	AND [ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteAccountingPolicies')
   BEGIN
       DROP  Procedure  usp_DeleteAccountingPolicies
	END
GO

--region [dbo].[usp_DeleteAccountingPolicies]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteAccountingPolicies]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteAccountingPolicies]
	@ProjectID varchar(100),
	@ID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[AccountingPolicies]
WHERE
	[ProjectID] = @ProjectID
	AND [ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_Deleteaccountperiod')
   BEGIN
       DROP  Procedure  usp_Deleteaccountperiod
	END
GO

--region [dbo].[usp_Deleteaccountperiod]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_Deleteaccountperiod]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_Deleteaccountperiod]
	@ProjectID varchar(100),
	@accountperiod int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[accountperiod]
WHERE
	[ProjectID] = @ProjectID
	AND [accountperiod] = @accountperiod

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteAccountQues')
   BEGIN
       DROP  Procedure  usp_DeleteAccountQues
	END
GO

--region [dbo].[usp_DeleteAccountQues]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteAccountQues]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteAccountQues]
	@ID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[AccountQues]
WHERE
	[ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteAnnounce')
   BEGIN
       DROP  Procedure  usp_DeleteAnnounce
	END
GO

--region [dbo].[usp_DeleteAnnounce]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteAnnounce]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteAnnounce]
	@ID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[Announce]
WHERE
	[ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteAuditGoalandCognizance')
   BEGIN
       DROP  Procedure  usp_DeleteAuditGoalandCognizance
	END
GO

--region [dbo].[usp_DeleteAuditGoalandCognizance]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteAuditGoalandCognizance]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteAuditGoalandCognizance]
	@ProjectID varchar(100),
	@ClassCode varchar(50),
	@AuditGoalCode varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[AuditGoalandCognizance]
WHERE
	[ProjectID] = @ProjectID
	AND [ClassCode] = @ClassCode
	AND [AuditGoalCode] = @AuditGoalCode

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteAuditProgramConfig')
   BEGIN
       DROP  Procedure  usp_DeleteAuditProgramConfig
	END
GO

--region [dbo].[usp_DeleteAuditProgramConfig]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteAuditProgramConfig]
-- Date Generated: 2018年9月5日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteAuditProgramConfig]
	@ProjectID varchar(100),
	@FSCodeOrCycleCode varchar(50),
	@AuditProgramCode varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[AuditProgramConfig]
WHERE
	[ProjectID] = @ProjectID
	AND [FSCodeOrCycleCode] = @FSCodeOrCycleCode
	AND [AuditProgramCode] = @AuditProgramCode

--endregion



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteAuditProgramFile')
   BEGIN
       DROP  Procedure  usp_DeleteAuditProgramFile
	END
GO
--region [dbo].[usp_DeleteAuditProgramFile]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteAuditProgramFile]
-- Date Generated: 2018年9月3日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteAuditProgramFile]
	@ID varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[AuditProgramFile]
WHERE
	[ID] = @ID

--endregion

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteAuditProgramForm')
   BEGIN
       DROP  Procedure  usp_DeleteAuditProgramForm
	END
GO
--region [dbo].[usp_DeleteAuditProgramForm]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteAuditProgramForm]
-- Date Generated: 2018年9月17日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteAuditProgramForm]
	@ProjectID varchar(100),
	@AuditProgramCode varchar(50),
	@SortID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[AuditProgramForm]
WHERE
	[ProjectID] = @ProjectID
	AND [AuditProgramCode] = @AuditProgramCode
	AND [SortID] = @SortID

--endregion

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteAuditProgramLibrary')
   BEGIN
       DROP  Procedure  usp_DeleteAuditProgramLibrary
	END
GO
--region [dbo].[usp_DeleteAuditProgramLibrary]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteAuditProgramLibrary]
-- Date Generated: 2018年10月29日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteAuditProgramLibrary]
	@ProjectID varchar(100),
	@AuditProgramCode varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[AuditProgramLibrary]
WHERE
	[ProjectID] = @ProjectID
	AND [AuditProgramCode] = @AuditProgramCode

--endregion
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteAuditProgramLibrary1')
   BEGIN
       DROP  Procedure  usp_DeleteAuditProgramLibrary1
	END
GO

--region [dbo].[usp_DeleteAuditProgramLibrary1]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteAuditProgramLibrary1]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteAuditProgramLibrary1]
	@ProjectID varchar(100),
	@AccountCode varchar(50),
	@AuditProgramCode varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[AuditProgramLibrary1]
WHERE
	[ProjectID] = @ProjectID
	AND [AccountCode] = @AccountCode
	AND [AuditProgramCode] = @AuditProgramCode

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteBActivitiesAndCGoal')
   BEGIN
       DROP  Procedure  usp_DeleteBActivitiesAndCGoal
	END
GO

--region [dbo].[usp_DeleteBActivitiesAndCGoal]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteBActivitiesAndCGoal]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteBActivitiesAndCGoal]
	@ProjectID varchar(100),
	@CGoalID varchar(50),
	@BActivitiesID varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[BActivitiesAndCGoal]
WHERE
	[ProjectID] = @ProjectID
	AND [CGoalID] = @CGoalID
	AND [BActivitiesID] = @BActivitiesID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteBankAcceptBill')
   BEGIN
       DROP  Procedure  usp_DeleteBankAcceptBill
	END
GO

--region [dbo].[usp_DeleteBankAcceptBill]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   HUASHENG using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteBankAcceptBill]
-- Date Generated: 2018年11月22日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteBankAcceptBill]
	@ID varchar(100)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[BankAcceptBill]
WHERE
	[ID] = @ID

--endregion


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteBankAccount')
   BEGIN
       DROP  Procedure  usp_DeleteBankAccount
	END
GO

--region [dbo].[usp_DeleteBankAccount]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   HUASHENG using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteBankAccount]
-- Date Generated: 2018年11月22日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteBankAccount]
	@ID varchar(100)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[BankAccount]
WHERE
	[ID] = @ID

--endregion


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteBankBorrow')
   BEGIN
       DROP  Procedure  usp_DeleteBankBorrow
	END
GO

--region [dbo].[usp_DeleteBankBorrow]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   HUASHENG using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteBankBorrow]
-- Date Generated: 2018年11月22日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteBankBorrow]
	@ID varchar(100)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[BankBorrow]
WHERE
	[ID] = @ID

--endregion


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteBankInfo')
   BEGIN
       DROP  Procedure  usp_DeleteBankInfo
	END
GO

--region [dbo].[usp_DeleteBankInfo]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   HUASHENG using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteBankInfo]
-- Date Generated: 2019年1月2日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteBankInfo]
	@ID varchar(100)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[BankInfo]
WHERE
	[ID] = @ID

--endregion


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteBankUnsubscribe')
   BEGIN
       DROP  Procedure  usp_DeleteBankUnsubscribe
	END
GO

--region [dbo].[usp_DeleteBankUnsubscribe]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   HUASHENG using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteBankUnsubscribe]
-- Date Generated: 2018年11月22日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteBankUnsubscribe]
	@ID varchar(100)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[BankUnsubscribe]
WHERE
	[ID] = @ID

--endregion


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteBCycleAndAccounts')
   BEGIN
       DROP  Procedure  usp_DeleteBCycleAndAccounts
	END
GO

--region [dbo].[usp_DeleteBCycleAndAccounts]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteBCycleAndAccounts]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteBCycleAndAccounts]
	@ProjectID varchar(100),
	@BusinessCycleID varchar(50),
	@AccountID varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[BCycleAndAccounts]
WHERE
	[ProjectID] = @ProjectID
	AND [BusinessCycleID] = @BusinessCycleID
	AND [AccountID] = @AccountID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteBCycleAndBActivities')
   BEGIN
       DROP  Procedure  usp_DeleteBCycleAndBActivities
	END
GO

--region [dbo].[usp_DeleteBCycleAndBActivities]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteBCycleAndBActivities]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteBCycleAndBActivities]
	@ProjectID varchar(100),
	@BusinessCycleID varchar(50),
	@BActivitiesID varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[BCycleAndBActivities]
WHERE
	[ProjectID] = @ProjectID
	AND [BusinessCycleID] = @BusinessCycleID
	AND [BActivitiesID] = @BActivitiesID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteBusinessCycle')
   BEGIN
       DROP  Procedure  usp_DeleteBusinessCycle
	END
GO

--region [dbo].[usp_DeleteBusinessCycle]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteBusinessCycle]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteBusinessCycle]
	@ProjectID varchar(100),
	@BusinessCycleID varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[BusinessCycle]
WHERE
	[ProjectID] = @ProjectID
	AND [BusinessCycleID] = @BusinessCycleID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteClientMaintainProposed')
   BEGIN
       DROP  Procedure  usp_DeleteClientMaintainProposed
	END
GO

--region [dbo].[usp_DeleteClientMaintainProposed]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteClientMaintainProposed]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteClientMaintainProposed]
	@ProjectID varchar(100),
	@ID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[ClientMaintainProposed]
WHERE
	[ProjectID] = @ProjectID
	AND [ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteCombinationChangedReason')
   BEGIN
       DROP  Procedure  usp_DeleteCombinationChangedReason
	END
GO

--region [dbo].[usp_DeleteCombinationChangedReason]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteCombinationChangedReason]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteCombinationChangedReason]
	@GUID varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[CombinationChangedReason]
WHERE
	[GUID] = @GUID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteCombinationList')
   BEGIN
       DROP  Procedure  usp_DeleteCombinationList
	END
GO

--region [dbo].[usp_DeleteCombinationList]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteCombinationList]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteCombinationList]
	@ProjectID varchar(50),
	@ComCode varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[CombinationList]
WHERE
	[ProjectID] = @ProjectID
	AND [ComCode] = @ComCode

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteCombinationRange')
   BEGIN
       DROP  Procedure  usp_DeleteCombinationRange
	END
GO

--region [dbo].[usp_DeleteCombinationRange]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteCombinationRange]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteCombinationRange]
	@GUID varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[CombinationRange]
WHERE
	[GUID] = @GUID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteCommunication')
   BEGIN
       DROP  Procedure  usp_DeleteCommunication
	END
GO

--region [dbo].[usp_DeleteCommunication]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteCommunication]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteCommunication]
	@ID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[Communication]
WHERE
	[ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteComNoteData')
   BEGIN
       DROP  Procedure  usp_DeleteComNoteData
	END
GO

--region [dbo].[usp_DeleteComNoteData]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteComNoteData]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteComNoteData]
	@GUID varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[ComNoteData]
WHERE
	[GUID] = @GUID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteComNoteDataDetail')
   BEGIN
       DROP  Procedure  usp_DeleteComNoteDataDetail
	END
GO

--region [dbo].[usp_DeleteComNoteDataDetail]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteComNoteDataDetail]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteComNoteDataDetail]
	@GUID varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[ComNoteDataDetail]
WHERE
	[GUID] = @GUID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteComNoteMemo')
   BEGIN
       DROP  Procedure  usp_DeleteComNoteMemo
	END
GO

--region [dbo].[usp_DeleteComNoteMemo]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteComNoteMemo]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteComNoteMemo]
	@ProjectID varchar(50),
	@StruCode varchar(100),
	@FormCode varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[ComNoteMemo]
WHERE
	[ProjectID] = @ProjectID
	AND [StruCode] = @StruCode
	AND [FormCode] = @FormCode

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteContentofSampleTest')
   BEGIN
       DROP  Procedure  usp_DeleteContentofSampleTest
	END
GO

--region [dbo].[usp_DeleteContentofSampleTest]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteContentofSampleTest]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteContentofSampleTest]
	@ProjectID varchar(100),
	@FSCode varchar(50),
	@FunctionType varchar(10),
	@contentID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[ContentofSampleTest]
WHERE
	[ProjectID] = @ProjectID
	AND [FSCode] = @FSCode
	AND [FunctionType] = @FunctionType
	AND [contentID] = @contentID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteContentofsampleTestInfo')
   BEGIN
       DROP  Procedure  usp_DeleteContentofsampleTestInfo
	END
GO

--region [dbo].[usp_DeleteContentofsampleTestInfo]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteContentofsampleTestInfo]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteContentofsampleTestInfo]
	@ProjectID varchar(100),
	@FSCode varchar(50),
	@contentID int,
	@FunctionType varchar(10)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[ContentofsampleTestInfo]
WHERE
	[ProjectID] = @ProjectID
	AND [FSCode] = @FSCode
	AND [contentID] = @contentID
	AND [FunctionType] = @FunctionType

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteCriticalElementofPM')
   BEGIN
       DROP  Procedure  usp_DeleteCriticalElementofPM
	END
GO

--region [dbo].[usp_DeleteCriticalElementofPM]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteCriticalElementofPM]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteCriticalElementofPM]
	@ProjectID varchar(100),
	@ID varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[CriticalElementofPM]
WHERE
	[ProjectID] = @ProjectID
	AND [ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteCutofftest')
   BEGIN
       DROP  Procedure  usp_DeleteCutofftest
	END
GO

--region [dbo].[usp_DeleteCutofftest]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteCutofftest]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteCutofftest]
	@VoucherID varchar(50),
	@ProjectID varchar(100)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[Cutofftest]
WHERE
	[VoucherID] = @VoucherID
	AND [ProjectID] = @ProjectID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteEliminationAllocate')
   BEGIN
       DROP  Procedure  usp_DeleteEliminationAllocate
	END
GO

--region [dbo].[usp_DeleteEliminationAllocate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteEliminationAllocate]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteEliminationAllocate]
	@GUID varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[EliminationAllocate]
WHERE
	[GUID] = @GUID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteERisksLevel')
   BEGIN
       DROP  Procedure  usp_DeleteERisksLevel
	END
GO

--region [dbo].[usp_DeleteERisksLevel]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteERisksLevel]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteERisksLevel]
	@ProjectID varchar(100),
	@ID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[ERisksLevel]
WHERE
	[ProjectID] = @ProjectID
	AND [ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteErrorRelationItem')
   BEGIN
       DROP  Procedure  usp_DeleteErrorRelationItem
	END
GO

--region [dbo].[usp_DeleteErrorRelationItem]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteErrorRelationItem]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteErrorRelationItem]
	@ID varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[ErrorRelationItem]
WHERE
	[ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteEvaluationError')
   BEGIN
       DROP  Procedure  usp_DeleteEvaluationError
	END
GO

--region [dbo].[usp_DeleteEvaluationError]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteEvaluationError]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteEvaluationError]
	@ID varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[EvaluationError]
WHERE
	[ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteFileReviews')
   BEGIN
       DROP  Procedure  usp_DeleteFileReviews
	END
GO

--region [dbo].[usp_DeleteFileReviews]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteFileReviews]
-- Date Generated: 2018年8月28日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteFileReviews]
	@ID varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[FileReviews]
WHERE
	[ID] = @ID

--endregion



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteFileReviewsImage')
   BEGIN
       DROP  Procedure  usp_DeleteFileReviewsImage
	END
GO

--region [dbo].[usp_DeleteFileReviewsImage]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteFileReviewsImage]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteFileReviewsImage]
	@ID varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[FileReviewsImage]
WHERE
	[ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteFileScriptList')
   BEGIN
       DROP  Procedure  usp_DeleteFileScriptList
	END
GO

--region [dbo].[usp_DeleteFileScriptList]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteFileScriptList]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteFileScriptList]
	@ProjectID varchar(100),
	@StruCode varchar(128)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[FileScriptList]
WHERE
	[ProjectID] = @ProjectID
	AND [StruCode] = @StruCode

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteFlowsAction')
   BEGIN
       DROP  Procedure  usp_DeleteFlowsAction
	END
GO

--region [dbo].[usp_DeleteFlowsAction]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteFlowsAction]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteFlowsAction]
	@ProjectID varchar(100),
	@StruID varchar(50),
	@NodeProcessor varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[FlowsAction]
WHERE
	[ProjectID] = @ProjectID
	AND [StruID] = @StruID
	AND [NodeProcessor] = @NodeProcessor

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteFSCodeConfig')
   BEGIN
       DROP  Procedure  usp_DeleteFSCodeConfig
	END
GO

--region [dbo].[usp_DeleteFSCodeConfig]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteFSCodeConfig]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteFSCodeConfig]
	@ProjectID varchar(100),
	@FsCode varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[FSCodeConfig]
WHERE
	[ProjectID] = @ProjectID
	AND [FsCode] = @FsCode

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteInherentRisk')
   BEGIN
       DROP  Procedure  usp_DeleteInherentRisk
	END
GO

--region [dbo].[usp_DeleteInherentRisk]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteInherentRisk]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteInherentRisk]
	@ProjectID varchar(100),
	@ID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[InherentRisk]
WHERE
	[ProjectID] = @ProjectID
	AND [ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteInherentRiskAccount')
   BEGIN
       DROP  Procedure  usp_DeleteInherentRiskAccount
	END
GO

--region [dbo].[usp_DeleteInherentRiskAccount]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteInherentRiskAccount]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteInherentRiskAccount]
	@ProjectID varchar(100),
	@ID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[InherentRiskAccount]
WHERE
	[ProjectID] = @ProjectID
	AND [ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteNoteAndTB')
   BEGIN
       DROP  Procedure  usp_DeleteNoteAndTB
	END
GO

--region [dbo].[usp_DeleteNoteAndTB]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   HUASHENG using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteNoteAndTB]
-- Date Generated: 2018年12月11日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteNoteAndTB]
	@GUID varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[NoteAndTB]
WHERE
	[GUID] = @GUID

--endregion


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteNoteCheckRule')
   BEGIN
       DROP  Procedure  usp_DeleteNoteCheckRule
	END
GO

--region [dbo].[usp_DeleteNoteCheckRule]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteNoteCheckRule]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteNoteCheckRule]
	@ID varchar(50),
	@ProjectID varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[NoteCheckRule]
WHERE
	[ID] = @ID
	AND [ProjectID] = @ProjectID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteNoteColumnAttribute')
   BEGIN
       DROP  Procedure  usp_DeleteNoteColumnAttribute
	END
GO

--region [dbo].[usp_DeleteNoteColumnAttribute]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteNoteColumnAttribute]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteNoteColumnAttribute]
	@ProjectID varchar(50),
	@ColumnCode varchar(50),
	@FormCode varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[NoteColumnAttribute]
WHERE
	[ProjectID] = @ProjectID
	AND [ColumnCode] = @ColumnCode
	AND [FormCode] = @FormCode

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteNoteComFormula')
   BEGIN
       DROP  Procedure  usp_DeleteNoteComFormula
	END
GO

--region [dbo].[usp_DeleteNoteComFormula]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteNoteComFormula]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteNoteComFormula]
	@ProjectID varchar(50),
	@StruCode varchar(255),
	@ColumnCode varchar(50),
	@NoteCode varchar(100),
	@FormCode varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[NoteComFormula]
WHERE
	[ProjectID] = @ProjectID
	AND [StruCode] = @StruCode
	AND [ColumnCode] = @ColumnCode
	AND [NoteCode] = @NoteCode
	AND [FormCode] = @FormCode

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteNoteConnectRule')
   BEGIN
       DROP  Procedure  usp_DeleteNoteConnectRule
	END
GO

--region [dbo].[usp_DeleteNoteConnectRule]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteNoteConnectRule]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteNoteConnectRule]
	@ID varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[NoteConnectRule]
WHERE
	[ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteNoteData')
   BEGIN
       DROP  Procedure  usp_DeleteNoteData
	END
GO

--region [dbo].[usp_DeleteNoteData]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteNoteData]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteNoteData]
	@ProjectID varchar(50),
	@NoteCode varchar(100),
	@FormCode varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[NoteData]
WHERE
	[ProjectID] = @ProjectID
	AND [NoteCode] = @NoteCode
	AND [FormCode] = @FormCode

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteNoteDataDetail')
   BEGIN
       DROP  Procedure  usp_DeleteNoteDataDetail
	END
GO

--region [dbo].[usp_DeleteNoteDataDetail]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteNoteDataDetail]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteNoteDataDetail]
	@ProjectID varchar(50),
	@FormCode varchar(50),
	@NoteCode varchar(100),
	@ColumnCode varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[NoteDataDetail]
WHERE
	[ProjectID] = @ProjectID
	AND [FormCode] = @FormCode
	AND [NoteCode] = @NoteCode
	AND [ColumnCode] = @ColumnCode

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteNoteForm')
   BEGIN
       DROP  Procedure  usp_DeleteNoteForm
	END
GO

--region [dbo].[usp_DeleteNoteForm]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteNoteForm]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteNoteForm]
	@ProjectID varchar(50),
	@FormCode varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[NoteForm]
WHERE
	[ProjectID] = @ProjectID
	AND [FormCode] = @FormCode

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteNoteFormula')
   BEGIN
       DROP  Procedure  usp_DeleteNoteFormula
	END
GO

--region [dbo].[usp_DeleteNoteFormula]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteNoteFormula]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteNoteFormula]
	@ProjectID varchar(50),
	@ColumnCode varchar(50),
	@NoteCode varchar(100),
	@FormCode varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[NoteFormula]
WHERE
	[ProjectID] = @ProjectID
	AND [ColumnCode] = @ColumnCode
	AND [NoteCode] = @NoteCode
	AND [FormCode] = @FormCode

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteNoteMemo')
   BEGIN
       DROP  Procedure  usp_DeleteNoteMemo
	END
GO

--region [dbo].[usp_DeleteNoteMemo]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteNoteMemo]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteNoteMemo]
	@ProjectID varchar(50),
	@FormCode varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[NoteMemo]
WHERE
	[ProjectID] = @ProjectID
	AND [FormCode] = @FormCode

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteNoteRowAttribute')
   BEGIN
       DROP  Procedure  usp_DeleteNoteRowAttribute
	END
GO

--region [dbo].[usp_DeleteNoteRowAttribute]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteNoteRowAttribute]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteNoteRowAttribute]
	@ProjectID varchar(50),
	@NoteCode varchar(100),
	@FormCode varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[NoteRowAttribute]
WHERE
	[ProjectID] = @ProjectID
	AND [NoteCode] = @NoteCode
	AND [FormCode] = @FormCode

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeletePIDInformation')
   BEGIN
       DROP  Procedure  usp_DeletePIDInformation
	END
GO

--region [dbo].[usp_DeletePIDInformation]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeletePIDInformation]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeletePIDInformation]
	@ProjectID varchar(100)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[PIDInformation]
WHERE
	[ProjectID] = @ProjectID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeletePlanningProcedures')
   BEGIN
       DROP  Procedure  usp_DeletePlanningProcedures
	END
GO

--region [dbo].[usp_DeletePlanningProcedures]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeletePlanningProcedures]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeletePlanningProcedures]
	@ProjectID varchar(100),
	@SortID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[PlanningProcedures]
WHERE
	[ProjectID] = @ProjectID
	AND [SortID] = @SortID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeletePMofFsCode')
   BEGIN
       DROP  Procedure  usp_DeletePMofFsCode
	END
GO

--region [dbo].[usp_DeletePMofFsCode]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeletePMofFsCode]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeletePMofFsCode]
	@ProjectID varchar(100),
	@ID varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[PMofFsCode]
WHERE
	[ProjectID] = @ProjectID
	AND [ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeletePmPlanningMateriality')
   BEGIN
       DROP  Procedure  usp_DeletePmPlanningMateriality
	END
GO

--region [dbo].[usp_DeletePmPlanningMateriality]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeletePmPlanningMateriality]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeletePmPlanningMateriality]
	@ProjectID varchar(100),
	@ID varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[PmPlanningMateriality]
WHERE
	[ProjectID] = @ProjectID
	AND [ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeletePMvalueofJ')
   BEGIN
       DROP  Procedure  usp_DeletePMvalueofJ
	END
GO

--region [dbo].[usp_DeletePMvalueofJ]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeletePMvalueofJ]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeletePMvalueofJ]
	@ProjectID varchar(100),
	@Fscode varchar(50),
	@Testobject int,
	@Step int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[PMvalueofJ]
WHERE
	[ProjectID] = @ProjectID
	AND [Fscode] = @Fscode
	AND [Testobject] = @Testobject
	AND [Step] = @Step

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteProJect')
   BEGIN
       DROP  Procedure  usp_DeleteProJect
	END
GO

--region [dbo].[usp_DeleteProJect]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteProJect]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteProJect]
	@ProjectID varchar(100),
	@TYPECODE varchar(255),
	@PROJECTCODE varchar(255)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[ProJect]
WHERE
	[ProjectID] = @ProjectID
	AND [TYPECODE] = @TYPECODE
	AND [PROJECTCODE] = @PROJECTCODE

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteProjectConfig')
   BEGIN
       DROP  Procedure  usp_DeleteProjectConfig
	END
GO

--region [dbo].[usp_DeleteProjectConfig]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteProjectConfig]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteProjectConfig]
	@Key varchar(100),
	@ProjectID varchar(100)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[ProjectConfig]
WHERE
	[Key] = @Key
	AND [ProjectID] = @ProjectID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteProjectError')
   BEGIN
       DROP  Procedure  usp_DeleteProjectError
	END
GO

--region [dbo].[usp_DeleteProjectError]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteProjectError]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteProjectError]
	@ID varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[ProjectError]
WHERE
	[ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteProjectType')
   BEGIN
       DROP  Procedure  usp_DeleteProjectType
	END
GO

--region [dbo].[usp_DeleteProjectType]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteProjectType]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteProjectType]
	@ProjectID varchar(100),
	@TYPECODE varchar(255)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[ProjectType]
WHERE
	[ProjectID] = @ProjectID
	AND [TYPECODE] = @TYPECODE

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteQcwljzpz')
   BEGIN
       DROP  Procedure  usp_DeleteQcwljzpz
	END
GO

--region [dbo].[usp_DeleteQcwljzpz]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteQcwljzpz]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteQcwljzpz]
	@VoucherID varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[Qcwljzpz]
WHERE
	[VoucherID] = @VoucherID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteQhJzpz')
   BEGIN
       DROP  Procedure  usp_DeleteQhJzpz
	END
GO

--region [dbo].[usp_DeleteQhJzpz]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteQhJzpz]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteQhJzpz]
	@VoucherID varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[QhJzpz]
WHERE
	[VoucherID] = @VoucherID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteQmyegc')
   BEGIN
       DROP  Procedure  usp_DeleteQmyegc
	END
GO

--region [dbo].[usp_DeleteQmyegc]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteQmyegc]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteQmyegc]
	@ProjectID varchar(100),
	@VoucherID varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[Qmyegc]
WHERE
	[ProjectID] = @ProjectID
	AND [VoucherID] = @VoucherID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteRecordOfSampleTest')
   BEGIN
       DROP  Procedure  usp_DeleteRecordOfSampleTest
	END
GO

--region [dbo].[usp_DeleteRecordOfSampleTest]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteRecordOfSampleTest]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteRecordOfSampleTest]
	@ProjectID varchar(100),
	@VoucherID varchar(50),
	@ContentID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[RecordOfSampleTest]
WHERE
	[ProjectID] = @ProjectID
	AND [VoucherID] = @VoucherID
	AND [ContentID] = @ContentID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteReplaceTestVoucher')
   BEGIN
       DROP  Procedure  usp_DeleteReplaceTestVoucher
	END
GO
--region [dbo].[usp_DeleteReplaceTestVoucher]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   HUASHENG using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteReplaceTestVoucher]
-- Date Generated: 2018年11月22日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteReplaceTestVoucher]
	@VoucherID varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[ReplaceTestVoucher]
WHERE
	[VoucherID] = @VoucherID

--endregion
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteRiskfactor')
   BEGIN
       DROP  Procedure  usp_DeleteRiskfactor
	END
GO

--region [dbo].[usp_DeleteRiskfactor]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteRiskfactor]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteRiskfactor]
	@ID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[Riskfactor]
WHERE
	[ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteRiskModel')
   BEGIN
       DROP  Procedure  usp_DeleteRiskModel
	END
GO

--region [dbo].[usp_DeleteRiskModel]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteRiskModel]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteRiskModel]
	@ID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[RiskModel]
WHERE
	[ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteRiskResponse')
   BEGIN
       DROP  Procedure  usp_DeleteRiskResponse
	END
GO

--region [dbo].[usp_DeleteRiskResponse]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteRiskResponse]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteRiskResponse]
	@ProjectID varchar(100),
	@ID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[RiskResponse]
WHERE
	[ProjectID] = @ProjectID
	AND [ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteRoleInfo')
   BEGIN
       DROP  Procedure  usp_DeleteRoleInfo
	END
GO

--region [dbo].[usp_DeleteRoleInfo]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteRoleInfo]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteRoleInfo]
	@ProjectID varchar(100),
	@RoleID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[RoleInfo]
WHERE
	[ProjectID] = @ProjectID
	AND [RoleID] = @RoleID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteStrategicPlanning')
   BEGIN
       DROP  Procedure  usp_DeleteStrategicPlanning
	END
GO

--region [dbo].[usp_DeleteStrategicPlanning]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteStrategicPlanning]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteStrategicPlanning]
	@ProjectID varchar(100),
	@ID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[StrategicPlanning]
WHERE
	[ProjectID] = @ProjectID
	AND [ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteSubComNoteData')
   BEGIN
       DROP  Procedure  usp_DeleteSubComNoteData
	END
GO

--region [dbo].[usp_DeleteSubComNoteData]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteSubComNoteData]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteSubComNoteData]
	@GUID varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[SubComNoteData]
WHERE
	[GUID] = @GUID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteSubComNoteDataDetail')
   BEGIN
       DROP  Procedure  usp_DeleteSubComNoteDataDetail
	END
GO

--region [dbo].[usp_DeleteSubComNoteDataDetail]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteSubComNoteDataDetail]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteSubComNoteDataDetail]
	@GUID varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[SubComNoteDataDetail]
WHERE
	[GUID] = @GUID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteSubTBCombination')
   BEGIN
       DROP  Procedure  usp_DeleteSubTBCombination
	END
GO

--region [dbo].[usp_DeleteSubTBCombination]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteSubTBCombination]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteSubTBCombination]
	@GUID varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[SubTBCombination]
WHERE
	[GUID] = @GUID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteTBAdjustedItems')
   BEGIN
       DROP  Procedure  usp_DeleteTBAdjustedItems
	END
GO

--region [dbo].[usp_DeleteTBAdjustedItems]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteTBAdjustedItems]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteTBAdjustedItems]
	@ProjectID varchar(100),
	@AdjustedNO varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[TBAdjustedItems]
WHERE
	[ProjectID] = @ProjectID
	AND [AdjustedNO] = @AdjustedNO

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteTBAdjustedSubItems')
   BEGIN
       DROP  Procedure  usp_DeleteTBAdjustedSubItems
	END
GO

--region [dbo].[usp_DeleteTBAdjustedSubItems]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteTBAdjustedSubItems]
-- Date Generated: 2018年8月18日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteTBAdjustedSubItems]
	@ProjectID varchar(100),
	@AdjustedNO varchar(50),
	@ID varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[TBAdjustedSubItems]
WHERE
	[ProjectID] = @ProjectID
	AND [AdjustedNO] = @AdjustedNO
	AND [ID] = @ID

--endregion



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteTbAppendTable')
   BEGIN
       DROP  Procedure  usp_DeleteTbAppendTable
	END
GO

--region [dbo].[usp_DeleteTbAppendTable]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteTbAppendTable]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteTbAppendTable]
	@ID varchar(50),
	@ProjectID varchar(100)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[TbAppendTable]
WHERE
	[ID] = @ID
	AND [ProjectID] = @ProjectID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteTBAux')
   BEGIN
       DROP  Procedure  usp_DeleteTBAux
	END
GO

--region [dbo].[usp_DeleteTBAux]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteTBAux]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteTBAux]
	@ProjectID varchar(100),
	@AccountCode varchar(100),
	@AuxiliaryCode varchar(100)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[TBAux]
WHERE
	[ProjectID] = @ProjectID
	AND [AccountCode] = @AccountCode
	AND [AuxiliaryCode] = @AuxiliaryCode

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteTBCombination')
   BEGIN
       DROP  Procedure  usp_DeleteTBCombination
	END
GO

--region [dbo].[usp_DeleteTBCombination]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteTBCombination]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteTBCombination]
	@ProjectID varchar(50),
	@StruCode varchar(50),
	@FsCode varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[TBCombination]
WHERE
	[ProjectID] = @ProjectID
	AND [StruCode] = @StruCode
	AND [FsCode] = @FsCode

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteTBDetail')
   BEGIN
       DROP  Procedure  usp_DeleteTBDetail
	END
GO
--region [dbo].[usp_DeleteTBDetail]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteTBDetail]
-- Date Generated: 2018年10月12日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteTBDetail]
	@ID varchar(50),
	@ProjectID varchar(100)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[TBDetail]
WHERE
	[ID] = @ID
	AND [ProjectID] = @ProjectID

--endregion

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteTBDetailExtra')
   BEGIN
       DROP  Procedure  usp_DeleteTBDetailExtra
	END
GO

--region [dbo].[usp_DeleteTBDetailExtra]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteTBDetailExtra]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteTBDetailExtra]
	@ID varchar(50),
	@ProjectID varchar(100)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[TBDetailExtra]
WHERE
	[ID] = @ID
	AND [ProjectID] = @ProjectID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteTBEliminationItems')
   BEGIN
       DROP  Procedure  usp_DeleteTBEliminationItems
	END
GO

--region [dbo].[usp_DeleteTBEliminationItems]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteTBEliminationItems]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteTBEliminationItems]
	@ProjectID varchar(100),
	@EliminationNO varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[TBEliminationItems]
WHERE
	[ProjectID] = @ProjectID
	AND [EliminationNO] = @EliminationNO

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteTBEliminationSubItems')
   BEGIN
       DROP  Procedure  usp_DeleteTBEliminationSubItems
	END
GO

--region [dbo].[usp_DeleteTBEliminationSubItems]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteTBEliminationSubItems]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteTBEliminationSubItems]
	@ProjectID varchar(100),
	@ID varchar(50),
	@EliminationNO varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[TBEliminationSubItems]
WHERE
	[ProjectID] = @ProjectID
	AND [ID] = @ID
	AND [EliminationNO] = @EliminationNO

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteTBFS')
   BEGIN
       DROP  Procedure  usp_DeleteTBFS
	END
GO

--region [dbo].[usp_DeleteTBFS]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteTBFS]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteTBFS]
	@ProjectID varchar(100),
	@FSCode varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[TBFS]
WHERE
	[ProjectID] = @ProjectID
	AND [FSCode] = @FSCode

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteTBVoucher')
   BEGIN
       DROP  Procedure  usp_DeleteTBVoucher
	END
GO

--region [dbo].[usp_DeleteTBVoucher]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteTBVoucher]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteTBVoucher]
	@VoucherID varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[TBVoucher]
WHERE
	[VoucherID] = @VoucherID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteTBWlhz')
   BEGIN
       DROP  Procedure  usp_DeleteTBWlhz
	END
GO

--region [dbo].[usp_DeleteTBWlhz]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   HUASHENG using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteTBWlhz]
-- Date Generated: 2019年1月2日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteTBWlhz]
	@ProjectID varchar(100),
	@ID varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[TBWlhz]
WHERE
	[ProjectID] = @ProjectID
	AND [ID] = @ID

--endregion


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteTbwlzl')
   BEGIN
       DROP  Procedure  usp_DeleteTbwlzl
	END
GO

--region [dbo].[usp_DeleteTbwlzl]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteTbwlzl]
-- Date Generated: 2018年8月18日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteTbwlzl]
	@ID varchar(50),
	@ProjectID varchar(100)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[Tbwlzl]
WHERE
	[ID] = @ID
	AND [ProjectID] = @ProjectID

--endregion



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_DeleteWlhzandTB')
   BEGIN
       DROP  Procedure  usp_DeleteWlhzandTB
	END
GO

--region [dbo].[usp_DeleteWlhzandTB]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_DeleteWlhzandTB]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_DeleteWlhzandTB]
	@ProjectID varchar(100),
	@ID varchar(50)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[WlhzandTB]
WHERE
	[ProjectID] = @ProjectID
	AND [ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_GetErrorInfo')
   BEGIN
       DROP  Procedure  usp_GetErrorInfo
	END
GO

--获取存储过程出现的错误信息 
CREATE PROCEDURE usp_GetErrorInfo  
AS  
    SELECT   
         ERROR_NUMBER() AS ErrorNumber  
        ,ERROR_SEVERITY() AS ErrorSeverity  
        ,ERROR_STATE() AS ErrorState  
        ,ERROR_LINE () AS ErrorLine  
        ,ERROR_PROCEDURE() AS ErrorProcedure  
        ,ERROR_MESSAGE() AS ErrorMessage;  


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertACCOUNT')
   BEGIN
       DROP  Procedure  usp_InsertACCOUNT
	END
GO

--region [dbo].[usp_InsertACCOUNT]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertACCOUNT]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertACCOUNT]
	@ProjectID varchar(100),
	@AccountCode varchar(255),
	@UpperCode varchar(255),
	@AccountName varchar(1000),
	@Attribute int,
	@Jd int,
	@Hsxms int,
	@TypeCode varchar(255),
	@Jb int,
	@IsMx int,
	@Ncye decimal(20, 2),
	@Qqccgz decimal(20, 2),
	@Jfje decimal(20, 2),
	@Dfje decimal(20, 2),
	@Ncsl int,
	@Syjz int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[ACCOUNT] (
	[ProjectID],
	[AccountCode],
	[UpperCode],
	[AccountName],
	[Attribute],
	[Jd],
	[Hsxms],
	[TypeCode],
	[Jb],
	[IsMx],
	[Ncye],
	[Qqccgz],
	[Jfje],
	[Dfje],
	[Ncsl],
	[Syjz]
) VALUES (
	@ProjectID,
	@AccountCode,
	@UpperCode,
	@AccountName,
	@Attribute,
	@Jd,
	@Hsxms,
	@TypeCode,
	@Jb,
	@IsMx,
	@Ncye,
	@Qqccgz,
	@Jfje,
	@Dfje,
	@Ncsl,
	@Syjz
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertAccountingAgeOfFscode')
   BEGIN
       DROP  Procedure  usp_InsertAccountingAgeOfFscode
	END
GO

--region [dbo].[usp_InsertAccountingAgeOfFscode]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertAccountingAgeOfFscode]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertAccountingAgeOfFscode]
	@ProjectID varchar(100),
	@ID int,
	@ORDER varchar(50),
	@FSCode varchar(50),
	@FIELDNAME varchar(50),
	@FIELDTEXT varchar(50),
	@AGEMINIMUM int,
	@AGECEILING int,
	@BADDEBTRATE float,
	@SAMPLING bit,
	@ApplyYesno int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[AccountingAgeOfFscode] (
	[ProjectID],
	[ID],
	[ORDER],
	[FSCode],
	[FIELDNAME],
	[FIELDTEXT],
	[AGEMINIMUM],
	[AGECEILING],
	[BADDEBTRATE],
	[SAMPLING],
	[ApplyYesno]
) VALUES (
	@ProjectID,
	@ID,
	@ORDER,
	@FSCode,
	@FIELDNAME,
	@FIELDTEXT,
	@AGEMINIMUM,
	@AGECEILING,
	@BADDEBTRATE,
	@SAMPLING,
	@ApplyYesno
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertAccountingPolicies')
   BEGIN
       DROP  Procedure  usp_InsertAccountingPolicies
	END
GO

--region [dbo].[usp_InsertAccountingPolicies]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertAccountingPolicies]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertAccountingPolicies]
	@ProjectID varchar(100),
	@ID int,
	@UpperID varchar(50),
	@PoliciesID varchar(50),
	@Order int,
	@Policies varchar(50),
	@ClientPolicies nvarchar(4000),
	@PoliciesEvaluation text,
	@Change int,
	@OldPolicies text,
	@ChangeDate datetime,
	@ChangeReasons text,
	@ChangeResults text,
	@ChangeEvaluation text
AS

SET NOCOUNT ON

INSERT INTO [dbo].[AccountingPolicies] (
	[ProjectID],
	[ID],
	[UpperID],
	[PoliciesID],
	[Order],
	[Policies],
	[ClientPolicies],
	[PoliciesEvaluation],
	[Change],
	[OldPolicies],
	[ChangeDate],
	[ChangeReasons],
	[ChangeResults],
	[ChangeEvaluation]
) VALUES (
	@ProjectID,
	@ID,
	@UpperID,
	@PoliciesID,
	@Order,
	@Policies,
	@ClientPolicies,
	@PoliciesEvaluation,
	@Change,
	@OldPolicies,
	@ChangeDate,
	@ChangeReasons,
	@ChangeResults,
	@ChangeEvaluation
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_Insertaccountperiod')
   BEGIN
       DROP  Procedure  usp_Insertaccountperiod
	END
GO

--region [dbo].[usp_Insertaccountperiod]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_Insertaccountperiod]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_Insertaccountperiod]
	@ProjectID varchar(100),
	@accountperiod int,
	@Period int,
	@StartDate datetime,
	@EndDate datetime,
	@DateType int,
	@CurrentyearPID varchar(100)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[accountperiod] (
	[ProjectID],
	[accountperiod],
	[Period],
	[StartDate],
	[EndDate],
	[DateType],
	[CurrentyearPID]
) VALUES (
	@ProjectID,
	@accountperiod,
	@Period,
	@StartDate,
	@EndDate,
	@DateType,
	@CurrentyearPID
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertAccountQues')
   BEGIN
       DROP  Procedure  usp_InsertAccountQues
	END
GO

--region [dbo].[usp_InsertAccountQues]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertAccountQues]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertAccountQues]
	@ProjectID varchar(100),
	@AccountCode varchar(50),
	@QuesID varchar(50),
	@QuesDescription nvarchar(2000),
	@SelectedYesNo int,
	@AuditProgramCode varchar(50),
	@QuestionType bit,
	@MutexQuesIDs varchar(100),
	@ID int OUTPUT
AS

SET NOCOUNT ON

INSERT INTO [dbo].[AccountQues] (
	[ProjectID],
	[AccountCode],
	[QuesID],
	[QuesDescription],
	[SelectedYesNo],
	[AuditProgramCode],
	[QuestionType],
	[MutexQuesIDs]
) VALUES (
	@ProjectID,
	@AccountCode,
	@QuesID,
	@QuesDescription,
	@SelectedYesNo,
	@AuditProgramCode,
	@QuestionType,
	@MutexQuesIDs
)

SET @ID = SCOPE_IDENTITY()

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertAnnounce')
   BEGIN
       DROP  Procedure  usp_InsertAnnounce
	END
GO

--region [dbo].[usp_InsertAnnounce]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertAnnounce]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertAnnounce]
	@ProjectID varchar(100),
	@StruCode nvarchar(50),
	@AnnounceContent text,
	@RoleName nvarchar(50),
	@LoginName nvarchar(50),
	@SignOffTime datetime,
	@SignOffSequence int,
	@ID int OUTPUT
AS

SET NOCOUNT ON

INSERT INTO [dbo].[Announce] (
	[ProjectID],
	[StruCode],
	[AnnounceContent],
	[RoleName],
	[LoginName],
	[SignOffTime],
	[SignOffSequence]
) VALUES (
	@ProjectID,
	@StruCode,
	@AnnounceContent,
	@RoleName,
	@LoginName,
	@SignOffTime,
	@SignOffSequence
)

SET @ID = SCOPE_IDENTITY()

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertAuditGoalandCognizance')
   BEGIN
       DROP  Procedure  usp_InsertAuditGoalandCognizance
	END
GO

--region [dbo].[usp_InsertAuditGoalandCognizance]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertAuditGoalandCognizance]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertAuditGoalandCognizance]
	@ProjectID varchar(100),
	@ClassCode varchar(50),
	@AuditGoalCode varchar(50),
	@AuditGoalName nvarchar(1000),
	@Cognizance varchar(50)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[AuditGoalandCognizance] (
	[ProjectID],
	[ClassCode],
	[AuditGoalCode],
	[AuditGoalName],
	[Cognizance]
) VALUES (
	@ProjectID,
	@ClassCode,
	@AuditGoalCode,
	@AuditGoalName,
	@Cognizance
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertAuditProgramConfig')
   BEGIN
       DROP  Procedure  usp_InsertAuditProgramConfig
	END
GO

--region [dbo].[usp_InsertAuditProgramConfig]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertAuditProgramConfig]
-- Date Generated: 2018年9月5日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertAuditProgramConfig]
	@ProjectID varchar(100),
	@AuditProgramCode varchar(50),
	@FSCodeOrCycleCode varchar(50),
	@SortID int,
	@AuditGoalCode varchar(50),
	@Category int,
	@ApplyYesNo int,
	@ProgramLevel int,
	@QuesID varchar(50),
	@SelectedYesNo int,
	@SelectedReason varchar(1000)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[AuditProgramConfig] (
	[ProjectID],
	[AuditProgramCode],
	[FSCodeOrCycleCode],
	[SortID],
	[AuditGoalCode],
	[Category],
	[ApplyYesNo],
	[ProgramLevel],
	[QuesID],
	[SelectedYesNo],
	[SelectedReason]
) VALUES (
	@ProjectID,
	@AuditProgramCode,
	@FSCodeOrCycleCode,
	@SortID,
	@AuditGoalCode,
	@Category,
	@ApplyYesNo,
	@ProgramLevel,
	@QuesID,
	@SelectedYesNo,
	@SelectedReason
)

--endregion



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertAuditProgramFile')
   BEGIN
       DROP  Procedure  usp_InsertAuditProgramFile
	END
GO
--region [dbo].[usp_InsertAuditProgramFile]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertAuditProgramFile]
-- Date Generated: 2018年9月3日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertAuditProgramFile]
	@ID varchar(50),
	@ProjectID varchar(100),
	@AuditProgramCode varchar(50),
	@FSCodeOrCycleCode varchar(50),
	@StruCode varchar(128)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[AuditProgramFile] (
	[ID],
	[ProjectID],
	[AuditProgramCode],
	[FSCodeOrCycleCode],
	[StruCode]
) VALUES (
	@ID,
	@ProjectID,
	@AuditProgramCode,
	@FSCodeOrCycleCode,
	@StruCode
)

--endregion

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertAuditProgramForm')
   BEGIN
       DROP  Procedure  usp_InsertAuditProgramForm
	END
GO
--region [dbo].[usp_InsertAuditProgramForm]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertAuditProgramForm]
-- Date Generated: 2018年9月17日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertAuditProgramForm]
	@ProjectID varchar(100),
	@AuditProgramCode varchar(50),
	@SortID int,
	@Title varchar(100),
	@AssemblyID varchar(50)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[AuditProgramForm] (
	[ProjectID],
	[AuditProgramCode],
	[SortID],
	[Title],
	[AssemblyID]
) VALUES (
	@ProjectID,
	@AuditProgramCode,
	@SortID,
	@Title,
	@AssemblyID
)

--endregion

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertAuditProgramLibrary')
   BEGIN
       DROP  Procedure  usp_InsertAuditProgramLibrary
	END
GO
--region [dbo].[usp_InsertAuditProgramLibrary]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertAuditProgramLibrary]
-- Date Generated: 2018年10月29日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertAuditProgramLibrary]
	@ProjectID varchar(100),
	@AuditProgramCode varchar(50),
	@AuditProgramTitle varchar(500),
	@AuditProgramName varchar(1000),
	@AuditProgramGuideline nvarchar(3000),
	@StageCode varchar(50),
	@MenuID int,
	@UpperProgramCode varchar(50)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[AuditProgramLibrary] (
	[ProjectID],
	[AuditProgramCode],
	[AuditProgramTitle],
	[AuditProgramName],
	[AuditProgramGuideline],
	[StageCode],
	[MenuID],
	[UpperProgramCode]
) VALUES (
	@ProjectID,
	@AuditProgramCode,
	@AuditProgramTitle,
	@AuditProgramName,
	@AuditProgramGuideline,
	@StageCode,
	@MenuID,
	@UpperProgramCode
)

--endregion
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertAuditProgramLibrary1')
   BEGIN
       DROP  Procedure  usp_InsertAuditProgramLibrary1
	END
GO

--region [dbo].[usp_InsertAuditProgramLibrary1]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertAuditProgramLibrary1]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertAuditProgramLibrary1]
	@ProjectID varchar(100),
	@AccountCode varchar(50),
	@AuditProgramCode varchar(50),
	@SortID int,
	@AuditGoalCode varchar(50),
	@AuditProgramName varchar(1000),
	@AuditProgramGuideline nvarchar(3000),
	@Category int,
	@ApplyYesNo int,
	@ProgramLevel int,
	@SelectedYesNo int,
	@IndexNo varchar(3500),
	@Preparer varchar(2000),
	@PreparerName varchar(2000)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[AuditProgramLibrary1] (
	[ProjectID],
	[AccountCode],
	[AuditProgramCode],
	[SortID],
	[AuditGoalCode],
	[AuditProgramName],
	[AuditProgramGuideline],
	[Category],
	[ApplyYesNo],
	[ProgramLevel],
	[SelectedYesNo],
	[IndexNo],
	[Preparer],
	[PreparerName]
) VALUES (
	@ProjectID,
	@AccountCode,
	@AuditProgramCode,
	@SortID,
	@AuditGoalCode,
	@AuditProgramName,
	@AuditProgramGuideline,
	@Category,
	@ApplyYesNo,
	@ProgramLevel,
	@SelectedYesNo,
	@IndexNo,
	@Preparer,
	@PreparerName
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertBActivitiesAndCGoal')
   BEGIN
       DROP  Procedure  usp_InsertBActivitiesAndCGoal
	END
GO

--region [dbo].[usp_InsertBActivitiesAndCGoal]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertBActivitiesAndCGoal]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertBActivitiesAndCGoal]
	@ProjectID varchar(100),
	@CGoalID varchar(50),
	@BActivitiesID varchar(50),
	@CGoalName varchar(50),
	@CControlPointIDs text,
	@AccountandCode text,
	@RealtedCognizance varchar(50),
	@CCActivities text,
	@ControTestProgram text,
	@ControlFrequence varchar(50),
	@SampleCount int,
	@Memo text,
	@RelationLevel int,
	@SelectedYesNO bit,
	@ACActivities text,
	@EfficiencyYesNo bit,
	@ExecutedYesNo bit,
	@EEfficiencyYesNo bit,
	@SupportingYesNo bit,
	@RelatedAccountandCognizance text
AS

SET NOCOUNT ON

INSERT INTO [dbo].[BActivitiesAndCGoal] (
	[ProjectID],
	[CGoalID],
	[BActivitiesID],
	[CGoalName],
	[CControlPointIDs],
	[AccountandCode],
	[RealtedCognizance],
	[CCActivities],
	[ControTestProgram],
	[ControlFrequence],
	[SampleCount],
	[Memo],
	[RelationLevel],
	[SelectedYesNO],
	[ACActivities],
	[EfficiencyYesNo],
	[ExecutedYesNo],
	[EEfficiencyYesNo],
	[SupportingYesNo],
	[RelatedAccountandCognizance]
) VALUES (
	@ProjectID,
	@CGoalID,
	@BActivitiesID,
	@CGoalName,
	@CControlPointIDs,
	@AccountandCode,
	@RealtedCognizance,
	@CCActivities,
	@ControTestProgram,
	@ControlFrequence,
	@SampleCount,
	@Memo,
	@RelationLevel,
	@SelectedYesNO,
	@ACActivities,
	@EfficiencyYesNo,
	@ExecutedYesNo,
	@EEfficiencyYesNo,
	@SupportingYesNo,
	@RelatedAccountandCognizance
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertBankAcceptBill')
   BEGIN
       DROP  Procedure  usp_InsertBankAcceptBill
	END
GO

--region [dbo].[usp_InsertBankAcceptBill]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   HUASHENG using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertBankAcceptBill]
-- Date Generated: 2018年11月22日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertBankAcceptBill]
	@ID varchar(100),
	@ProjectID varchar(100),
	@BankID varchar(100),
	@BankName varchar(100),
	@AcceptBillNum varchar(100),
	@AcceptBankName varchar(100),
	@AccountName varchar(100),
	@AcceptMoney decimal(20, 2),
	@BeginDate datetime,
	@EndDate datetime
AS

SET NOCOUNT ON

INSERT INTO [dbo].[BankAcceptBill] (
	[ID],
	[ProjectID],
	[BankID],
	[BankName],
	[AcceptBillNum],
	[AcceptBankName],
	[AccountName],
	[AcceptMoney],
	[BeginDate],
	[EndDate]
) VALUES (
	@ID,
	@ProjectID,
	@BankID,
	@BankName,
	@AcceptBillNum,
	@AcceptBankName,
	@AccountName,
	@AcceptMoney,
	@BeginDate,
	@EndDate
)

--endregion


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertBankAccount')
   BEGIN
       DROP  Procedure  usp_InsertBankAccount
	END
GO
CREATE PROCEDURE [dbo].[usp_InsertBankAccount]
	@ID varchar(100),
	@ProjectID varchar(100),
	@BankID varchar(100),
	@BankName varchar(100),
	@AccountName varchar(100),
	@BankNum varchar(100),
	@Currency varchar(50),
	@Rate varchar(50),
	@AccountType varchar(100),
	@Balance decimal(20, 2),
	@BeginEndDate varchar(50),
	@Explain varchar(100),
	@Remark varchar(1000)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[BankAccount] (
	[ID],
	[ProjectID],
	[BankID],
	[BankName],
	[AccountName],
	[BankNum],
	[Currency],
	[Rate],
	[AccountType],
	[Balance],
	[BeginEndDate],
	[Explain],
	[Remark]
) VALUES (
	@ID,
	@ProjectID,
	@BankID,
	@BankName,
	@AccountName,
	@BankNum,
	@Currency,
	@Rate,
	@AccountType,
	@Balance,
	@BeginEndDate,
	@Explain,
	@Remark
)

--endregion
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertBankBorrow')
   BEGIN
       DROP  Procedure  usp_InsertBankBorrow
	END
GO
CREATE PROCEDURE [dbo].[usp_InsertBankBorrow]
	@ID varchar(100),
	@ProjectID varchar(100),
	@BankID varchar(100),
	@BankName varchar(100),
	@BorrowName varchar(100),
	@BankNum varchar(100),
	@Currency varchar(50),
	@Balance decimal(20, 2),
	@BorrowDate datetime,
	@BecomeDate datetime,
	@Rate varchar(50),
	@AssureName varchar(100),
	@Remark varchar(1000)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[BankBorrow] (
	[ID],
	[ProjectID],
	[BankID],
	[BankName],
	[BorrowName],
	[BankNum],
	[Currency],
	[Balance],
	[BorrowDate],
	[BecomeDate],
	[Rate],
	[AssureName],
	[Remark]
) VALUES (
	@ID,
	@ProjectID,
	@BankID,
	@BankName,
	@BorrowName,
	@BankNum,
	@Currency,
	@Balance,
	@BorrowDate,
	@BecomeDate,
	@Rate,
	@AssureName,
	@Remark
)

--endregion
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertBankInfo')
   BEGIN
       DROP  Procedure  usp_InsertBankInfo
	END
GO

--region [dbo].[usp_InsertBankInfo]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   HUASHENG using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertBankInfo]
-- Date Generated: 2019年1月2日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertBankInfo]
	@ID varchar(100),
	@ProjectID varchar(100),
	@BankName varchar(100),
	@EndDate datetime,
	@HZNumber varchar(100),
	@HZSortID varchar(10),
	@Remark varchar(1000)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[BankInfo] (
	[ID],
	[ProjectID],
	[BankName],
	[EndDate],
	[HZNumber],
	[HZSortID],
	[Remark]
) VALUES (
	@ID,
	@ProjectID,
	@BankName,
	@EndDate,
	@HZNumber,
	@HZSortID,
	@Remark
)

--endregion


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertBankUnsubscribe')
   BEGIN
       DROP  Procedure  usp_InsertBankUnsubscribe
	END
GO

--region [dbo].[usp_InsertBankUnsubscribe]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   HUASHENG using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertBankUnsubscribe]
-- Date Generated: 2018年11月22日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertBankUnsubscribe]
	@ID varchar(100),
	@ProjectID varchar(100),
	@BankID varchar(100),
	@BankName varchar(100),
	@AccountName varchar(100),
	@BankNum varchar(100),
	@Currency varchar(50),
	@UnsubscribeDate datetime
AS

SET NOCOUNT ON

INSERT INTO [dbo].[BankUnsubscribe] (
	[ID],
	[ProjectID],
	[BankID],
	[BankName],
	[AccountName],
	[BankNum],
	[Currency],
	[UnsubscribeDate]
) VALUES (
	@ID,
	@ProjectID,
	@BankID,
	@BankName,
	@AccountName,
	@BankNum,
	@Currency,
	@UnsubscribeDate
)

--endregion


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertBCycleAndAccounts')
   BEGIN
       DROP  Procedure  usp_InsertBCycleAndAccounts
	END
GO

--region [dbo].[usp_InsertBCycleAndAccounts]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertBCycleAndAccounts]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertBCycleAndAccounts]
	@ProjectID varchar(100),
	@BusinessCycleID varchar(50),
	@AccountID varchar(50),
	@AccountName varchar(50),
	@Memo text,
	@SelectedYesNO bit
AS

SET NOCOUNT ON

INSERT INTO [dbo].[BCycleAndAccounts] (
	[ProjectID],
	[BusinessCycleID],
	[AccountID],
	[AccountName],
	[Memo],
	[SelectedYesNO]
) VALUES (
	@ProjectID,
	@BusinessCycleID,
	@AccountID,
	@AccountName,
	@Memo,
	@SelectedYesNO
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertBCycleAndBActivities')
   BEGIN
       DROP  Procedure  usp_InsertBCycleAndBActivities
	END
GO

--region [dbo].[usp_InsertBCycleAndBActivities]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertBCycleAndBActivities]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertBCycleAndBActivities]
	@ProjectID varchar(100),
	@BusinessCycleID varchar(50),
	@BActivitiesID varchar(50),
	@BActivitiesName varchar(50),
	@Memo text,
	@RelationLevel int,
	@SelectedYesNO bit,
	@UnSelectedReason text
AS

SET NOCOUNT ON

INSERT INTO [dbo].[BCycleAndBActivities] (
	[ProjectID],
	[BusinessCycleID],
	[BActivitiesID],
	[BActivitiesName],
	[Memo],
	[RelationLevel],
	[SelectedYesNO],
	[UnSelectedReason]
) VALUES (
	@ProjectID,
	@BusinessCycleID,
	@BActivitiesID,
	@BActivitiesName,
	@Memo,
	@RelationLevel,
	@SelectedYesNO,
	@UnSelectedReason
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertBusinessCycle')
   BEGIN
       DROP  Procedure  usp_InsertBusinessCycle
	END
GO

--region [dbo].[usp_InsertBusinessCycle]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertBusinessCycle]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertBusinessCycle]
	@ProjectID varchar(100),
	@BusinessCycleID varchar(50),
	@BusinessCycleName varchar(50),
	@Memo text,
	@FileCodeFor15000 varchar(50),
	@FileCodeFor40000 varchar(50),
	@LastExecutedYear int,
	@ExecutedYesNo bit,
	@NextExecutedYear int,
	@TotalInitialConslusion int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[BusinessCycle] (
	[ProjectID],
	[BusinessCycleID],
	[BusinessCycleName],
	[Memo],
	[FileCodeFor15000],
	[FileCodeFor40000],
	[LastExecutedYear],
	[ExecutedYesNo],
	[NextExecutedYear],
	[TotalInitialConslusion]
) VALUES (
	@ProjectID,
	@BusinessCycleID,
	@BusinessCycleName,
	@Memo,
	@FileCodeFor15000,
	@FileCodeFor40000,
	@LastExecutedYear,
	@ExecutedYesNo,
	@NextExecutedYear,
	@TotalInitialConslusion
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertClientMaintainProposed')
   BEGIN
       DROP  Procedure  usp_InsertClientMaintainProposed
	END
GO

--region [dbo].[usp_InsertClientMaintainProposed]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertClientMaintainProposed]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertClientMaintainProposed]
	@ProjectID varchar(100),
	@ID int,
	@UpperID int,
	@ConsiderElement text,
	@Existence bit,
	@IsTitle bit
AS

SET NOCOUNT ON

INSERT INTO [dbo].[ClientMaintainProposed] (
	[ProjectID],
	[ID],
	[UpperID],
	[ConsiderElement],
	[Existence],
	[IsTitle]
) VALUES (
	@ProjectID,
	@ID,
	@UpperID,
	@ConsiderElement,
	@Existence,
	@IsTitle
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertCombinationChangedReason')
   BEGIN
       DROP  Procedure  usp_InsertCombinationChangedReason
	END
GO

--region [dbo].[usp_InsertCombinationChangedReason]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertCombinationChangedReason]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertCombinationChangedReason]
	@GUID varchar(50),
	@ProjectID varchar(50),
	@StruCode varchar(50),
	@ComPID varchar(50),
	@ChangeReason varchar(max)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[CombinationChangedReason] (
	[GUID],
	[ProjectID],
	[StruCode],
	[ComPID],
	[ChangeReason]
) VALUES (
	@GUID,
	@ProjectID,
	@StruCode,
	@ComPID,
	@ChangeReason
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertCombinationList')
   BEGIN
       DROP  Procedure  usp_InsertCombinationList
	END
GO

--region [dbo].[usp_InsertCombinationList]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertCombinationList]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertCombinationList]
	@ProjectID varchar(50),
	@ComCode varchar(50),
	@ComName varchar(500)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[CombinationList] (
	[ProjectID],
	[ComCode],
	[ComName]
) VALUES (
	@ProjectID,
	@ComCode,
	@ComName
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertCombinationRange')
   BEGIN
       DROP  Procedure  usp_InsertCombinationRange
	END
GO

--region [dbo].[usp_InsertCombinationRange]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertCombinationRange]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertCombinationRange]
	@GUID varchar(50),
	@ProjectID varchar(50),
	@StruCode varchar(50),
	@ComPID varchar(50),
	@IsForeign int,
	@Rate decimal(10, 4),
	@ComTime datetime
AS

SET NOCOUNT ON

INSERT INTO [dbo].[CombinationRange] (
	[GUID],
	[ProjectID],
	[StruCode],
	[ComPID],
	[IsForeign],
	[Rate],
	[ComTime]
) VALUES (
	@GUID,
	@ProjectID,
	@StruCode,
	@ComPID,
	@IsForeign,
	@Rate,
	@ComTime
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertCommunication')
   BEGIN
       DROP  Procedure  usp_InsertCommunication
	END
GO

--region [dbo].[usp_InsertCommunication]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertCommunication]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertCommunication]
	@ProjectID varchar(100),
	@StruCode nvarchar(50),
	@CommunicationTargets int,
	@CommunicationContent text,
	@ReferenceList nvarchar(50),
	@ID int OUTPUT
AS

SET NOCOUNT ON

INSERT INTO [dbo].[Communication] (
	[ProjectID],
	[StruCode],
	[CommunicationTargets],
	[CommunicationContent],
	[ReferenceList]
) VALUES (
	@ProjectID,
	@StruCode,
	@CommunicationTargets,
	@CommunicationContent,
	@ReferenceList
)

SET @ID = SCOPE_IDENTITY()

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertComNoteData')
   BEGIN
       DROP  Procedure  usp_InsertComNoteData
	END
GO

--region [dbo].[usp_InsertComNoteData]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertComNoteData]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertComNoteData]
	@GUID varchar(50),
	@ProjectID varchar(50),
	@StruCode varchar(255),
	@FormCode varchar(50),
	@NoteCode varchar(100),
	@Bth nvarchar(255),
	@CheckData decimal(20, 2)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[ComNoteData] (
	[GUID],
	[ProjectID],
	[StruCode],
	[FormCode],
	[NoteCode],
	[Bth],
	[CheckData]
) VALUES (
	@GUID,
	@ProjectID,
	@StruCode,
	@FormCode,
	@NoteCode,
	@Bth,
	@CheckData
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertComNoteDataDetail')
   BEGIN
       DROP  Procedure  usp_InsertComNoteDataDetail
	END
GO

--region [dbo].[usp_InsertComNoteDataDetail]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertComNoteDataDetail]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertComNoteDataDetail]
	@GUID varchar(50),
	@UpperGUID varchar(50),
	@ProjectID varchar(50),
	@StruCode varchar(255),
	@ComProjectID varchar(255),
	@FormCode varchar(50),
	@NoteCode varchar(100),
	@ColumnCode varchar(50),
	@NumberField decimal(20, 2),
	@TextField nvarchar(255),
	@DateField datetime
AS

SET NOCOUNT ON

INSERT INTO [dbo].[ComNoteDataDetail] (
	[GUID],
	[UpperGUID],
	[ProjectID],
	[StruCode],
	[ComProjectID],
	[FormCode],
	[NoteCode],
	[ColumnCode],
	[NumberField],
	[TextField],
	[DateField]
) VALUES (
	@GUID,
	@UpperGUID,
	@ProjectID,
	@StruCode,
	@ComProjectID,
	@FormCode,
	@NoteCode,
	@ColumnCode,
	@NumberField,
	@TextField,
	@DateField
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertComNoteMemo')
   BEGIN
       DROP  Procedure  usp_InsertComNoteMemo
	END
GO

--region [dbo].[usp_InsertComNoteMemo]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertComNoteMemo]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertComNoteMemo]
	@ProjectID varchar(50),
	@StruCode varchar(100),
	@FSCode varchar(100),
	@FormCode varchar(50),
	@Memo nvarchar(4000),
	@memohelp varchar(max)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[ComNoteMemo] (
	[ProjectID],
	[StruCode],
	[FSCode],
	[FormCode],
	[Memo],
	[memohelp]
) VALUES (
	@ProjectID,
	@StruCode,
	@FSCode,
	@FormCode,
	@Memo,
	@memohelp
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertContentofSampleTest')
   BEGIN
       DROP  Procedure  usp_InsertContentofSampleTest
	END
GO

--region [dbo].[usp_InsertContentofSampleTest]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertContentofSampleTest]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertContentofSampleTest]
	@ProjectID varchar(100),
	@FSCode varchar(50),
	@FunctionType varchar(10),
	@contentID int,
	@recordtype int,
	@Fieldname varchar(50),
	@Display int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[ContentofSampleTest] (
	[ProjectID],
	[FSCode],
	[FunctionType],
	[contentID],
	[recordtype],
	[Fieldname],
	[Display]
) VALUES (
	@ProjectID,
	@FSCode,
	@FunctionType,
	@contentID,
	@recordtype,
	@Fieldname,
	@Display
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertContentofsampleTestInfo')
   BEGIN
       DROP  Procedure  usp_InsertContentofsampleTestInfo
	END
GO

--region [dbo].[usp_InsertContentofsampleTestInfo]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertContentofsampleTestInfo]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertContentofsampleTestInfo]
	@ProjectID varchar(100),
	@FSCode varchar(50),
	@contentID int,
	@FunctionType varchar(10),
	@recordtype int,
	@NumberofAE int,
	@DateofAE int,
	@AmountofAE int,
	@QuantityofAE int,
	@AuditEvidence int,
	@copyofEvidence int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[ContentofsampleTestInfo] (
	[ProjectID],
	[FSCode],
	[contentID],
	[FunctionType],
	[recordtype],
	[NumberofAE],
	[DateofAE],
	[AmountofAE],
	[QuantityofAE],
	[AuditEvidence],
	[copyofEvidence]
) VALUES (
	@ProjectID,
	@FSCode,
	@contentID,
	@FunctionType,
	@recordtype,
	@NumberofAE,
	@DateofAE,
	@AmountofAE,
	@QuantityofAE,
	@AuditEvidence,
	@copyofEvidence
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertCriticalElementofPM')
   BEGIN
       DROP  Procedure  usp_InsertCriticalElementofPM
	END
GO

--region [dbo].[usp_InsertCriticalElementofPM]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertCriticalElementofPM]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertCriticalElementofPM]
	@ProjectID varchar(100),
	@ID varchar(50),
	@Fscode varchar(50),
	@CriticalElement varchar(100),
	@OtherCriticalElement varchar(100),
	@CriticalElementCount decimal(22, 2),
	@SelectedIndex decimal(10, 4),
	@SelectedIndexDescription varchar(500),
	@CurrentMateriality decimal(22, 2),
	@selected int,
	@Reasons varchar(500)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[CriticalElementofPM] (
	[ProjectID],
	[ID],
	[Fscode],
	[CriticalElement],
	[OtherCriticalElement],
	[CriticalElementCount],
	[SelectedIndex],
	[SelectedIndexDescription],
	[CurrentMateriality],
	[selected],
	[Reasons]
) VALUES (
	@ProjectID,
	@ID,
	@Fscode,
	@CriticalElement,
	@OtherCriticalElement,
	@CriticalElementCount,
	@SelectedIndex,
	@SelectedIndexDescription,
	@CurrentMateriality,
	@selected,
	@Reasons
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertCutofftest')
   BEGIN
       DROP  Procedure  usp_InsertCutofftest
	END
GO

--region [dbo].[usp_InsertCutofftest]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertCutofftest]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertCutofftest]
	@VoucherID varchar(50),
	@ProjectID varchar(100),
	@FSCode varchar(50),
	@AccountCode varchar(100),
	@AccountName varchar(100),
	@ProjectCode varchar(100),
	@IsBefore int,
	@Sample int,
	@OsDate datetime,
	@PZH varchar(100),
	@dfkm varchar(100),
	@JD int,
	@JE decimal(20, 2),
	@ZY varchar(255)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[Cutofftest] (
	[VoucherID],
	[ProjectID],
	[FSCode],
	[AccountCode],
	[AccountName],
	[ProjectCode],
	[IsBefore],
	[Sample],
	[OsDate],
	[PZH],
	[dfkm],
	[JD],
	[JE],
	[ZY]
) VALUES (
	@VoucherID,
	@ProjectID,
	@FSCode,
	@AccountCode,
	@AccountName,
	@ProjectCode,
	@IsBefore,
	@Sample,
	@OsDate,
	@PZH,
	@dfkm,
	@JD,
	@JE,
	@ZY
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertEliminationAllocate')
   BEGIN
       DROP  Procedure  usp_InsertEliminationAllocate
	END
GO

--region [dbo].[usp_InsertEliminationAllocate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertEliminationAllocate]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertEliminationAllocate]
	@GUID varchar(50),
	@ProjectID varchar(50),
	@EliminationNO varchar(50),
	@ComPID varchar(50),
	@FsCode varchar(50),
	@AccountCode varchar(100),
	@AuxiliaryCode varchar(100),
	@FormCode varchar(50),
	@NoteCode varchar(100),
	@ColumnCode varchar(50),
	@CheckData decimal(20, 2),
	@ChildEliminationID varchar(50)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[EliminationAllocate] (
	[GUID],
	[ProjectID],
	[EliminationNO],
	[ComPID],
	[FsCode],
	[AccountCode],
	[AuxiliaryCode],
	[FormCode],
	[NoteCode],
	[ColumnCode],
	[CheckData],
	[ChildEliminationID]
) VALUES (
	@GUID,
	@ProjectID,
	@EliminationNO,
	@ComPID,
	@FsCode,
	@AccountCode,
	@AuxiliaryCode,
	@FormCode,
	@NoteCode,
	@ColumnCode,
	@CheckData,
	@ChildEliminationID
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertERisksLevel')
   BEGIN
       DROP  Procedure  usp_InsertERisksLevel
	END
GO

--region [dbo].[usp_InsertERisksLevel]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertERisksLevel]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertERisksLevel]
	@ProjectID varchar(100),
	@ID int,
	@UpperID int,
	@Riskcase varchar(500),
	@RiskID int,
	@RiskYesNO int,
	@ImportantRiskYesNo int,
	@Reference varchar(50)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[ERisksLevel] (
	[ProjectID],
	[ID],
	[UpperID],
	[Riskcase],
	[RiskID],
	[RiskYesNO],
	[ImportantRiskYesNo],
	[Reference]
) VALUES (
	@ProjectID,
	@ID,
	@UpperID,
	@Riskcase,
	@RiskID,
	@RiskYesNO,
	@ImportantRiskYesNo,
	@Reference
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertErrorRelationItem')
   BEGIN
       DROP  Procedure  usp_InsertErrorRelationItem
	END
GO

--region [dbo].[usp_InsertErrorRelationItem]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertErrorRelationItem]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertErrorRelationItem]
	@ID varchar(50),
	@ErrorID varchar(50),
	@ErrorType int,
	@ProjectID varchar(100),
	@FsCode varchar(50),
	@JD int,
	@JE decimal(20, 2)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[ErrorRelationItem] (
	[ID],
	[ErrorID],
	[ErrorType],
	[ProjectID],
	[FsCode],
	[JD],
	[JE]
) VALUES (
	@ID,
	@ErrorID,
	@ErrorType,
	@ProjectID,
	@FsCode,
	@JD,
	@JE
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertEvaluationError')
   BEGIN
       DROP  Procedure  usp_InsertEvaluationError
	END
GO

--region [dbo].[usp_InsertEvaluationError]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertEvaluationError]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertEvaluationError]
	@ID varchar(50),
	@ProjectID varchar(100),
	@FsCode varchar(50),
	@AccountCode varchar(100),
	@AuxiliaryCode varchar(100),
	@Type int,
	@ReferCode varchar(50),
	@SampleData decimal(20, 2),
	@ExpectedData decimal(20, 2),
	@AcceptDiff decimal(20, 2),
	@ConfirmedDiff decimal(20, 2),
	@EvaluationError decimal(20, 2),
	@AffectKm varchar(500),
	@Memo varchar(100),
	@IsUse int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[EvaluationError] (
	[ID],
	[ProjectID],
	[FsCode],
	[AccountCode],
	[AuxiliaryCode],
	[Type],
	[ReferCode],
	[SampleData],
	[ExpectedData],
	[AcceptDiff],
	[ConfirmedDiff],
	[EvaluationError],
	[AffectKm],
	[Memo],
	[IsUse]
) VALUES (
	@ID,
	@ProjectID,
	@FsCode,
	@AccountCode,
	@AuxiliaryCode,
	@Type,
	@ReferCode,
	@SampleData,
	@ExpectedData,
	@AcceptDiff,
	@ConfirmedDiff,
	@EvaluationError,
	@AffectKm,
	@Memo,
	@IsUse
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertFileReviews')
   BEGIN
       DROP  Procedure  usp_InsertFileReviews
	END
GO

--region [dbo].[usp_InsertFileReviews]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertFileReviews]
-- Date Generated: 2018年8月28日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertFileReviews]
	@ID varchar(50),
	@ProjectID varchar(100),
	@StruCode varchar(50),
	@AuditProgramCode varchar(50),
	@IsOpen int,
	@Context varchar(max),
	@feedback varchar(max),
	@feedbackdoc varchar(50),
	@Reviewer varchar(50),
	@ReviewerName varchar(50),
	@LastReviewerTime datetime,
	@BackLoginName varchar(50),
	@BackUserName varchar(50),
	@lastfeedbackTime datetime,
	@IsDelete int,
	@CreateTime datetime
AS

SET NOCOUNT ON

INSERT INTO [dbo].[FileReviews] (
	[ID],
	[ProjectID],
	[StruCode],
	[AuditProgramCode],
	[IsOpen],
	[Context],
	[feedback],
	[feedbackdoc],
	[Reviewer],
	[ReviewerName],
	[LastReviewerTime],
	[BackLoginName],
	[BackUserName],
	[lastfeedbackTime],
	[IsDelete],
	[CreateTime]
) VALUES (
	@ID,
	@ProjectID,
	@StruCode,
	@AuditProgramCode,
	@IsOpen,
	@Context,
	@feedback,
	@feedbackdoc,
	@Reviewer,
	@ReviewerName,
	@LastReviewerTime,
	@BackLoginName,
	@BackUserName,
	@lastfeedbackTime,
	@IsDelete,
	@CreateTime
)

--endregion



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertFileReviewsImage')
   BEGIN
       DROP  Procedure  usp_InsertFileReviewsImage
	END
GO

--region [dbo].[usp_InsertFileReviewsImage]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertFileReviewsImage]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertFileReviewsImage]
	@ID varchar(50),
	@ProjectID varchar(100),
	@FileID varchar(50),
	@SortID int,
	@FilePath varchar(1000),
	@LibID varchar(100)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[FileReviewsImage] (
	[ID],
	[ProjectID],
	[FileID],
	[SortID],
	[FilePath],
	[LibID]
) VALUES (
	@ID,
	@ProjectID,
	@FileID,
	@SortID,
	@FilePath,
	@LibID
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertFileScriptList')
   BEGIN
       DROP  Procedure  usp_InsertFileScriptList
	END
GO

--region [dbo].[usp_InsertFileScriptList]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertFileScriptList]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertFileScriptList]
	@ProjectID varchar(100),
	@FileLibID varchar(128),
	@StruCode varchar(128),
	@StruCodeText varchar(128),
	@StruName nvarchar(500),
	@UpperStruCode varchar(128),
	@StruType int,
	@StruDescription nvarchar(1000),
	@StruCriticalYesNO bit,
	@StruTarget varchar(500),
	@BuildingType varchar(100),
	@Checkout int,
	@CheckedReviewer nvarchar(1000),
	@StruPreparer nvarchar(1000),
	@StruCreateTime datetime,
	@StruReviewer nvarchar(1000),
	@StruMasterORCarbon bit,
	@FlowExcutedState int,
	@OpenNotes int,
	@ClosedNotes int,
	@StruSize int,
	@StruLastEditTime datetime,
	@FlowID int,
	@FlowExcutedTime datetime,
	@Fsitem int,
	@FSCode varchar(50),
	@BCycleCode varchar(100),
	@AppScopeProject int,
	@NonAppScopeProject int,
	@AppCombineProject int,
	@BuildLevel int,
	@carrieddown int,
	@ConnectData int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[FileScriptList] (
	[ProjectID],
	[FileLibID],
	[StruCode],
	[StruCodeText],
	[StruName],
	[UpperStruCode],
	[StruType],
	[StruDescription],
	[StruCriticalYesNO],
	[StruTarget],
	[BuildingType],
	[Checkout],
	[CheckedReviewer],
	[StruPreparer],
	[StruCreateTime],
	[StruReviewer],
	[StruMasterORCarbon],
	[FlowExcutedState],
	[OpenNotes],
	[ClosedNotes],
	[StruSize],
	[StruLastEditTime],
	[FlowID],
	[FlowExcutedTime],
	[Fsitem],
	[FSCode],
	[BCycleCode],
	[AppScopeProject],
	[NonAppScopeProject],
	[AppCombineProject],
	[BuildLevel],
	[carrieddown],
	[ConnectData]
) VALUES (
	@ProjectID,
	@FileLibID,
	@StruCode,
	@StruCodeText,
	@StruName,
	@UpperStruCode,
	@StruType,
	@StruDescription,
	@StruCriticalYesNO,
	@StruTarget,
	@BuildingType,
	@Checkout,
	@CheckedReviewer,
	@StruPreparer,
	@StruCreateTime,
	@StruReviewer,
	@StruMasterORCarbon,
	@FlowExcutedState,
	@OpenNotes,
	@ClosedNotes,
	@StruSize,
	@StruLastEditTime,
	@FlowID,
	@FlowExcutedTime,
	@Fsitem,
	@FSCode,
	@BCycleCode,
	@AppScopeProject,
	@NonAppScopeProject,
	@AppCombineProject,
	@BuildLevel,
	@carrieddown,
	@ConnectData
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertFlowsAction')
   BEGIN
       DROP  Procedure  usp_InsertFlowsAction
	END
GO

--region [dbo].[usp_InsertFlowsAction]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertFlowsAction]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertFlowsAction]
	@ProjectID varchar(100),
	@StruID varchar(50),
	@FlowID int,
	@NodeID int,
	@NodeProcessor varchar(50),
	@ActionDatetime datetime
AS

SET NOCOUNT ON

INSERT INTO [dbo].[FlowsAction] (
	[ProjectID],
	[StruID],
	[FlowID],
	[NodeID],
	[NodeProcessor],
	[ActionDatetime]
) VALUES (
	@ProjectID,
	@StruID,
	@FlowID,
	@NodeID,
	@NodeProcessor,
	@ActionDatetime
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertFSCodeConfig')
   BEGIN
       DROP  Procedure  usp_InsertFSCodeConfig
	END
GO

--region [dbo].[usp_InsertFSCodeConfig]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertFSCodeConfig]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertFSCodeConfig]
	@ProjectID varchar(100),
	@FsCode varchar(50),
	@FsName varchar(100),
	@FSType int,
	@TBType int,
	@IsMx int,
	@Kmsx varchar(50),
	@Yefx int,
	@TBGrouping varchar(50),
	@IsCashflow int,
	@IsBankConfirmation int,
	@IsRiskassess int,
	@IsNote int,
	@IsAuditplan int,
	@IsAuditdocument int,
	@AccountingMeasure varchar(100),
	@FERcode varchar(100),
	@IsUse int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[FSCodeConfig] (
	[ProjectID],
	[FsCode],
	[FsName],
	[FSType],
	[TBType],
	[IsMx],
	[Kmsx],
	[Yefx],
	[TBGrouping],
	[IsCashflow],
	[IsBankConfirmation],
	[IsRiskassess],
	[IsNote],
	[IsAuditplan],
	[IsAuditdocument],
	[AccountingMeasure],
	[FERcode],
	[IsUse]
) VALUES (
	@ProjectID,
	@FsCode,
	@FsName,
	@FSType,
	@TBType,
	@IsMx,
	@Kmsx,
	@Yefx,
	@TBGrouping,
	@IsCashflow,
	@IsBankConfirmation,
	@IsRiskassess,
	@IsNote,
	@IsAuditplan,
	@IsAuditdocument,
	@AccountingMeasure,
	@FERcode,
	@IsUse
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertInherentRisk')
   BEGIN
       DROP  Procedure  usp_InsertInherentRisk
	END
GO

--region [dbo].[usp_InsertInherentRisk]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertInherentRisk]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertInherentRisk]
	@ProjectID varchar(100),
	@ID int,
	@RiskLevelID int,
	@RiskLevelType int,
	@RiskSource varchar(50),
	@RiskYesNO bit,
	@RiskDescription text,
	@ImportantRiskYesNo bit,
	@SpecialRiskYesNo bit,
	@ReportSeverityYesNo bit,
	@Solution text,
	@Countermeasure text,
	@Referencelist text,
	@FinalcialRiskYesNo bit,
	@Results text,
	@Conclusion1 text,
	@Conclusion2 text
AS

SET NOCOUNT ON

INSERT INTO [dbo].[InherentRisk] (
	[ProjectID],
	[ID],
	[RiskLevelID],
	[RiskLevelType],
	[RiskSource],
	[RiskYesNO],
	[RiskDescription],
	[ImportantRiskYesNo],
	[SpecialRiskYesNo],
	[ReportSeverityYesNo],
	[Solution],
	[Countermeasure],
	[Referencelist],
	[FinalcialRiskYesNo],
	[Results],
	[Conclusion1],
	[Conclusion2]
) VALUES (
	@ProjectID,
	@ID,
	@RiskLevelID,
	@RiskLevelType,
	@RiskSource,
	@RiskYesNO,
	@RiskDescription,
	@ImportantRiskYesNo,
	@SpecialRiskYesNo,
	@ReportSeverityYesNo,
	@Solution,
	@Countermeasure,
	@Referencelist,
	@FinalcialRiskYesNo,
	@Results,
	@Conclusion1,
	@Conclusion2
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertInherentRiskAccount')
   BEGIN
       DROP  Procedure  usp_InsertInherentRiskAccount
	END
GO

--region [dbo].[usp_InsertInherentRiskAccount]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertInherentRiskAccount]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertInherentRiskAccount]
	@ProjectID varchar(100),
	@ID int,
	@RiskID int,
	@RiskSource nvarchar(50),
	@AccountID varchar(50),
	@AccountName nvarchar(50),
	@CognizanceCode varchar(50),
	@AuditMethod varchar(50),
	@ControlTestProgram varchar(50),
	@MaterialityTestProgramYesNo bit,
	@DetailTestYesNo bit,
	@Memo text,
	@CGoalID varchar(50),
	@Referencelist1 text,
	@Referencelist2 text,
	@Referencelist3 text,
	@TotalConclusion text,
	@Countermeasure text
AS

SET NOCOUNT ON

INSERT INTO [dbo].[InherentRiskAccount] (
	[ProjectID],
	[ID],
	[RiskID],
	[RiskSource],
	[AccountID],
	[AccountName],
	[CognizanceCode],
	[AuditMethod],
	[ControlTestProgram],
	[MaterialityTestProgramYesNo],
	[DetailTestYesNo],
	[Memo],
	[CGoalID],
	[Referencelist1],
	[Referencelist2],
	[Referencelist3],
	[TotalConclusion],
	[Countermeasure]
) VALUES (
	@ProjectID,
	@ID,
	@RiskID,
	@RiskSource,
	@AccountID,
	@AccountName,
	@CognizanceCode,
	@AuditMethod,
	@ControlTestProgram,
	@MaterialityTestProgramYesNo,
	@DetailTestYesNo,
	@Memo,
	@CGoalID,
	@Referencelist1,
	@Referencelist2,
	@Referencelist3,
	@TotalConclusion,
	@Countermeasure
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertNoteAndTB')
   BEGIN
       DROP  Procedure  usp_InsertNoteAndTB
	END
GO

--region [dbo].[usp_InsertNoteAndTB]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   HUASHENG using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertNoteAndTB]
-- Date Generated: 2018年12月11日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertNoteAndTB]
	@GUID varchar(50),
	@ProjectID varchar(50),
	@NoteCode varchar(100),
	@FormCode varchar(50),
	@FSCode varchar(100),
	@AccountCode varchar(100),
	@AuxiliaryCode varchar(100),
	@TBType int,
	@IDGrouping varchar(50)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[NoteAndTB] (
	[GUID],
	[ProjectID],
	[NoteCode],
	[FormCode],
	[FSCode],
	[AccountCode],
	[AuxiliaryCode],
	[TBType],
	[IDGrouping]
) VALUES (
	@GUID,
	@ProjectID,
	@NoteCode,
	@FormCode,
	@FSCode,
	@AccountCode,
	@AuxiliaryCode,
	@TBType,
	@IDGrouping
)

--endregion


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertNoteCheckRule')
   BEGIN
       DROP  Procedure  usp_InsertNoteCheckRule
	END
GO

--region [dbo].[usp_InsertNoteCheckRule]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertNoteCheckRule]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertNoteCheckRule]
	@ID varchar(50),
	@ProjectID varchar(50),
	@FSCode varchar(100),
	@FormType int,
	@CheckPathOne varchar(1000),
	@CheckPathTwo varchar(1000),
	@Remark varchar(2000),
	@IsUseCom int,
	@IsUse int,
	@SelectType int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[NoteCheckRule] (
	[ID],
	[ProjectID],
	[FSCode],
	[FormType],
	[CheckPathOne],
	[CheckPathTwo],
	[Remark],
	[IsUseCom],
	[IsUse],
	[SelectType]
) VALUES (
	@ID,
	@ProjectID,
	@FSCode,
	@FormType,
	@CheckPathOne,
	@CheckPathTwo,
	@Remark,
	@IsUseCom,
	@IsUse,
	@SelectType
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertNoteColumnAttribute')
   BEGIN
       DROP  Procedure  usp_InsertNoteColumnAttribute
	END
GO

--region [dbo].[usp_InsertNoteColumnAttribute]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertNoteColumnAttribute]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertNoteColumnAttribute]
	@ProjectID varchar(50),
	@ColumnCode varchar(50),
	@FSCode varchar(100),
	@FormCode varchar(50),
	@Title varchar(255),
	@SortID int,
	@Type int,
	@IsConnect int,
	@ConnectName varchar(50),
	@IsCheckRow int,
	@IsMerge int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[NoteColumnAttribute] (
	[ProjectID],
	[ColumnCode],
	[FSCode],
	[FormCode],
	[Title],
	[SortID],
	[Type],
	[IsConnect],
	[ConnectName],
	[IsCheckRow],
	[IsMerge]
) VALUES (
	@ProjectID,
	@ColumnCode,
	@FSCode,
	@FormCode,
	@Title,
	@SortID,
	@Type,
	@IsConnect,
	@ConnectName,
	@IsCheckRow,
	@IsMerge
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertNoteComFormula')
   BEGIN
       DROP  Procedure  usp_InsertNoteComFormula
	END
GO

--region [dbo].[usp_InsertNoteComFormula]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertNoteComFormula]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertNoteComFormula]
	@ProjectID varchar(50),
	@StruCode varchar(255),
	@ColumnCode varchar(50),
	@NoteCode varchar(100),
	@FormCode varchar(50),
	@FSCode varchar(100),
	@Formula varchar(500)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[NoteComFormula] (
	[ProjectID],
	[StruCode],
	[ColumnCode],
	[NoteCode],
	[FormCode],
	[FSCode],
	[Formula]
) VALUES (
	@ProjectID,
	@StruCode,
	@ColumnCode,
	@NoteCode,
	@FormCode,
	@FSCode,
	@Formula
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertNoteConnectRule')
   BEGIN
       DROP  Procedure  usp_InsertNoteConnectRule
	END
GO

--region [dbo].[usp_InsertNoteConnectRule]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertNoteConnectRule]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertNoteConnectRule]
	@ID varchar(50),
	@ProjectID varchar(50),
	@FSCode varchar(100),
	@FormCode varchar(50),
	@ColumnCodeOne varchar(50),
	@ColumnCodeTwo varchar(50),
	@IsUse int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[NoteConnectRule] (
	[ID],
	[ProjectID],
	[FSCode],
	[FormCode],
	[ColumnCodeOne],
	[ColumnCodeTwo],
	[IsUse]
) VALUES (
	@ID,
	@ProjectID,
	@FSCode,
	@FormCode,
	@ColumnCodeOne,
	@ColumnCodeTwo,
	@IsUse
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertNoteData')
   BEGIN
       DROP  Procedure  usp_InsertNoteData
	END
GO

--region [dbo].[usp_InsertNoteData]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertNoteData]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertNoteData]
	@ProjectID varchar(50),
	@NoteCode varchar(100),
	@FormCode varchar(50),
	@Bth nvarchar(255),
	@CheckData decimal(20, 2)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[NoteData] (
	[ProjectID],
	[NoteCode],
	[FormCode],
	[Bth],
	[CheckData]
) VALUES (
	@ProjectID,
	@NoteCode,
	@FormCode,
	@Bth,
	@CheckData
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertNoteDataDetail')
   BEGIN
       DROP  Procedure  usp_InsertNoteDataDetail
	END
GO

--region [dbo].[usp_InsertNoteDataDetail]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertNoteDataDetail]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertNoteDataDetail]
	@ProjectID varchar(50),
	@FormCode varchar(50),
	@NoteCode varchar(100),
	@ColumnCode varchar(50),
	@NumberField decimal(20, 2),
	@TextField nvarchar(255),
	@DateField datetime
AS

SET NOCOUNT ON

INSERT INTO [dbo].[NoteDataDetail] (
	[ProjectID],
	[FormCode],
	[NoteCode],
	[ColumnCode],
	[NumberField],
	[TextField],
	[DateField]
) VALUES (
	@ProjectID,
	@FormCode,
	@NoteCode,
	@ColumnCode,
	@NumberField,
	@TextField,
	@DateField
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertNoteForm')
   BEGIN
       DROP  Procedure  usp_InsertNoteForm
	END
GO

--region [dbo].[usp_InsertNoteForm]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertNoteForm]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertNoteForm]
	@ProjectID varchar(50),
	@FormCode varchar(50),
	@FormName nvarchar(255),
	@SortID int,
	@IsUse int,
	@FSCode varchar(100),
	@FormType int,
	@Remark nvarchar(2000),
	@StructHash varchar(100),
	@DataHash varchar(100),
	@IsChangeRow int,
	@IsCombination int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[NoteForm] (
	[ProjectID],
	[FormCode],
	[FormName],
	[SortID],
	[IsUse],
	[FSCode],
	[FormType],
	[Remark],
	[StructHash],
	[DataHash],
	[IsChangeRow],
	[IsCombination]
) VALUES (
	@ProjectID,
	@FormCode,
	@FormName,
	@SortID,
	@IsUse,
	@FSCode,
	@FormType,
	@Remark,
	@StructHash,
	@DataHash,
	@IsChangeRow,
	@IsCombination
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertNoteFormula')
   BEGIN
       DROP  Procedure  usp_InsertNoteFormula
	END
GO

--region [dbo].[usp_InsertNoteFormula]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertNoteFormula]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertNoteFormula]
	@ProjectID varchar(50),
	@ColumnCode varchar(50),
	@NoteCode varchar(100),
	@FormCode varchar(50),
	@FSCode varchar(100),
	@Formula varchar(500)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[NoteFormula] (
	[ProjectID],
	[ColumnCode],
	[NoteCode],
	[FormCode],
	[FSCode],
	[Formula]
) VALUES (
	@ProjectID,
	@ColumnCode,
	@NoteCode,
	@FormCode,
	@FSCode,
	@Formula
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertNoteMemo')
   BEGIN
       DROP  Procedure  usp_InsertNoteMemo
	END
GO

--region [dbo].[usp_InsertNoteMemo]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertNoteMemo]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertNoteMemo]
	@ProjectID varchar(50),
	@FSCode varchar(100),
	@FormCode varchar(50),
	@Memo nvarchar(4000),
	@memohelp varchar(max)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[NoteMemo] (
	[ProjectID],
	[FSCode],
	[FormCode],
	[Memo],
	[memohelp]
) VALUES (
	@ProjectID,
	@FSCode,
	@FormCode,
	@Memo,
	@memohelp
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertNoteRowAttribute')
   BEGIN
       DROP  Procedure  usp_InsertNoteRowAttribute
	END
GO

--region [dbo].[usp_InsertNoteRowAttribute]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertNoteRowAttribute]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertNoteRowAttribute]
	@ProjectID varchar(50),
	@NoteCode varchar(100),
	@FormCode varchar(50),
	@FSCode varchar(100),
	@UpperNoteCode varchar(100),
	@SortID int,
	@Bth nvarchar(255),
	@IsQzh int,
	@IsGdh int,
	@IsCheckRow int,
	@IsConnect int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[NoteRowAttribute] (
	[ProjectID],
	[NoteCode],
	[FormCode],
	[FSCode],
	[UpperNoteCode],
	[SortID],
	[Bth],
	[IsQzh],
	[IsGdh],
	[IsCheckRow],
	[IsConnect]
) VALUES (
	@ProjectID,
	@NoteCode,
	@FormCode,
	@FSCode,
	@UpperNoteCode,
	@SortID,
	@Bth,
	@IsQzh,
	@IsGdh,
	@IsCheckRow,
	@IsConnect
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertPIDInformation')
   BEGIN
       DROP  Procedure  usp_InsertPIDInformation
	END
GO

--region [dbo].[usp_InsertPIDInformation]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertPIDInformation]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertPIDInformation]
	@ProjectID varchar(100),
	@ClientRiskType int,
	@currentyearPID varchar(50),
	@lastperiodPID varchar(50),
	@IPOPrioryear1PID varchar(50),
	@IPOPrioryear2PID varchar(50),
	@IPOPrioryear3PID varchar(50),
	@Carryforward int,
	@FinDefine int,
	@InvDefine int,
	@WagDefine int,
	@FADefine int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[PIDInformation] (
	[ProjectID],
	[ClientRiskType],
	[currentyearPID],
	[lastperiodPID],
	[IPOPrioryear1PID],
	[IPOPrioryear2PID],
	[IPOPrioryear3PID],
	[Carryforward],
	[FinDefine],
	[InvDefine],
	[WagDefine],
	[FADefine]
) VALUES (
	@ProjectID,
	@ClientRiskType,
	@currentyearPID,
	@lastperiodPID,
	@IPOPrioryear1PID,
	@IPOPrioryear2PID,
	@IPOPrioryear3PID,
	@Carryforward,
	@FinDefine,
	@InvDefine,
	@WagDefine,
	@FADefine
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertPlanningProcedures')
   BEGIN
       DROP  Procedure  usp_InsertPlanningProcedures
	END
GO

--region [dbo].[usp_InsertPlanningProcedures]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertPlanningProcedures]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertPlanningProcedures]
	@ProjectID varchar(100),
	@SortID int,
	@StruCode nvarchar(50),
	@BusinessCycleID nvarchar(50),
	@ProgramName text,
	@ReferenceList nvarchar(50)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[PlanningProcedures] (
	[ProjectID],
	[SortID],
	[StruCode],
	[BusinessCycleID],
	[ProgramName],
	[ReferenceList]
) VALUES (
	@ProjectID,
	@SortID,
	@StruCode,
	@BusinessCycleID,
	@ProgramName,
	@ReferenceList
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertPMofFsCode')
   BEGIN
       DROP  Procedure  usp_InsertPMofFsCode
	END
GO

--region [dbo].[usp_InsertPMofFsCode]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertPMofFsCode]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertPMofFsCode]
	@ProjectID varchar(100),
	@ID varchar(50),
	@Fscode varchar(50),
	@ValueofPM decimal(20, 2),
	@ValueofMP decimal(20, 2)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[PMofFsCode] (
	[ProjectID],
	[ID],
	[Fscode],
	[ValueofPM],
	[ValueofMP]
) VALUES (
	@ProjectID,
	@ID,
	@Fscode,
	@ValueofPM,
	@ValueofMP
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertPmPlanningMateriality')
   BEGIN
       DROP  Procedure  usp_InsertPmPlanningMateriality
	END
GO

--region [dbo].[usp_InsertPmPlanningMateriality]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertPmPlanningMateriality]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertPmPlanningMateriality]
	@ProjectID varchar(100),
	@ID varchar(50),
	@CurrentMateriality decimal(20, 2),
	@PriorMateriality decimal(20, 2),
	@CurrentNotAdjustedTax decimal(20, 2),
	@PriorNotAdjustedTax decimal(20, 2),
	@CurrentAdjustedTax decimal(20, 2),
	@PriorAdjustedTax decimal(20, 2),
	@QuantityFactors int,
	@Misstatementratio decimal(20, 4),
	@MinorMisstatements decimal(20, 2),
	@Taxeffect int,
	@AnticipatedErrorRate decimal(20, 4),
	@AnticipatedTaxRate decimal(20, 4),
	@StatutoryTaxRate decimal(20, 4),
	@CriticalElement int,
	@OtherCriticalElement varchar(50),
	@CriticalElementCount decimal(22, 2),
	@SelectedIndex decimal(22, 4),
	@SelectedIndexDescription varchar(max),
	@PMAfterTax decimal(22, 2)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[PmPlanningMateriality] (
	[ProjectID],
	[ID],
	[CurrentMateriality],
	[PriorMateriality],
	[CurrentNotAdjustedTax],
	[PriorNotAdjustedTax],
	[CurrentAdjustedTax],
	[PriorAdjustedTax],
	[QuantityFactors],
	[Misstatementratio],
	[MinorMisstatements],
	[Taxeffect],
	[AnticipatedErrorRate],
	[AnticipatedTaxRate],
	[StatutoryTaxRate],
	[CriticalElement],
	[OtherCriticalElement],
	[CriticalElementCount],
	[SelectedIndex],
	[SelectedIndexDescription],
	[PMAfterTax]
) VALUES (
	@ProjectID,
	@ID,
	@CurrentMateriality,
	@PriorMateriality,
	@CurrentNotAdjustedTax,
	@PriorNotAdjustedTax,
	@CurrentAdjustedTax,
	@PriorAdjustedTax,
	@QuantityFactors,
	@Misstatementratio,
	@MinorMisstatements,
	@Taxeffect,
	@AnticipatedErrorRate,
	@AnticipatedTaxRate,
	@StatutoryTaxRate,
	@CriticalElement,
	@OtherCriticalElement,
	@CriticalElementCount,
	@SelectedIndex,
	@SelectedIndexDescription,
	@PMAfterTax
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertPMvalueofJ')
   BEGIN
       DROP  Procedure  usp_InsertPMvalueofJ
	END
GO

--region [dbo].[usp_InsertPMvalueofJ]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertPMvalueofJ]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertPMvalueofJ]
	@ProjectID varchar(100),
	@Fscode varchar(50),
	@Testobject int,
	@Step int,
	@ID varchar(50),
	@Overallsample decimal(20, 2),
	@ValueofJ decimal(20, 2),
	@Samplesize int,
	@SampleTotal int,
	@Memo varchar(500)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[PMvalueofJ] (
	[ProjectID],
	[Fscode],
	[Testobject],
	[Step],
	[ID],
	[Overallsample],
	[ValueofJ],
	[Samplesize],
	[SampleTotal],
	[Memo]
) VALUES (
	@ProjectID,
	@Fscode,
	@Testobject,
	@Step,
	@ID,
	@Overallsample,
	@ValueofJ,
	@Samplesize,
	@SampleTotal,
	@Memo
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertProJect')
   BEGIN
       DROP  Procedure  usp_InsertProJect
	END
GO

--region [dbo].[usp_InsertProJect]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertProJect]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertProJect]
	@ProjectID varchar(100),
	@TYPECODE varchar(255),
	@PROJECTCODE varchar(255),
	@PROJECTNAME varchar(1000),
	@UPPERCODE varchar(255),
	@JB int,
	@ISMX int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[ProJect] (
	[ProjectID],
	[TYPECODE],
	[PROJECTCODE],
	[PROJECTNAME],
	[UPPERCODE],
	[JB],
	[ISMX]
) VALUES (
	@ProjectID,
	@TYPECODE,
	@PROJECTCODE,
	@PROJECTNAME,
	@UPPERCODE,
	@JB,
	@ISMX
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertProjectConfig')
   BEGIN
       DROP  Procedure  usp_InsertProjectConfig
	END
GO

--region [dbo].[usp_InsertProjectConfig]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertProjectConfig]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertProjectConfig]
	@ProjectID varchar(100),
	@Key varchar(100),
	@Value varchar(100),
	@Remark nvarchar(1000)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[ProjectConfig] (
	[ProjectID],
	[Key],
	[Value],
	[Remark]
) VALUES (
	@ProjectID,
	@Key,
	@Value,
	@Remark
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertProjectError')
   BEGIN
       DROP  Procedure  usp_InsertProjectError
	END
GO

--region [dbo].[usp_InsertProjectError]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertProjectError]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertProjectError]
	@ID varchar(50),
	@ProjectID varchar(100),
	@FsCode varchar(50),
	@AccountCode varchar(100),
	@AuxiliaryCode varchar(100),
	@VoucherID varchar(50),
	@Type int,
	@ReferCode varchar(50),
	@SampleData decimal(20, 2),
	@CheckedData decimal(20, 2),
	@ProjectError decimal(20, 2),
	@AffectKm varchar(500),
	@ErrorData decimal(20, 2),
	@ErrorReason varchar(100),
	@ErrorType int,
	@Memo varchar(100),
	@IsUse int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[ProjectError] (
	[ID],
	[ProjectID],
	[FsCode],
	[AccountCode],
	[AuxiliaryCode],
	[VoucherID],
	[Type],
	[ReferCode],
	[SampleData],
	[CheckedData],
	[ProjectError],
	[AffectKm],
	[ErrorData],
	[ErrorReason],
	[ErrorType],
	[Memo],
	[IsUse]
) VALUES (
	@ID,
	@ProjectID,
	@FsCode,
	@AccountCode,
	@AuxiliaryCode,
	@VoucherID,
	@Type,
	@ReferCode,
	@SampleData,
	@CheckedData,
	@ProjectError,
	@AffectKm,
	@ErrorData,
	@ErrorReason,
	@ErrorType,
	@Memo,
	@IsUse
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertProjectType')
   BEGIN
       DROP  Procedure  usp_InsertProjectType
	END
GO

--region [dbo].[usp_InsertProjectType]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertProjectType]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertProjectType]
	@ProjectID varchar(100),
	@TYPECODE varchar(255),
	@TYPENAME varchar(1000)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[ProjectType] (
	[ProjectID],
	[TYPECODE],
	[TYPENAME]
) VALUES (
	@ProjectID,
	@TYPECODE,
	@TYPENAME
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertQcwljzpz')
   BEGIN
       DROP  Procedure  usp_InsertQcwljzpz
	END
GO

--region [dbo].[usp_InsertQcwljzpz]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertQcwljzpz]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertQcwljzpz]
	@VoucherID varchar(50),
	@Clientid varchar(100),
	@ProjectID varchar(100),
	@IncNo varchar(50),
	@Date datetime,
	@Period int,
	@Pzlx varchar(255),
	@Pzh varchar(255),
	@Djh int,
	@AccountCode varchar(100),
	@ProjectCode varchar(100),
	@Zy varchar(max),
	@Jfje decimal(20, 2),
	@Dfje decimal(20, 2),
	@Jfsl decimal(20, 4),
	@Dfsl decimal(20, 4),
	@ZDR varchar(255),
	@dfkm varchar(200),
	@AccountingAge int,
	@qmyegc int,
	@Fsje decimal(20, 2),
	@Jd int,
	@FDetailID int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[Qcwljzpz] (
	[VoucherID],
	[Clientid],
	[ProjectID],
	[IncNo],
	[Date],
	[Period],
	[Pzlx],
	[Pzh],
	[Djh],
	[AccountCode],
	[ProjectCode],
	[Zy],
	[Jfje],
	[Dfje],
	[Jfsl],
	[Dfsl],
	[ZDR],
	[dfkm],
	[AccountingAge],
	[qmyegc],
	[Fsje],
	[Jd],
	[FDetailID]
) VALUES (
	@VoucherID,
	@Clientid,
	@ProjectID,
	@IncNo,
	@Date,
	@Period,
	@Pzlx,
	@Pzh,
	@Djh,
	@AccountCode,
	@ProjectCode,
	@Zy,
	@Jfje,
	@Dfje,
	@Jfsl,
	@Dfsl,
	@ZDR,
	@dfkm,
	@AccountingAge,
	@qmyegc,
	@Fsje,
	@Jd,
	@FDetailID
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertQhJzpz')
   BEGIN
       DROP  Procedure  usp_InsertQhJzpz
	END
GO

--region [dbo].[usp_InsertQhJzpz]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertQhJzpz]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertQhJzpz]
	@VoucherID varchar(50),
	@Clientid varchar(100),
	@ProjectID varchar(100),
	@IncNo varchar(50),
	@Date datetime,
	@Period int,
	@Pzlx varchar(255),
	@Pzh varchar(255),
	@Djh int,
	@AccountCode varchar(255),
	@ProjectCode varchar(255),
	@Zy varchar(255),
	@Jfje decimal(20, 2),
	@Dfje decimal(20, 2),
	@Jfsl decimal(20, 4),
	@Dfsl decimal(20, 4),
	@ZDR varchar(255),
	@dfkm varchar(200),
	@Fsje decimal(20, 2),
	@Jd int,
	@fllx int,
	@FDetailID int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[QhJzpz] (
	[VoucherID],
	[Clientid],
	[ProjectID],
	[IncNo],
	[Date],
	[Period],
	[Pzlx],
	[Pzh],
	[Djh],
	[AccountCode],
	[ProjectCode],
	[Zy],
	[Jfje],
	[Dfje],
	[Jfsl],
	[Dfsl],
	[ZDR],
	[dfkm],
	[Fsje],
	[Jd],
	[fllx],
	[FDetailID]
) VALUES (
	@VoucherID,
	@Clientid,
	@ProjectID,
	@IncNo,
	@Date,
	@Period,
	@Pzlx,
	@Pzh,
	@Djh,
	@AccountCode,
	@ProjectCode,
	@Zy,
	@Jfje,
	@Dfje,
	@Jfsl,
	@Dfsl,
	@ZDR,
	@dfkm,
	@Fsje,
	@Jd,
	@fllx,
	@FDetailID
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertQmyegc')
   BEGIN
       DROP  Procedure  usp_InsertQmyegc
	END
GO

--region [dbo].[usp_InsertQmyegc]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertQmyegc]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertQmyegc]
	@ProjectID varchar(100),
	@VProjectID varchar(100),
	@AccountCode varchar(255),
	@ProjectCode varchar(255),
	@AccountingAge int,
	@TableID int,
	@VoucherID varchar(50),
	@Date datetime,
	@Jfje decimal(20, 2),
	@Dfje decimal(20, 2),
	@Fsje decimal(20, 2)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[Qmyegc] (
	[ProjectID],
	[VProjectID],
	[AccountCode],
	[ProjectCode],
	[AccountingAge],
	[TableID],
	[VoucherID],
	[Date],
	[Jfje],
	[Dfje],
	[Fsje]
) VALUES (
	@ProjectID,
	@VProjectID,
	@AccountCode,
	@ProjectCode,
	@AccountingAge,
	@TableID,
	@VoucherID,
	@Date,
	@Jfje,
	@Dfje,
	@Fsje
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertRecordOfSampleTest')
   BEGIN
       DROP  Procedure  usp_InsertRecordOfSampleTest
	END
GO

--region [dbo].[usp_InsertRecordOfSampleTest]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertRecordOfSampleTest]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertRecordOfSampleTest]
	@ProjectID varchar(100),
	@VoucherID varchar(50),
	@ContentID int,
	@RecordID varchar(100),
	@IncNo varchar(50),
	@NumberofAE varchar(50),
	@DateofAE datetime,
	@AmountofAE decimal(20, 2),
	@QuantityofAE decimal(20, 2),
	@AuditEvidence varchar(500),
	@RecordType int,
	@copyofEvidence varchar(100)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[RecordOfSampleTest] (
	[ProjectID],
	[VoucherID],
	[ContentID],
	[RecordID],
	[IncNo],
	[NumberofAE],
	[DateofAE],
	[AmountofAE],
	[QuantityofAE],
	[AuditEvidence],
	[RecordType],
	[copyofEvidence]
) VALUES (
	@ProjectID,
	@VoucherID,
	@ContentID,
	@RecordID,
	@IncNo,
	@NumberofAE,
	@DateofAE,
	@AmountofAE,
	@QuantityofAE,
	@AuditEvidence,
	@RecordType,
	@copyofEvidence
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertReplaceTestVoucher')
   BEGIN
       DROP  Procedure  usp_InsertReplaceTestVoucher
	END
GO
--region [dbo].[usp_InsertReplaceTestVoucher]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   HUASHENG using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertReplaceTestVoucher]
-- Date Generated: 2018年11月22日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertReplaceTestVoucher]
	@VoucherID varchar(50),
	@ProjectID varchar(100),
	@FSCode varchar(50),
	@AccountCode varchar(100),
	@AccountName varchar(100),
	@ProjectCode varchar(100),
	@OsDate datetime,
	@PZH varchar(100),
	@dfkm varchar(100),
	@JD int,
	@JE decimal(20, 2),
	@ZY varchar(255)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[ReplaceTestVoucher] (
	[VoucherID],
	[ProjectID],
	[FSCode],
	[AccountCode],
	[AccountName],
	[ProjectCode],
	[OsDate],
	[PZH],
	[dfkm],
	[JD],
	[JE],
	[ZY]
) VALUES (
	@VoucherID,
	@ProjectID,
	@FSCode,
	@AccountCode,
	@AccountName,
	@ProjectCode,
	@OsDate,
	@PZH,
	@dfkm,
	@JD,
	@JE,
	@ZY
)

--endregion
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertRiskfactor')
   BEGIN
       DROP  Procedure  usp_InsertRiskfactor
	END
GO

--region [dbo].[usp_InsertRiskfactor]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertRiskfactor]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertRiskfactor]
	@ProjectID varchar(100),
	@FSCode varchar(50),
	@CognizanceCode varchar(50),
	@RiskType int,
	@RiskValue int,
	@LastRiskValue int,
	@BCycleCode varchar(50),
	@ID int OUTPUT
AS

SET NOCOUNT ON

INSERT INTO [dbo].[Riskfactor] (
	[ProjectID],
	[FSCode],
	[CognizanceCode],
	[RiskType],
	[RiskValue],
	[LastRiskValue],
	[BCycleCode]
) VALUES (
	@ProjectID,
	@FSCode,
	@CognizanceCode,
	@RiskType,
	@RiskValue,
	@LastRiskValue,
	@BCycleCode
)

SET @ID = SCOPE_IDENTITY()

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertRiskModel')
   BEGIN
       DROP  Procedure  usp_InsertRiskModel
	END
GO

--region [dbo].[usp_InsertRiskModel]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertRiskModel]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertRiskModel]
	@ProjectID varchar(100),
	@RiskType int,
	@RiskText varchar(100),
	@RiskValue int,
	@Riskfactor float,
	@ID int OUTPUT
AS

SET NOCOUNT ON

INSERT INTO [dbo].[RiskModel] (
	[ProjectID],
	[RiskType],
	[RiskText],
	[RiskValue],
	[Riskfactor]
) VALUES (
	@ProjectID,
	@RiskType,
	@RiskText,
	@RiskValue,
	@Riskfactor
)

SET @ID = SCOPE_IDENTITY()

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertRiskResponse')
   BEGIN
       DROP  Procedure  usp_InsertRiskResponse
	END
GO

--region [dbo].[usp_InsertRiskResponse]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertRiskResponse]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertRiskResponse]
	@ProjectID varchar(100),
	@ID int,
	@UpperID int,
	@DetailResponse varchar(1000)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[RiskResponse] (
	[ProjectID],
	[ID],
	[UpperID],
	[DetailResponse]
) VALUES (
	@ProjectID,
	@ID,
	@UpperID,
	@DetailResponse
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertRoleInfo')
   BEGIN
       DROP  Procedure  usp_InsertRoleInfo
	END
GO

--region [dbo].[usp_InsertRoleInfo]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertRoleInfo]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertRoleInfo]
	@ProjectID varchar(100),
	@RoleID int,
	@RoleName varchar(50),
	@AliasName varchar(1000),
	@RolesDescription varchar(max),
	@SortID int,
	@ISReview int,
	@ReviewType nvarchar(50),
	@ReviewObjecttive text,
	@IsReadOnly int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[RoleInfo] (
	[ProjectID],
	[RoleID],
	[RoleName],
	[AliasName],
	[RolesDescription],
	[SortID],
	[ISReview],
	[ReviewType],
	[ReviewObjecttive],
	[IsReadOnly]
) VALUES (
	@ProjectID,
	@RoleID,
	@RoleName,
	@AliasName,
	@RolesDescription,
	@SortID,
	@ISReview,
	@ReviewType,
	@ReviewObjecttive,
	@IsReadOnly
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertStrategicPlanning')
   BEGIN
       DROP  Procedure  usp_InsertStrategicPlanning
	END
GO

--region [dbo].[usp_InsertStrategicPlanning]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertStrategicPlanning]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertStrategicPlanning]
	@ProjectID varchar(100),
	@ID int,
	@AuditPurposes nvarchar(200),
	@AccountingStandard nvarchar(200),
	@AuditingStandard nvarchar(200),
	@ParticularSpecific nvarchar(4000),
	@OtherInfo nvarchar(4000),
	@OtherMatters nvarchar(4000),
	@ControlStrategyRely bit,
	@RotationTestApply bit
AS

SET NOCOUNT ON

INSERT INTO [dbo].[StrategicPlanning] (
	[ProjectID],
	[ID],
	[AuditPurposes],
	[AccountingStandard],
	[AuditingStandard],
	[ParticularSpecific],
	[OtherInfo],
	[OtherMatters],
	[ControlStrategyRely],
	[RotationTestApply]
) VALUES (
	@ProjectID,
	@ID,
	@AuditPurposes,
	@AccountingStandard,
	@AuditingStandard,
	@ParticularSpecific,
	@OtherInfo,
	@OtherMatters,
	@ControlStrategyRely,
	@RotationTestApply
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertSubComNoteData')
   BEGIN
       DROP  Procedure  usp_InsertSubComNoteData
	END
GO

--region [dbo].[usp_InsertSubComNoteData]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertSubComNoteData]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertSubComNoteData]
	@GUID varchar(50),
	@ProjectID varchar(50),
	@StruCode varchar(255),
	@EliminationNO varchar(255),
	@ComProjectID varchar(255),
	@FormCode varchar(50),
	@NoteCode varchar(100),
	@IsGdh int,
	@Bth nvarchar(255),
	@CheckData decimal(20, 2)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[SubComNoteData] (
	[GUID],
	[ProjectID],
	[StruCode],
	[EliminationNO],
	[ComProjectID],
	[FormCode],
	[NoteCode],
	[IsGdh],
	[Bth],
	[CheckData]
) VALUES (
	@GUID,
	@ProjectID,
	@StruCode,
	@EliminationNO,
	@ComProjectID,
	@FormCode,
	@NoteCode,
	@IsGdh,
	@Bth,
	@CheckData
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertSubComNoteDataDetail')
   BEGIN
       DROP  Procedure  usp_InsertSubComNoteDataDetail
	END
GO

--region [dbo].[usp_InsertSubComNoteDataDetail]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertSubComNoteDataDetail]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertSubComNoteDataDetail]
	@GUID varchar(50),
	@UpperGUID varchar(50),
	@ProjectID varchar(50),
	@StruCode varchar(255),
	@ComProjectID varchar(255),
	@FormCode varchar(50),
	@NoteCode varchar(100),
	@ColumnCode varchar(50),
	@NumberField decimal(20, 2),
	@TextField nvarchar(255),
	@DateField datetime
AS

SET NOCOUNT ON

INSERT INTO [dbo].[SubComNoteDataDetail] (
	[GUID],
	[UpperGUID],
	[ProjectID],
	[StruCode],
	[ComProjectID],
	[FormCode],
	[NoteCode],
	[ColumnCode],
	[NumberField],
	[TextField],
	[DateField]
) VALUES (
	@GUID,
	@UpperGUID,
	@ProjectID,
	@StruCode,
	@ComProjectID,
	@FormCode,
	@NoteCode,
	@ColumnCode,
	@NumberField,
	@TextField,
	@DateField
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertSubTBCombination')
   BEGIN
       DROP  Procedure  usp_InsertSubTBCombination
	END
GO

--region [dbo].[usp_InsertSubTBCombination]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertSubTBCombination]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertSubTBCombination]
	@GUID varchar(50),
	@ProjectID varchar(50),
	@StruCode varchar(50),
	@ComProjectID varchar(255),
	@FsCode varchar(50),
	@Yefx int,
	@FsName nvarchar(50),
	@Unchecked decimal(20, 2),
	@UncheckedCeeJF decimal(20, 2),
	@UncheckedCeeDF decimal(20, 2),
	@UncheckedCFSData decimal(20, 2),
	@Checked decimal(20, 2),
	@CheckedCeeJF decimal(20, 2),
	@CheckedCeeDF decimal(20, 2),
	@CheckedCFSData decimal(20, 2)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[SubTBCombination] (
	[GUID],
	[ProjectID],
	[StruCode],
	[ComProjectID],
	[FsCode],
	[Yefx],
	[FsName],
	[Unchecked],
	[UncheckedCeeJF],
	[UncheckedCeeDF],
	[UncheckedCFSData],
	[Checked],
	[CheckedCeeJF],
	[CheckedCeeDF],
	[CheckedCFSData]
) VALUES (
	@GUID,
	@ProjectID,
	@StruCode,
	@ComProjectID,
	@FsCode,
	@Yefx,
	@FsName,
	@Unchecked,
	@UncheckedCeeJF,
	@UncheckedCeeDF,
	@UncheckedCFSData,
	@Checked,
	@CheckedCeeJF,
	@CheckedCeeDF,
	@CheckedCFSData
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertTBAdjustedItems')
   BEGIN
       DROP  Procedure  usp_InsertTBAdjustedItems
	END
GO

--region [dbo].[usp_InsertTBAdjustedItems]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertTBAdjustedItems]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertTBAdjustedItems]
	@ProjectID varchar(100),
	@AdjustedNO varchar(50),
	@AdjustedDetails varchar(1000),
	@AdjustedType varchar(5),
	@ReferenceList varchar(50),
	@AdjustedyesNo int,
	@TaxYesNo int,
	@PSYesNo int,
	@ResolveReference varchar(50),
	@FAP varchar(max),
	@IsAdjusted int,
	@CreatorLogin varchar(50),
	@CreatorName varchar(50),
	@Createdtime datetime
AS

SET NOCOUNT ON

INSERT INTO [dbo].[TBAdjustedItems] (
	[ProjectID],
	[AdjustedNO],
	[AdjustedDetails],
	[AdjustedType],
	[ReferenceList],
	[AdjustedyesNo],
	[TaxYesNo],
	[PSYesNo],
	[ResolveReference],
	[FAP],
	[IsAdjusted],
	[CreatorLogin],
	[CreatorName],
	[Createdtime]
) VALUES (
	@ProjectID,
	@AdjustedNO,
	@AdjustedDetails,
	@AdjustedType,
	@ReferenceList,
	@AdjustedyesNo,
	@TaxYesNo,
	@PSYesNo,
	@ResolveReference,
	@FAP,
	@IsAdjusted,
	@CreatorLogin,
	@CreatorName,
	@Createdtime
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertTBAdjustedSubItems')
   BEGIN
       DROP  Procedure  usp_InsertTBAdjustedSubItems
	END
GO

--region [dbo].[usp_InsertTBAdjustedSubItems]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertTBAdjustedSubItems]
-- Date Generated: 2018年8月18日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertTBAdjustedSubItems]
	@ProjectID varchar(100),
	@AdjustedNO varchar(50),
	@ID varchar(50),
	@SortID int,
	@FSCode varchar(50),
	@FSName varchar(500),
	@AccountCode varchar(100),
	@AuxiliaryCode varchar(100),
	@AccAuxName varchar(255),
	@Jd int,
	@Jfje decimal(20, 2),
	@Dfje decimal(20, 2),
	@Fsje decimal(20, 2),
	@VoucherID int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[TBAdjustedSubItems] (
	[ProjectID],
	[AdjustedNO],
	[ID],
	[SortID],
	[FSCode],
	[FSName],
	[AccountCode],
	[AuxiliaryCode],
	[AccAuxName],
	[Jd],
	[Jfje],
	[Dfje],
	[Fsje],
	[VoucherID]
) VALUES (
	@ProjectID,
	@AdjustedNO,
	@ID,
	@SortID,
	@FSCode,
	@FSName,
	@AccountCode,
	@AuxiliaryCode,
	@AccAuxName,
	@Jd,
	@Jfje,
	@Dfje,
	@Fsje,
	@VoucherID
)

--endregion



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertTbAppendTable')
   BEGIN
       DROP  Procedure  usp_InsertTbAppendTable
	END
GO

--region [dbo].[usp_InsertTbAppendTable]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertTbAppendTable]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertTbAppendTable]
	@ID varchar(50),
	@ProjectID varchar(100),
	@FSName nvarchar(100),
	@FSType int,
	@AssociatedCode varchar(max),
	@CombinationCode varchar(max),
	@SortID int,
	@Orderid int,
	@NoteSort varchar(50),
	@YSbbQmye decimal(20, 2),
	@QmyeFormula varchar(1000),
	@YSbbQcye decimal(20, 2),
	@UncheckedVariationAnalysis varchar(1000),
	@UncheckedProportionsAnalysis varchar(1000),
	@CheckedVariationAnalysis varchar(1000),
	@CheckedProportionsAnalysis varchar(1000),
	@QcyeFormulaAccount varchar(1000),
	@QcyeFormulaStructure varchar(1000),
	@CheckedFormulaAccount varchar(1000),
	@CheckedFormulaStructure varchar(1000)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[TbAppendTable] (
	[ID],
	[ProjectID],
	[FSName],
	[FSType],
	[AssociatedCode],
	[CombinationCode],
	[SortID],
	[Orderid],
	[NoteSort],
	[YSbbQmye],
	[QmyeFormula],
	[YSbbQcye],
	[UncheckedVariationAnalysis],
	[UncheckedProportionsAnalysis],
	[CheckedVariationAnalysis],
	[CheckedProportionsAnalysis],
	[QcyeFormulaAccount],
	[QcyeFormulaStructure],
	[CheckedFormulaAccount],
	[CheckedFormulaStructure]
) VALUES (
	@ID,
	@ProjectID,
	@FSName,
	@FSType,
	@AssociatedCode,
	@CombinationCode,
	@SortID,
	@Orderid,
	@NoteSort,
	@YSbbQmye,
	@QmyeFormula,
	@YSbbQcye,
	@UncheckedVariationAnalysis,
	@UncheckedProportionsAnalysis,
	@CheckedVariationAnalysis,
	@CheckedProportionsAnalysis,
	@QcyeFormulaAccount,
	@QcyeFormulaStructure,
	@CheckedFormulaAccount,
	@CheckedFormulaStructure
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertTBAux')
   BEGIN
       DROP  Procedure  usp_InsertTBAux
	END
GO

--region [dbo].[usp_InsertTBAux]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertTBAux]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertTBAux]
	@ProjectID varchar(100),
	@AccountCode varchar(100),
	@AuxiliaryCode varchar(100),
	@AuxiliaryName varchar(100),
	@FSCode varchar(50),
	@kmsx varchar(100),
	@YEFX int,
	@TBGrouping nvarchar(50),
	@Sqqmye decimal(20, 2),
	@Qqccgz decimal(20, 2),
	@jfje decimal(20, 2),
	@dfje decimal(20, 2),
	@qmye decimal(20, 2)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[TBAux] (
	[ProjectID],
	[AccountCode],
	[AuxiliaryCode],
	[AuxiliaryName],
	[FSCode],
	[kmsx],
	[YEFX],
	[TBGrouping],
	[Sqqmye],
	[Qqccgz],
	[jfje],
	[dfje],
	[qmye]
) VALUES (
	@ProjectID,
	@AccountCode,
	@AuxiliaryCode,
	@AuxiliaryName,
	@FSCode,
	@kmsx,
	@YEFX,
	@TBGrouping,
	@Sqqmye,
	@Qqccgz,
	@jfje,
	@dfje,
	@qmye
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertTBCombination')
   BEGIN
       DROP  Procedure  usp_InsertTBCombination
	END
GO

--region [dbo].[usp_InsertTBCombination]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertTBCombination]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertTBCombination]
	@ProjectID varchar(50),
	@StruCode varchar(50),
	@FsCode varchar(50),
	@Yefx int,
	@FsName nvarchar(50),
	@FSType int,
	@TBType int,
	@Unchecked decimal(20, 2),
	@UncheckedCeeJF decimal(20, 2),
	@UncheckedCeeDF decimal(20, 2),
	@UncheckedCFSData decimal(20, 2),
	@Checked decimal(20, 2),
	@CheckedCeeJF decimal(20, 2),
	@CheckedCeeDF decimal(20, 2),
	@CheckedCFSData decimal(20, 2),
	@PY1 decimal(20, 2),
	@PY2 decimal(20, 2),
	@PY3 decimal(20, 2),
	@PY4 decimal(20, 2),
	@PY5 decimal(20, 2),
	@TBGrouping nvarchar(50)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[TBCombination] (
	[ProjectID],
	[StruCode],
	[FsCode],
	[Yefx],
	[FsName],
	[FSType],
	[TBType],
	[Unchecked],
	[UncheckedCeeJF],
	[UncheckedCeeDF],
	[UncheckedCFSData],
	[Checked],
	[CheckedCeeJF],
	[CheckedCeeDF],
	[CheckedCFSData],
	[PY1],
	[PY2],
	[PY3],
	[PY4],
	[PY5],
	[TBGrouping]
) VALUES (
	@ProjectID,
	@StruCode,
	@FsCode,
	@Yefx,
	@FsName,
	@FSType,
	@TBType,
	@Unchecked,
	@UncheckedCeeJF,
	@UncheckedCeeDF,
	@UncheckedCFSData,
	@Checked,
	@CheckedCeeJF,
	@CheckedCeeDF,
	@CheckedCFSData,
	@PY1,
	@PY2,
	@PY3,
	@PY4,
	@PY5,
	@TBGrouping
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertTBDetail')
   BEGIN
       DROP  Procedure  usp_InsertTBDetail
	END
GO
--region [dbo].[usp_InsertTBDetail]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertTBDetail]
-- Date Generated: 2018年10月12日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertTBDetail]
	@ID varchar(50),
	@ProjectID varchar(100),
	@FSCode varchar(50),
	@AccountCode varchar(100),
	@AuxiliaryCode varchar(100),
	@AccAuxName varchar(100),
	@DataType int,
	@TBGrouping varchar(100),
	@TBType int,
	@IsAccMx int,
	@IsMx int,
	@IsAux int,
	@kmsx varchar(100),
	@Yefx int,
	@SourceFSCode varchar(50),
	@Sqqmye decimal(20, 2),
	@Qqccgz decimal(20, 2),
	@jfje decimal(20, 2),
	@dfje decimal(20, 2),
	@CrjeJF decimal(20, 2),
	@CrjeDF decimal(20, 2),
	@AjeJF decimal(20, 2),
	@AjeDF decimal(20, 2),
	@RjeJF decimal(20, 2),
	@RjeDF decimal(20, 2),
	@TaxBase decimal(20, 2),
	@PY1 decimal(20, 2),
	@jfje1 decimal(20, 2),
	@dfje1 decimal(20, 2),
	@jfje2 decimal(20, 2),
	@dfje2 decimal(20, 2)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[TBDetail] (
	[ID],
	[ProjectID],
	[FSCode],
	[AccountCode],
	[AuxiliaryCode],
	[AccAuxName],
	[DataType],
	[TBGrouping],
	[TBType],
	[IsAccMx],
	[IsMx],
	[IsAux],
	[kmsx],
	[Yefx],
	[SourceFSCode],
	[Sqqmye],
	[Qqccgz],
	[jfje],
	[dfje],
	[CrjeJF],
	[CrjeDF],
	[AjeJF],
	[AjeDF],
	[RjeJF],
	[RjeDF],
	[TaxBase],
	[PY1],
	[jfje1],
	[dfje1],
	[jfje2],
	[dfje2]
) VALUES (
	@ID,
	@ProjectID,
	@FSCode,
	@AccountCode,
	@AuxiliaryCode,
	@AccAuxName,
	@DataType,
	@TBGrouping,
	@TBType,
	@IsAccMx,
	@IsMx,
	@IsAux,
	@kmsx,
	@Yefx,
	@SourceFSCode,
	@Sqqmye,
	@Qqccgz,
	@jfje,
	@dfje,
	@CrjeJF,
	@CrjeDF,
	@AjeJF,
	@AjeDF,
	@RjeJF,
	@RjeDF,
	@TaxBase,
	@PY1,
	@jfje1,
	@dfje1,
	@jfje2,
	@dfje2
)

--endregion

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertTBDetailExtra')
   BEGIN
       DROP  Procedure  usp_InsertTBDetailExtra
	END
GO

--region [dbo].[usp_InsertTBDetailExtra]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertTBDetailExtra]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertTBDetailExtra]
	@ID varchar(50),
	@ProjectID varchar(100),
	@ReferenceList varchar(50),
	@SelectedSampleLebelYesNo int,
	@MaterialityProgram int,
	@SelectSampleMethod int,
	@DrSelectedSampleLebelYesNo int,
	@DrMaterialityProgram int,
	@DrSelectSampleMethod int,
	@CrSelectedSampleLebelYesNo int,
	@CrMaterialityProgram int,
	@CrSelectSampleMethod int,
	@SampleSelectedYesNo int,
	@SampleSelectedType int,
	@ConsultBalance decimal(20, 2),
	@ConfirmBalance decimal(20, 2),
	@ConsultType varchar(100),
	@RelatedClientID nvarchar(50),
	@SampleSelecteStep int,
	@ErrorYesNO int,
	@StepofSample int,
	@AdjustedNo varchar(50),
	@AccountProperty varchar(500),
	@Memo varchar(1000)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[TBDetailExtra] (
	[ID],
	[ProjectID],
	[ReferenceList],
	[SelectedSampleLebelYesNo],
	[MaterialityProgram],
	[SelectSampleMethod],
	[DrSelectedSampleLebelYesNo],
	[DrMaterialityProgram],
	[DrSelectSampleMethod],
	[CrSelectedSampleLebelYesNo],
	[CrMaterialityProgram],
	[CrSelectSampleMethod],
	[SampleSelectedYesNo],
	[SampleSelectedType],
	[ConsultBalance],
	[ConfirmBalance],
	[ConsultType],
	[RelatedClientID],
	[SampleSelecteStep],
	[ErrorYesNO],
	[StepofSample],
	[AdjustedNo],
	[AccountProperty],
	[Memo]
) VALUES (
	@ID,
	@ProjectID,
	@ReferenceList,
	@SelectedSampleLebelYesNo,
	@MaterialityProgram,
	@SelectSampleMethod,
	@DrSelectedSampleLebelYesNo,
	@DrMaterialityProgram,
	@DrSelectSampleMethod,
	@CrSelectedSampleLebelYesNo,
	@CrMaterialityProgram,
	@CrSelectSampleMethod,
	@SampleSelectedYesNo,
	@SampleSelectedType,
	@ConsultBalance,
	@ConfirmBalance,
	@ConsultType,
	@RelatedClientID,
	@SampleSelecteStep,
	@ErrorYesNO,
	@StepofSample,
	@AdjustedNo,
	@AccountProperty,
	@Memo
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertTBEliminationItems')
   BEGIN
       DROP  Procedure  usp_InsertTBEliminationItems
	END
GO

--region [dbo].[usp_InsertTBEliminationItems]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertTBEliminationItems]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertTBEliminationItems]
	@ProjectID varchar(100),
	@EliminationNO varchar(50),
	@EliminationType int,
	@RelatedProject1 varchar(50),
	@RelatedProject2 varchar(50),
	@EliminationDetails varchar(1000),
	@InterTransaction int,
	@EliminationyesNo int,
	@CreatorLogin varchar(50),
	@CreatorName varchar(50),
	@Createdtime datetime
AS

SET NOCOUNT ON

INSERT INTO [dbo].[TBEliminationItems] (
	[ProjectID],
	[EliminationNO],
	[EliminationType],
	[RelatedProject1],
	[RelatedProject2],
	[EliminationDetails],
	[InterTransaction],
	[EliminationyesNo],
	[CreatorLogin],
	[CreatorName],
	[Createdtime]
) VALUES (
	@ProjectID,
	@EliminationNO,
	@EliminationType,
	@RelatedProject1,
	@RelatedProject2,
	@EliminationDetails,
	@InterTransaction,
	@EliminationyesNo,
	@CreatorLogin,
	@CreatorName,
	@Createdtime
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertTBEliminationSubItems')
   BEGIN
       DROP  Procedure  usp_InsertTBEliminationSubItems
	END
GO

--region [dbo].[usp_InsertTBEliminationSubItems]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertTBEliminationSubItems]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertTBEliminationSubItems]
	@ProjectID varchar(100),
	@EliminationNO varchar(50),
	@ID varchar(50),
	@SortID int,
	@EliminationPID varchar(50),
	@FSCode varchar(50),
	@FSName varchar(50),
	@AccountCode varchar(100),
	@AccountName varchar(100),
	@AuxiliaryCode varchar(100),
	@AuxiliaryName varchar(100),
	@JD int,
	@Unchecked decimal(20, 2),
	@Checked decimal(20, 2)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[TBEliminationSubItems] (
	[ProjectID],
	[EliminationNO],
	[ID],
	[SortID],
	[EliminationPID],
	[FSCode],
	[FSName],
	[AccountCode],
	[AccountName],
	[AuxiliaryCode],
	[AuxiliaryName],
	[JD],
	[Unchecked],
	[Checked]
) VALUES (
	@ProjectID,
	@EliminationNO,
	@ID,
	@SortID,
	@EliminationPID,
	@FSCode,
	@FSName,
	@AccountCode,
	@AccountName,
	@AuxiliaryCode,
	@AuxiliaryName,
	@JD,
	@Unchecked,
	@Checked
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertTBFS')
   BEGIN
       DROP  Procedure  usp_InsertTBFS
	END
GO

--region [dbo].[usp_InsertTBFS]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertTBFS]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertTBFS]
	@ProjectID varchar(100),
	@FSCode varchar(50),
	@FsName varchar(100),
	@FSType int,
	@TBType int,
	@IsMx int,
	@Kmsx varchar(100),
	@Yefx int,
	@TBGrouping varchar(50),
	@Sqqmye decimal(20, 2),
	@Qqccgz decimal(20, 2),
	@jfje decimal(20, 2),
	@dfje decimal(20, 2),
	@CrjeJF decimal(20, 2),
	@CrjeDF decimal(20, 2),
	@AjeJF decimal(20, 2),
	@AjeDF decimal(20, 2),
	@RjeJF decimal(20, 2),
	@RjeDF decimal(20, 2),
	@TaxBase decimal(20, 2),
	@YearEarlier decimal(20, 2),
	@PY1 decimal(20, 2),
	@PyTaxBase decimal(20, 2),
	@Random decimal(20, 2),
	@GrossPretax int,
	@jfje1 decimal(20, 2),
	@dfje1 decimal(20, 2),
	@jfje2 decimal(20, 2),
	@dfje2 decimal(20, 2),
	@Memo nvarchar(500)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[TBFS] (
	[ProjectID],
	[FSCode],
	[FsName],
	[FSType],
	[TBType],
	[IsMx],
	[Kmsx],
	[Yefx],
	[TBGrouping],
	[Sqqmye],
	[Qqccgz],
	[jfje],
	[dfje],
	[CrjeJF],
	[CrjeDF],
	[AjeJF],
	[AjeDF],
	[RjeJF],
	[RjeDF],
	[TaxBase],
	[YearEarlier],
	[PY1],
	[PyTaxBase],
	[Random],
	[GrossPretax],
	[jfje1],
	[dfje1],
	[jfje2],
	[dfje2],
	[Memo]
) VALUES (
	@ProjectID,
	@FSCode,
	@FsName,
	@FSType,
	@TBType,
	@IsMx,
	@Kmsx,
	@Yefx,
	@TBGrouping,
	@Sqqmye,
	@Qqccgz,
	@jfje,
	@dfje,
	@CrjeJF,
	@CrjeDF,
	@AjeJF,
	@AjeDF,
	@RjeJF,
	@RjeDF,
	@TaxBase,
	@YearEarlier,
	@PY1,
	@PyTaxBase,
	@Random,
	@GrossPretax,
	@jfje1,
	@dfje1,
	@jfje2,
	@dfje2,
	@Memo
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertTBVoucher')
   BEGIN
       DROP  Procedure  usp_InsertTBVoucher
	END
GO

--region [dbo].[usp_InsertTBVoucher]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertTBVoucher]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertTBVoucher]
	@VoucherID varchar(50),
	@Clientid varchar(100),
	@ProjectID varchar(100),
	@IncNo varchar(50),
	@Date datetime,
	@Period int,
	@Pzlx varchar(255),
	@Pzh varchar(255),
	@Djh int,
	@AccountCode varchar(100),
	@ProjectCode varchar(100),
	@Zy varchar(max),
	@Jfje decimal(20, 2),
	@Dfje decimal(20, 2),
	@Jfsl decimal(20, 4),
	@Dfsl decimal(20, 4),
	@ZDR varchar(255),
	@dfkm varchar(200),
	@Jd int,
	@Fsje decimal(20, 2),
	@Wbdm varchar(200),
	@Wbje decimal(20, 4),
	@Hl decimal(20, 4),
	@FLLX int,
	@SampleSelectedYesNo int,
	@SampleSelectedType int,
	@TBGrouping varchar(200),
	@EASREF varchar(5),
	@AccountingAge int,
	@qmyegc int,
	@Stepofsample int,
	@ErrorYesNo int,
	@FDetailID int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[TBVoucher] (
	[VoucherID],
	[Clientid],
	[ProjectID],
	[IncNo],
	[Date],
	[Period],
	[Pzlx],
	[Pzh],
	[Djh],
	[AccountCode],
	[ProjectCode],
	[Zy],
	[Jfje],
	[Dfje],
	[Jfsl],
	[Dfsl],
	[ZDR],
	[dfkm],
	[Jd],
	[Fsje],
	[Wbdm],
	[Wbje],
	[Hl],
	[FLLX],
	[SampleSelectedYesNo],
	[SampleSelectedType],
	[TBGrouping],
	[EASREF],
	[AccountingAge],
	[qmyegc],
	[Stepofsample],
	[ErrorYesNo],
	[FDetailID]
) VALUES (
	@VoucherID,
	@Clientid,
	@ProjectID,
	@IncNo,
	@Date,
	@Period,
	@Pzlx,
	@Pzh,
	@Djh,
	@AccountCode,
	@ProjectCode,
	@Zy,
	@Jfje,
	@Dfje,
	@Jfsl,
	@Dfsl,
	@ZDR,
	@dfkm,
	@Jd,
	@Fsje,
	@Wbdm,
	@Wbje,
	@Hl,
	@FLLX,
	@SampleSelectedYesNo,
	@SampleSelectedType,
	@TBGrouping,
	@EASREF,
	@AccountingAge,
	@qmyegc,
	@Stepofsample,
	@ErrorYesNo,
	@FDetailID
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertTBWlhz')
   BEGIN
       DROP  Procedure  usp_InsertTBWlhz
	END
GO

--region [dbo].[usp_InsertTBWlhz]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   HUASHENG using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertTBWlhz]
-- Date Generated: 2019年1月2日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertTBWlhz]
	@ProjectID varchar(100),
	@ID varchar(50),
	@HZNumber varchar(50),
	@HZSortID varchar(10),
	@AccountName varchar(255),
	@OtherMatters nvarchar(500),
	@ConsultDate datetime,
	@ConfirmDate datetime,
	@PostCode varchar(50),
	@PostAddress nvarchar(1000),
	@Recipient nvarchar(100),
	@sample int,
	@Sendletter int,
	@Reason nvarchar(1000)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[TBWlhz] (
	[ProjectID],
	[ID],
	[HZNumber],
	[HZSortID],
	[AccountName],
	[OtherMatters],
	[ConsultDate],
	[ConfirmDate],
	[PostCode],
	[PostAddress],
	[Recipient],
	[sample],
	[Sendletter],
	[Reason]
) VALUES (
	@ProjectID,
	@ID,
	@HZNumber,
	@HZSortID,
	@AccountName,
	@OtherMatters,
	@ConsultDate,
	@ConfirmDate,
	@PostCode,
	@PostAddress,
	@Recipient,
	@sample,
	@Sendletter,
	@Reason
)

--endregion


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertTbwlzl')
   BEGIN
       DROP  Procedure  usp_InsertTbwlzl
	END
GO

--region [dbo].[usp_InsertTbwlzl]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertTbwlzl]
-- Date Generated: 2018年8月18日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertTbwlzl]
	@ID varchar(50),
	@ProjectID varchar(100),
	@fsCode varchar(50),
	@AccountCode varchar(100),
	@AuxiliaryCode varchar(100),
	@AgeAnalysis int,
	@ZLD1 decimal(20, 2),
	@ZLD2 decimal(20, 2),
	@ZLD3 decimal(20, 2),
	@ZLD4 decimal(20, 2),
	@ZLD5 decimal(20, 2),
	@ZLD6 decimal(20, 2),
	@ZLD7 decimal(20, 2),
	@ZLD8 decimal(20, 2),
	@ZLD9 decimal(20, 2),
	@significant int,
	@Impairmenttestmethod int,
	@impairmentamount decimal(20, 2),
	@BalanceAnalysis int,
	@memo varchar(500),
	@HZZBZLD1 decimal(20, 2),
	@HZZBZLD2 decimal(20, 2),
	@HZZBZLD3 decimal(20, 2),
	@HZZBZLD4 decimal(20, 2),
	@HZZBZLD5 decimal(20, 2),
	@HZZBZLD6 decimal(20, 2),
	@HZZBZLD7 decimal(20, 2),
	@HZZBZLD8 decimal(20, 2),
	@HZZBZLD9 decimal(20, 2),
	@Creditperiod int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[Tbwlzl] (
	[ID],
	[ProjectID],
	[fsCode],
	[AccountCode],
	[AuxiliaryCode],
	[AgeAnalysis],
	[ZLD1],
	[ZLD2],
	[ZLD3],
	[ZLD4],
	[ZLD5],
	[ZLD6],
	[ZLD7],
	[ZLD8],
	[ZLD9],
	[significant],
	[Impairmenttestmethod],
	[impairmentamount],
	[BalanceAnalysis],
	[memo],
	[HZZBZLD1],
	[HZZBZLD2],
	[HZZBZLD3],
	[HZZBZLD4],
	[HZZBZLD5],
	[HZZBZLD6],
	[HZZBZLD7],
	[HZZBZLD8],
	[HZZBZLD9],
	[Creditperiod]
) VALUES (
	@ID,
	@ProjectID,
	@fsCode,
	@AccountCode,
	@AuxiliaryCode,
	@AgeAnalysis,
	@ZLD1,
	@ZLD2,
	@ZLD3,
	@ZLD4,
	@ZLD5,
	@ZLD6,
	@ZLD7,
	@ZLD8,
	@ZLD9,
	@significant,
	@Impairmenttestmethod,
	@impairmentamount,
	@BalanceAnalysis,
	@memo,
	@HZZBZLD1,
	@HZZBZLD2,
	@HZZBZLD3,
	@HZZBZLD4,
	@HZZBZLD5,
	@HZZBZLD6,
	@HZZBZLD7,
	@HZZBZLD8,
	@HZZBZLD9,
	@Creditperiod
)

--endregion



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_InsertWlhzandTB')
   BEGIN
       DROP  Procedure  usp_InsertWlhzandTB
	END
GO

--region [dbo].[usp_InsertWlhzandTB]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_InsertWlhzandTB]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_InsertWlhzandTB]
	@ProjectID varchar(100),
	@ID varchar(50),
	@WlhzID varchar(50),
	@FSCode varchar(50),
	@AccountCode varchar(255),
	@AuxiliaryCode varchar(255),
	@AccountName varchar(255),
	@Sendletteryesno int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[WlhzandTB] (
	[ProjectID],
	[ID],
	[WlhzID],
	[FSCode],
	[AccountCode],
	[AuxiliaryCode],
	[AccountName],
	[Sendletteryesno]
) VALUES (
	@ProjectID,
	@ID,
	@WlhzID,
	@FSCode,
	@AccountCode,
	@AuxiliaryCode,
	@AccountName,
	@Sendletteryesno
)

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectACCOUNTAll')
   BEGIN
       DROP  Procedure  usp_SelectACCOUNTAll
	END
GO

--region [dbo].[usp_SelectACCOUNTAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectACCOUNTAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectACCOUNTAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[AccountCode],
	[UpperCode],
	[AccountName],
	[Attribute],
	[Jd],
	[Hsxms],
	[TypeCode],
	[Jb],
	[IsMx],
	[Ncye],
	[Qqccgz],
	[Jfje],
	[Dfje],
	[Ncsl],
	[Syjz]
FROM
	[dbo].[ACCOUNT]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectACCOUNTDynamic')
   BEGIN
       DROP  Procedure  usp_SelectACCOUNTDynamic
	END
GO

--region [dbo].[usp_SelectACCOUNTDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectACCOUNTDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectACCOUNTDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[AccountCode],
	[UpperCode],
	[AccountName],
	[Attribute],
	[Jd],
	[Hsxms],
	[TypeCode],
	[Jb],
	[IsMx],
	[Ncye],
	[Qqccgz],
	[Jfje],
	[Dfje],
	[Ncsl],
	[Syjz]
FROM
	[dbo].[ACCOUNT]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectAccountingAgeOfFscodeAll')
   BEGIN
       DROP  Procedure  usp_SelectAccountingAgeOfFscodeAll
	END
GO

--region [dbo].[usp_SelectAccountingAgeOfFscodeAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectAccountingAgeOfFscodeAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectAccountingAgeOfFscodeAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[ID],
	[ORDER],
	[FSCode],
	[FIELDNAME],
	[FIELDTEXT],
	[AGEMINIMUM],
	[AGECEILING],
	[BADDEBTRATE],
	[SAMPLING],
	[ApplyYesno]
FROM
	[dbo].[AccountingAgeOfFscode]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectAccountingAgeOfFscodeDynamic')
   BEGIN
       DROP  Procedure  usp_SelectAccountingAgeOfFscodeDynamic
	END
GO

--region [dbo].[usp_SelectAccountingAgeOfFscodeDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectAccountingAgeOfFscodeDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectAccountingAgeOfFscodeDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[ID],
	[ORDER],
	[FSCode],
	[FIELDNAME],
	[FIELDTEXT],
	[AGEMINIMUM],
	[AGECEILING],
	[BADDEBTRATE],
	[SAMPLING],
	[ApplyYesno]
FROM
	[dbo].[AccountingAgeOfFscode]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectAccountingPoliciesAll')
   BEGIN
       DROP  Procedure  usp_SelectAccountingPoliciesAll
	END
GO

--region [dbo].[usp_SelectAccountingPoliciesAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectAccountingPoliciesAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectAccountingPoliciesAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[ID],
	[UpperID],
	[PoliciesID],
	[Order],
	[Policies],
	[ClientPolicies],
	[PoliciesEvaluation],
	[Change],
	[OldPolicies],
	[ChangeDate],
	[ChangeReasons],
	[ChangeResults],
	[ChangeEvaluation]
FROM
	[dbo].[AccountingPolicies]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectAccountingPoliciesDynamic')
   BEGIN
       DROP  Procedure  usp_SelectAccountingPoliciesDynamic
	END
GO

--region [dbo].[usp_SelectAccountingPoliciesDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectAccountingPoliciesDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectAccountingPoliciesDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[ID],
	[UpperID],
	[PoliciesID],
	[Order],
	[Policies],
	[ClientPolicies],
	[PoliciesEvaluation],
	[Change],
	[OldPolicies],
	[ChangeDate],
	[ChangeReasons],
	[ChangeResults],
	[ChangeEvaluation]
FROM
	[dbo].[AccountingPolicies]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectaccountperiodAll')
   BEGIN
       DROP  Procedure  usp_SelectaccountperiodAll
	END
GO

--region [dbo].[usp_SelectaccountperiodAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectaccountperiodAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectaccountperiodAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[accountperiod],
	[Period],
	[StartDate],
	[EndDate],
	[DateType],
	[CurrentyearPID]
FROM
	[dbo].[accountperiod]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectaccountperiodDynamic')
   BEGIN
       DROP  Procedure  usp_SelectaccountperiodDynamic
	END
GO

--region [dbo].[usp_SelectaccountperiodDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectaccountperiodDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectaccountperiodDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[accountperiod],
	[Period],
	[StartDate],
	[EndDate],
	[DateType],
	[CurrentyearPID]
FROM
	[dbo].[accountperiod]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectAccountQuesAll')
   BEGIN
       DROP  Procedure  usp_SelectAccountQuesAll
	END
GO

--region [dbo].[usp_SelectAccountQuesAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectAccountQuesAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectAccountQuesAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[ProjectID],
	[AccountCode],
	[QuesID],
	[QuesDescription],
	[SelectedYesNo],
	[AuditProgramCode],
	[QuestionType],
	[MutexQuesIDs]
FROM
	[dbo].[AccountQues]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectAccountQuesDynamic')
   BEGIN
       DROP  Procedure  usp_SelectAccountQuesDynamic
	END
GO

--region [dbo].[usp_SelectAccountQuesDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectAccountQuesDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectAccountQuesDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ID],
	[ProjectID],
	[AccountCode],
	[QuesID],
	[QuesDescription],
	[SelectedYesNo],
	[AuditProgramCode],
	[QuestionType],
	[MutexQuesIDs]
FROM
	[dbo].[AccountQues]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectAnnounceAll')
   BEGIN
       DROP  Procedure  usp_SelectAnnounceAll
	END
GO

--region [dbo].[usp_SelectAnnounceAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectAnnounceAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectAnnounceAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[ProjectID],
	[StruCode],
	[AnnounceContent],
	[RoleName],
	[LoginName],
	[SignOffTime],
	[SignOffSequence]
FROM
	[dbo].[Announce]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectAnnounceDynamic')
   BEGIN
       DROP  Procedure  usp_SelectAnnounceDynamic
	END
GO

--region [dbo].[usp_SelectAnnounceDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectAnnounceDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectAnnounceDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ID],
	[ProjectID],
	[StruCode],
	[AnnounceContent],
	[RoleName],
	[LoginName],
	[SignOffTime],
	[SignOffSequence]
FROM
	[dbo].[Announce]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectAuditGoalandCognizanceAll')
   BEGIN
       DROP  Procedure  usp_SelectAuditGoalandCognizanceAll
	END
GO

--region [dbo].[usp_SelectAuditGoalandCognizanceAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectAuditGoalandCognizanceAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectAuditGoalandCognizanceAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[ClassCode],
	[AuditGoalCode],
	[AuditGoalName],
	[Cognizance]
FROM
	[dbo].[AuditGoalandCognizance]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectAuditGoalandCognizanceDynamic')
   BEGIN
       DROP  Procedure  usp_SelectAuditGoalandCognizanceDynamic
	END
GO

--region [dbo].[usp_SelectAuditGoalandCognizanceDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectAuditGoalandCognizanceDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectAuditGoalandCognizanceDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[ClassCode],
	[AuditGoalCode],
	[AuditGoalName],
	[Cognizance]
FROM
	[dbo].[AuditGoalandCognizance]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectAuditProgramConfigAll')
   BEGIN
       DROP  Procedure  usp_SelectAuditProgramConfigAll
	END
GO

--region [dbo].[usp_SelectAuditProgramConfigAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectAuditProgramConfigAll]
-- Date Generated: 2018年9月5日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectAuditProgramConfigAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[AuditProgramCode],
	[FSCodeOrCycleCode],
	[SortID],
	[AuditGoalCode],
	[Category],
	[ApplyYesNo],
	[ProgramLevel],
	[QuesID],
	[SelectedYesNo],
	[SelectedReason]
FROM
	[dbo].[AuditProgramConfig]

--endregion



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectAuditProgramConfigDynamic')
   BEGIN
       DROP  Procedure  usp_SelectAuditProgramConfigDynamic
	END
GO

--region [dbo].[usp_SelectAuditProgramConfigDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectAuditProgramConfigDynamic]
-- Date Generated: 2018年9月5日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectAuditProgramConfigDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[AuditProgramCode],
	[FSCodeOrCycleCode],
	[SortID],
	[AuditGoalCode],
	[Category],
	[ApplyYesNo],
	[ProgramLevel],
	[QuesID],
	[SelectedYesNo],
	[SelectedReason]
FROM
	[dbo].[AuditProgramConfig]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectAuditProgramFileAll')
   BEGIN
       DROP  Procedure  usp_SelectAuditProgramFileAll
	END
GO
--region [dbo].[usp_SelectAuditProgramFileAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectAuditProgramFileAll]
-- Date Generated: 2018年9月3日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectAuditProgramFileAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[ProjectID],
	[AuditProgramCode],
	[FSCodeOrCycleCode],
	[StruCode]
FROM
	[dbo].[AuditProgramFile]

--endregion

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectAuditProgramFileDynamic')
   BEGIN
       DROP  Procedure  usp_SelectAuditProgramFileDynamic
	END
GO
--region [dbo].[usp_SelectAuditProgramFileDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectAuditProgramFileDynamic]
-- Date Generated: 2018年9月3日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectAuditProgramFileDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ID],
	[ProjectID],
	[AuditProgramCode],
	[FSCodeOrCycleCode],
	[StruCode]
FROM
	[dbo].[AuditProgramFile]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectAuditProgramFormAll')
   BEGIN
       DROP  Procedure  usp_SelectAuditProgramFormAll
	END
GO
--region [dbo].[usp_SelectAuditProgramFormAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectAuditProgramFormAll]
-- Date Generated: 2018年9月17日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectAuditProgramFormAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[AuditProgramCode],
	[SortID],
	[Title],
	[AssemblyID]
FROM
	[dbo].[AuditProgramForm]

--endregion

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectAuditProgramFormDynamic')
   BEGIN
       DROP  Procedure  usp_SelectAuditProgramFormDynamic
	END
GO
--region [dbo].[usp_SelectAuditProgramFormDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectAuditProgramFormDynamic]
-- Date Generated: 2018年9月17日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectAuditProgramFormDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[AuditProgramCode],
	[SortID],
	[Title],
	[AssemblyID]
FROM
	[dbo].[AuditProgramForm]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectAuditProgramLibrary1All')
   BEGIN
       DROP  Procedure  usp_SelectAuditProgramLibrary1All
	END
GO

--region [dbo].[usp_SelectAuditProgramLibrary1All]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectAuditProgramLibrary1All]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectAuditProgramLibrary1All]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[AccountCode],
	[AuditProgramCode],
	[SortID],
	[AuditGoalCode],
	[AuditProgramName],
	[AuditProgramGuideline],
	[Category],
	[ApplyYesNo],
	[ProgramLevel],
	[SelectedYesNo],
	[IndexNo],
	[Preparer],
	[PreparerName]
FROM
	[dbo].[AuditProgramLibrary1]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectAuditProgramLibrary1Dynamic')
   BEGIN
       DROP  Procedure  usp_SelectAuditProgramLibrary1Dynamic
	END
GO

--region [dbo].[usp_SelectAuditProgramLibrary1Dynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectAuditProgramLibrary1Dynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectAuditProgramLibrary1Dynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[AccountCode],
	[AuditProgramCode],
	[SortID],
	[AuditGoalCode],
	[AuditProgramName],
	[AuditProgramGuideline],
	[Category],
	[ApplyYesNo],
	[ProgramLevel],
	[SelectedYesNo],
	[IndexNo],
	[Preparer],
	[PreparerName]
FROM
	[dbo].[AuditProgramLibrary1]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectAuditProgramLibraryAll')
   BEGIN
       DROP  Procedure  usp_SelectAuditProgramLibraryAll
	END
GO
--region [dbo].[usp_SelectAuditProgramLibraryAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectAuditProgramLibraryAll]
-- Date Generated: 2018年10月29日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectAuditProgramLibraryAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[AuditProgramCode],
	[AuditProgramTitle],
	[AuditProgramName],
	[AuditProgramGuideline],
	[StageCode],
	[MenuID],
	[UpperProgramCode]
FROM
	[dbo].[AuditProgramLibrary]

--endregion
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectAuditProgramLibraryDynamic')
   BEGIN
       DROP  Procedure  usp_SelectAuditProgramLibraryDynamic
	END
GO
--region [dbo].[usp_SelectAuditProgramLibraryDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectAuditProgramLibraryDynamic]
-- Date Generated: 2018年10月29日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectAuditProgramLibraryDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[AuditProgramCode],
	[AuditProgramTitle],
	[AuditProgramName],
	[AuditProgramGuideline],
	[StageCode],
	[MenuID],
	[UpperProgramCode]
FROM
	[dbo].[AuditProgramLibrary]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectBActivitiesAndCGoalAll')
   BEGIN
       DROP  Procedure  usp_SelectBActivitiesAndCGoalAll
	END
GO

--region [dbo].[usp_SelectBActivitiesAndCGoalAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectBActivitiesAndCGoalAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectBActivitiesAndCGoalAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[CGoalID],
	[BActivitiesID],
	[CGoalName],
	[CControlPointIDs],
	[AccountandCode],
	[RealtedCognizance],
	[CCActivities],
	[ControTestProgram],
	[ControlFrequence],
	[SampleCount],
	[Memo],
	[RelationLevel],
	[SelectedYesNO],
	[ACActivities],
	[EfficiencyYesNo],
	[ExecutedYesNo],
	[EEfficiencyYesNo],
	[SupportingYesNo],
	[RelatedAccountandCognizance]
FROM
	[dbo].[BActivitiesAndCGoal]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectBActivitiesAndCGoalDynamic')
   BEGIN
       DROP  Procedure  usp_SelectBActivitiesAndCGoalDynamic
	END
GO

--region [dbo].[usp_SelectBActivitiesAndCGoalDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectBActivitiesAndCGoalDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectBActivitiesAndCGoalDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[CGoalID],
	[BActivitiesID],
	[CGoalName],
	[CControlPointIDs],
	[AccountandCode],
	[RealtedCognizance],
	[CCActivities],
	[ControTestProgram],
	[ControlFrequence],
	[SampleCount],
	[Memo],
	[RelationLevel],
	[SelectedYesNO],
	[ACActivities],
	[EfficiencyYesNo],
	[ExecutedYesNo],
	[EEfficiencyYesNo],
	[SupportingYesNo],
	[RelatedAccountandCognizance]
FROM
	[dbo].[BActivitiesAndCGoal]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectBankAcceptBillAll')
   BEGIN
       DROP  Procedure  usp_SelectBankAcceptBillAll
	END
GO

--region [dbo].[usp_SelectBankAcceptBillAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   HUASHENG using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectBankAcceptBillAll]
-- Date Generated: 2018年11月22日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectBankAcceptBillAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[ProjectID],
	[BankID],
	[BankName],
	[AcceptBillNum],
	[AcceptBankName],
	[AccountName],
	[AcceptMoney],
	[BeginDate],
	[EndDate]
FROM
	[dbo].[BankAcceptBill]

--endregion


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectBankAcceptBillDynamic')
   BEGIN
       DROP  Procedure  usp_SelectBankAcceptBillDynamic
	END
GO

--region [dbo].[usp_SelectBankAcceptBillDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   HUASHENG using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectBankAcceptBillDynamic]
-- Date Generated: 2018年11月22日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectBankAcceptBillDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ID],
	[ProjectID],
	[BankID],
	[BankName],
	[AcceptBillNum],
	[AcceptBankName],
	[AccountName],
	[AcceptMoney],
	[BeginDate],
	[EndDate]
FROM
	[dbo].[BankAcceptBill]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectBankAccountAll')
   BEGIN
       DROP  Procedure  usp_SelectBankAccountAll
	END
GO

--region [dbo].[usp_SelectBankAccountAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   HUASHENG using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectBankAccountAll]
-- Date Generated: 2018年11月22日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectBankAccountAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[ProjectID],
	[BankID],
	[BankName],
	[AccountName],
	[BankNum],
	[Currency],
	[Rate],
	[AccountType],
	[Balance],
	[BeginEndDate],
	[Explain],
	[Remark]
FROM
	[dbo].[BankAccount]

--endregion


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectBankAccountDynamic')
   BEGIN
       DROP  Procedure  usp_SelectBankAccountDynamic
	END
GO

--region [dbo].[usp_SelectBankAccountDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   HUASHENG using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectBankAccountDynamic]
-- Date Generated: 2018年11月22日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectBankAccountDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ID],
	[ProjectID],
	[BankID],
	[BankName],
	[AccountName],
	[BankNum],
	[Currency],
	[Rate],
	[AccountType],
	[Balance],
	[BeginEndDate],
	[Explain],
	[Remark]
FROM
	[dbo].[BankAccount]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectBankBorrowAll')
   BEGIN
       DROP  Procedure  usp_SelectBankBorrowAll
	END
GO

--region [dbo].[usp_SelectBankBorrowAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   HUASHENG using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectBankBorrowAll]
-- Date Generated: 2018年11月22日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectBankBorrowAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[ProjectID],
	[BankID],
	[BankName],
	[BorrowName],
	[BankNum],
	[Currency],
	[Balance],
	[BorrowDate],
	[BecomeDate],
	[Rate],
	[AssureName],
	[Remark]
FROM
	[dbo].[BankBorrow]

--endregion


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectBankBorrowDynamic')
   BEGIN
       DROP  Procedure  usp_SelectBankBorrowDynamic
	END
GO

--region [dbo].[usp_SelectBankBorrowDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   HUASHENG using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectBankBorrowDynamic]
-- Date Generated: 2018年11月22日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectBankBorrowDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ID],
	[ProjectID],
	[BankID],
	[BankName],
	[BorrowName],
	[BankNum],
	[Currency],
	[Balance],
	[BorrowDate],
	[BecomeDate],
	[Rate],
	[AssureName],
	[Remark]
FROM
	[dbo].[BankBorrow]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectBankInfoAll')
   BEGIN
       DROP  Procedure  usp_SelectBankInfoAll
	END
GO

--region [dbo].[usp_SelectBankInfoAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   HUASHENG using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectBankInfoAll]
-- Date Generated: 2019年1月2日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectBankInfoAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[ProjectID],
	[BankName],
	[EndDate],
	[HZNumber],
	[HZSortID],
	[Remark]
FROM
	[dbo].[BankInfo]

--endregion


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectBankInfoDynamic')
   BEGIN
       DROP  Procedure  usp_SelectBankInfoDynamic
	END
GO

--region [dbo].[usp_SelectBankInfoDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   HUASHENG using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectBankInfoDynamic]
-- Date Generated: 2019年1月2日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectBankInfoDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ID],
	[ProjectID],
	[BankName],
	[EndDate],
	[HZNumber],
	[HZSortID],
	[Remark]
FROM
	[dbo].[BankInfo]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectBankUnsubscribeAll')
   BEGIN
       DROP  Procedure  usp_SelectBankUnsubscribeAll
	END
GO

--region [dbo].[usp_SelectBankUnsubscribeAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   HUASHENG using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectBankUnsubscribeAll]
-- Date Generated: 2018年11月22日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectBankUnsubscribeAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[ProjectID],
	[BankID],
	[BankName],
	[AccountName],
	[BankNum],
	[Currency],
	[UnsubscribeDate]
FROM
	[dbo].[BankUnsubscribe]

--endregion


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectBankUnsubscribeDynamic')
   BEGIN
       DROP  Procedure  usp_SelectBankUnsubscribeDynamic
	END
GO

--region [dbo].[usp_SelectBankUnsubscribeDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   HUASHENG using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectBankUnsubscribeDynamic]
-- Date Generated: 2018年11月22日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectBankUnsubscribeDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ID],
	[ProjectID],
	[BankID],
	[BankName],
	[AccountName],
	[BankNum],
	[Currency],
	[UnsubscribeDate]
FROM
	[dbo].[BankUnsubscribe]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectBCycleAndAccountsAll')
   BEGIN
       DROP  Procedure  usp_SelectBCycleAndAccountsAll
	END
GO

--region [dbo].[usp_SelectBCycleAndAccountsAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectBCycleAndAccountsAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectBCycleAndAccountsAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[BusinessCycleID],
	[AccountID],
	[AccountName],
	[Memo],
	[SelectedYesNO]
FROM
	[dbo].[BCycleAndAccounts]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectBCycleAndAccountsDynamic')
   BEGIN
       DROP  Procedure  usp_SelectBCycleAndAccountsDynamic
	END
GO

--region [dbo].[usp_SelectBCycleAndAccountsDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectBCycleAndAccountsDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectBCycleAndAccountsDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[BusinessCycleID],
	[AccountID],
	[AccountName],
	[Memo],
	[SelectedYesNO]
FROM
	[dbo].[BCycleAndAccounts]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectBCycleAndBActivitiesAll')
   BEGIN
       DROP  Procedure  usp_SelectBCycleAndBActivitiesAll
	END
GO

--region [dbo].[usp_SelectBCycleAndBActivitiesAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectBCycleAndBActivitiesAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectBCycleAndBActivitiesAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[BusinessCycleID],
	[BActivitiesID],
	[BActivitiesName],
	[Memo],
	[RelationLevel],
	[SelectedYesNO],
	[UnSelectedReason]
FROM
	[dbo].[BCycleAndBActivities]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectBCycleAndBActivitiesDynamic')
   BEGIN
       DROP  Procedure  usp_SelectBCycleAndBActivitiesDynamic
	END
GO

--region [dbo].[usp_SelectBCycleAndBActivitiesDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectBCycleAndBActivitiesDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectBCycleAndBActivitiesDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[BusinessCycleID],
	[BActivitiesID],
	[BActivitiesName],
	[Memo],
	[RelationLevel],
	[SelectedYesNO],
	[UnSelectedReason]
FROM
	[dbo].[BCycleAndBActivities]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectBusinessCycleAll')
   BEGIN
       DROP  Procedure  usp_SelectBusinessCycleAll
	END
GO

--region [dbo].[usp_SelectBusinessCycleAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectBusinessCycleAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectBusinessCycleAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[BusinessCycleID],
	[BusinessCycleName],
	[Memo],
	[FileCodeFor15000],
	[FileCodeFor40000],
	[LastExecutedYear],
	[ExecutedYesNo],
	[NextExecutedYear],
	[TotalInitialConslusion]
FROM
	[dbo].[BusinessCycle]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectBusinessCycleDynamic')
   BEGIN
       DROP  Procedure  usp_SelectBusinessCycleDynamic
	END
GO

--region [dbo].[usp_SelectBusinessCycleDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectBusinessCycleDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectBusinessCycleDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[BusinessCycleID],
	[BusinessCycleName],
	[Memo],
	[FileCodeFor15000],
	[FileCodeFor40000],
	[LastExecutedYear],
	[ExecutedYesNo],
	[NextExecutedYear],
	[TotalInitialConslusion]
FROM
	[dbo].[BusinessCycle]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectClientMaintainProposedAll')
   BEGIN
       DROP  Procedure  usp_SelectClientMaintainProposedAll
	END
GO

--region [dbo].[usp_SelectClientMaintainProposedAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectClientMaintainProposedAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectClientMaintainProposedAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[ID],
	[UpperID],
	[ConsiderElement],
	[Existence],
	[IsTitle]
FROM
	[dbo].[ClientMaintainProposed]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectClientMaintainProposedDynamic')
   BEGIN
       DROP  Procedure  usp_SelectClientMaintainProposedDynamic
	END
GO

--region [dbo].[usp_SelectClientMaintainProposedDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectClientMaintainProposedDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectClientMaintainProposedDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[ID],
	[UpperID],
	[ConsiderElement],
	[Existence],
	[IsTitle]
FROM
	[dbo].[ClientMaintainProposed]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectCombinationChangedReasonAll')
   BEGIN
       DROP  Procedure  usp_SelectCombinationChangedReasonAll
	END
GO

--region [dbo].[usp_SelectCombinationChangedReasonAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectCombinationChangedReasonAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectCombinationChangedReasonAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[GUID],
	[ProjectID],
	[StruCode],
	[ComPID],
	[ChangeReason]
FROM
	[dbo].[CombinationChangedReason]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectCombinationChangedReasonDynamic')
   BEGIN
       DROP  Procedure  usp_SelectCombinationChangedReasonDynamic
	END
GO

--region [dbo].[usp_SelectCombinationChangedReasonDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectCombinationChangedReasonDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectCombinationChangedReasonDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[GUID],
	[ProjectID],
	[StruCode],
	[ComPID],
	[ChangeReason]
FROM
	[dbo].[CombinationChangedReason]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectCombinationListAll')
   BEGIN
       DROP  Procedure  usp_SelectCombinationListAll
	END
GO

--region [dbo].[usp_SelectCombinationListAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectCombinationListAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectCombinationListAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[ComCode],
	[ComName]
FROM
	[dbo].[CombinationList]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectCombinationListDynamic')
   BEGIN
       DROP  Procedure  usp_SelectCombinationListDynamic
	END
GO

--region [dbo].[usp_SelectCombinationListDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectCombinationListDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectCombinationListDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[ComCode],
	[ComName]
FROM
	[dbo].[CombinationList]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectCombinationRangeAll')
   BEGIN
       DROP  Procedure  usp_SelectCombinationRangeAll
	END
GO

--region [dbo].[usp_SelectCombinationRangeAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectCombinationRangeAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectCombinationRangeAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[GUID],
	[ProjectID],
	[StruCode],
	[ComPID],
	[IsForeign],
	[Rate],
	[ComTime]
FROM
	[dbo].[CombinationRange]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectCombinationRangeDynamic')
   BEGIN
       DROP  Procedure  usp_SelectCombinationRangeDynamic
	END
GO

--region [dbo].[usp_SelectCombinationRangeDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectCombinationRangeDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectCombinationRangeDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[GUID],
	[ProjectID],
	[StruCode],
	[ComPID],
	[IsForeign],
	[Rate],
	[ComTime]
FROM
	[dbo].[CombinationRange]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectCommunicationAll')
   BEGIN
       DROP  Procedure  usp_SelectCommunicationAll
	END
GO

--region [dbo].[usp_SelectCommunicationAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectCommunicationAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectCommunicationAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[ProjectID],
	[StruCode],
	[CommunicationTargets],
	[CommunicationContent],
	[ReferenceList]
FROM
	[dbo].[Communication]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectCommunicationDynamic')
   BEGIN
       DROP  Procedure  usp_SelectCommunicationDynamic
	END
GO

--region [dbo].[usp_SelectCommunicationDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectCommunicationDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectCommunicationDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ID],
	[ProjectID],
	[StruCode],
	[CommunicationTargets],
	[CommunicationContent],
	[ReferenceList]
FROM
	[dbo].[Communication]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectComNoteDataAll')
   BEGIN
       DROP  Procedure  usp_SelectComNoteDataAll
	END
GO

--region [dbo].[usp_SelectComNoteDataAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectComNoteDataAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectComNoteDataAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[GUID],
	[ProjectID],
	[StruCode],
	[FormCode],
	[NoteCode],
	[Bth],
	[CheckData]
FROM
	[dbo].[ComNoteData]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectComNoteDataDetailAll')
   BEGIN
       DROP  Procedure  usp_SelectComNoteDataDetailAll
	END
GO

--region [dbo].[usp_SelectComNoteDataDetailAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectComNoteDataDetailAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectComNoteDataDetailAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[GUID],
	[UpperGUID],
	[ProjectID],
	[StruCode],
	[ComProjectID],
	[FormCode],
	[NoteCode],
	[ColumnCode],
	[NumberField],
	[TextField],
	[DateField]
FROM
	[dbo].[ComNoteDataDetail]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectComNoteDataDetailDynamic')
   BEGIN
       DROP  Procedure  usp_SelectComNoteDataDetailDynamic
	END
GO

--region [dbo].[usp_SelectComNoteDataDetailDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectComNoteDataDetailDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectComNoteDataDetailDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[GUID],
	[UpperGUID],
	[ProjectID],
	[StruCode],
	[ComProjectID],
	[FormCode],
	[NoteCode],
	[ColumnCode],
	[NumberField],
	[TextField],
	[DateField]
FROM
	[dbo].[ComNoteDataDetail]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectComNoteDataDynamic')
   BEGIN
       DROP  Procedure  usp_SelectComNoteDataDynamic
	END
GO

--region [dbo].[usp_SelectComNoteDataDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectComNoteDataDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectComNoteDataDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[GUID],
	[ProjectID],
	[StruCode],
	[FormCode],
	[NoteCode],
	[Bth],
	[CheckData]
FROM
	[dbo].[ComNoteData]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectComNoteMemoAll')
   BEGIN
       DROP  Procedure  usp_SelectComNoteMemoAll
	END
GO

--region [dbo].[usp_SelectComNoteMemoAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectComNoteMemoAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectComNoteMemoAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[StruCode],
	[FSCode],
	[FormCode],
	[Memo],
	[memohelp]
FROM
	[dbo].[ComNoteMemo]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectComNoteMemoDynamic')
   BEGIN
       DROP  Procedure  usp_SelectComNoteMemoDynamic
	END
GO

--region [dbo].[usp_SelectComNoteMemoDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectComNoteMemoDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectComNoteMemoDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[StruCode],
	[FSCode],
	[FormCode],
	[Memo],
	[memohelp]
FROM
	[dbo].[ComNoteMemo]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectContentofSampleTestAll')
   BEGIN
       DROP  Procedure  usp_SelectContentofSampleTestAll
	END
GO

--region [dbo].[usp_SelectContentofSampleTestAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectContentofSampleTestAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectContentofSampleTestAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[FSCode],
	[FunctionType],
	[contentID],
	[recordtype],
	[Fieldname],
	[Display]
FROM
	[dbo].[ContentofSampleTest]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectContentofSampleTestDynamic')
   BEGIN
       DROP  Procedure  usp_SelectContentofSampleTestDynamic
	END
GO

--region [dbo].[usp_SelectContentofSampleTestDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectContentofSampleTestDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectContentofSampleTestDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[FSCode],
	[FunctionType],
	[contentID],
	[recordtype],
	[Fieldname],
	[Display]
FROM
	[dbo].[ContentofSampleTest]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectContentofsampleTestInfoAll')
   BEGIN
       DROP  Procedure  usp_SelectContentofsampleTestInfoAll
	END
GO

--region [dbo].[usp_SelectContentofsampleTestInfoAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectContentofsampleTestInfoAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectContentofsampleTestInfoAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[FSCode],
	[contentID],
	[FunctionType],
	[recordtype],
	[NumberofAE],
	[DateofAE],
	[AmountofAE],
	[QuantityofAE],
	[AuditEvidence],
	[copyofEvidence]
FROM
	[dbo].[ContentofsampleTestInfo]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectContentofsampleTestInfoDynamic')
   BEGIN
       DROP  Procedure  usp_SelectContentofsampleTestInfoDynamic
	END
GO

--region [dbo].[usp_SelectContentofsampleTestInfoDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectContentofsampleTestInfoDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectContentofsampleTestInfoDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[FSCode],
	[contentID],
	[FunctionType],
	[recordtype],
	[NumberofAE],
	[DateofAE],
	[AmountofAE],
	[QuantityofAE],
	[AuditEvidence],
	[copyofEvidence]
FROM
	[dbo].[ContentofsampleTestInfo]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectCriticalElementofPMAll')
   BEGIN
       DROP  Procedure  usp_SelectCriticalElementofPMAll
	END
GO

--region [dbo].[usp_SelectCriticalElementofPMAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectCriticalElementofPMAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectCriticalElementofPMAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[ID],
	[Fscode],
	[CriticalElement],
	[OtherCriticalElement],
	[CriticalElementCount],
	[SelectedIndex],
	[SelectedIndexDescription],
	[CurrentMateriality],
	[selected],
	[Reasons]
FROM
	[dbo].[CriticalElementofPM]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectCriticalElementofPMDynamic')
   BEGIN
       DROP  Procedure  usp_SelectCriticalElementofPMDynamic
	END
GO

--region [dbo].[usp_SelectCriticalElementofPMDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectCriticalElementofPMDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectCriticalElementofPMDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[ID],
	[Fscode],
	[CriticalElement],
	[OtherCriticalElement],
	[CriticalElementCount],
	[SelectedIndex],
	[SelectedIndexDescription],
	[CurrentMateriality],
	[selected],
	[Reasons]
FROM
	[dbo].[CriticalElementofPM]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectCutofftestAll')
   BEGIN
       DROP  Procedure  usp_SelectCutofftestAll
	END
GO

--region [dbo].[usp_SelectCutofftestAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectCutofftestAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectCutofftestAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[VoucherID],
	[ProjectID],
	[FSCode],
	[AccountCode],
	[AccountName],
	[ProjectCode],
	[IsBefore],
	[Sample],
	[OsDate],
	[PZH],
	[dfkm],
	[JD],
	[JE],
	[ZY]
FROM
	[dbo].[Cutofftest]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectCutofftestDynamic')
   BEGIN
       DROP  Procedure  usp_SelectCutofftestDynamic
	END
GO

--region [dbo].[usp_SelectCutofftestDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectCutofftestDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectCutofftestDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[VoucherID],
	[ProjectID],
	[FSCode],
	[AccountCode],
	[AccountName],
	[ProjectCode],
	[IsBefore],
	[Sample],
	[OsDate],
	[PZH],
	[dfkm],
	[JD],
	[JE],
	[ZY]
FROM
	[dbo].[Cutofftest]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectEliminationAllocateAll')
   BEGIN
       DROP  Procedure  usp_SelectEliminationAllocateAll
	END
GO

--region [dbo].[usp_SelectEliminationAllocateAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectEliminationAllocateAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectEliminationAllocateAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[GUID],
	[ProjectID],
	[EliminationNO],
	[ComPID],
	[FsCode],
	[AccountCode],
	[AuxiliaryCode],
	[FormCode],
	[NoteCode],
	[ColumnCode],
	[CheckData],
	[ChildEliminationID]
FROM
	[dbo].[EliminationAllocate]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectEliminationAllocateDynamic')
   BEGIN
       DROP  Procedure  usp_SelectEliminationAllocateDynamic
	END
GO

--region [dbo].[usp_SelectEliminationAllocateDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectEliminationAllocateDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectEliminationAllocateDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[GUID],
	[ProjectID],
	[EliminationNO],
	[ComPID],
	[FsCode],
	[AccountCode],
	[AuxiliaryCode],
	[FormCode],
	[NoteCode],
	[ColumnCode],
	[CheckData],
	[ChildEliminationID]
FROM
	[dbo].[EliminationAllocate]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectERisksLevelAll')
   BEGIN
       DROP  Procedure  usp_SelectERisksLevelAll
	END
GO

--region [dbo].[usp_SelectERisksLevelAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectERisksLevelAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectERisksLevelAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[ID],
	[UpperID],
	[Riskcase],
	[RiskID],
	[RiskYesNO],
	[ImportantRiskYesNo],
	[Reference]
FROM
	[dbo].[ERisksLevel]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectERisksLevelDynamic')
   BEGIN
       DROP  Procedure  usp_SelectERisksLevelDynamic
	END
GO

--region [dbo].[usp_SelectERisksLevelDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectERisksLevelDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectERisksLevelDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[ID],
	[UpperID],
	[Riskcase],
	[RiskID],
	[RiskYesNO],
	[ImportantRiskYesNo],
	[Reference]
FROM
	[dbo].[ERisksLevel]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectErrorRelationItemAll')
   BEGIN
       DROP  Procedure  usp_SelectErrorRelationItemAll
	END
GO

--region [dbo].[usp_SelectErrorRelationItemAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectErrorRelationItemAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectErrorRelationItemAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[ErrorID],
	[ErrorType],
	[ProjectID],
	[FsCode],
	[JD],
	[JE]
FROM
	[dbo].[ErrorRelationItem]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectErrorRelationItemDynamic')
   BEGIN
       DROP  Procedure  usp_SelectErrorRelationItemDynamic
	END
GO

--region [dbo].[usp_SelectErrorRelationItemDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectErrorRelationItemDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectErrorRelationItemDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ID],
	[ErrorID],
	[ErrorType],
	[ProjectID],
	[FsCode],
	[JD],
	[JE]
FROM
	[dbo].[ErrorRelationItem]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectEvaluationErrorAll')
   BEGIN
       DROP  Procedure  usp_SelectEvaluationErrorAll
	END
GO

--region [dbo].[usp_SelectEvaluationErrorAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectEvaluationErrorAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectEvaluationErrorAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[ProjectID],
	[FsCode],
	[AccountCode],
	[AuxiliaryCode],
	[Type],
	[ReferCode],
	[SampleData],
	[ExpectedData],
	[AcceptDiff],
	[ConfirmedDiff],
	[EvaluationError],
	[AffectKm],
	[Memo],
	[IsUse]
FROM
	[dbo].[EvaluationError]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectEvaluationErrorDynamic')
   BEGIN
       DROP  Procedure  usp_SelectEvaluationErrorDynamic
	END
GO

--region [dbo].[usp_SelectEvaluationErrorDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectEvaluationErrorDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectEvaluationErrorDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ID],
	[ProjectID],
	[FsCode],
	[AccountCode],
	[AuxiliaryCode],
	[Type],
	[ReferCode],
	[SampleData],
	[ExpectedData],
	[AcceptDiff],
	[ConfirmedDiff],
	[EvaluationError],
	[AffectKm],
	[Memo],
	[IsUse]
FROM
	[dbo].[EvaluationError]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectFileReviewsAll')
   BEGIN
       DROP  Procedure  usp_SelectFileReviewsAll
	END
GO

--region [dbo].[usp_SelectFileReviewsAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectFileReviewsAll]
-- Date Generated: 2018年8月28日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectFileReviewsAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[ProjectID],
	[StruCode],
	[AuditProgramCode],
	[IsOpen],
	[Context],
	[feedback],
	[feedbackdoc],
	[Reviewer],
	[ReviewerName],
	[LastReviewerTime],
	[BackLoginName],
	[BackUserName],
	[lastfeedbackTime],
	[IsDelete],
	[CreateTime]
FROM
	[dbo].[FileReviews]

--endregion



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectFileReviewsDynamic')
   BEGIN
       DROP  Procedure  usp_SelectFileReviewsDynamic
	END
GO

--region [dbo].[usp_SelectFileReviewsDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectFileReviewsDynamic]
-- Date Generated: 2018年8月28日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectFileReviewsDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ID],
	[ProjectID],
	[StruCode],
	[AuditProgramCode],
	[IsOpen],
	[Context],
	[feedback],
	[feedbackdoc],
	[Reviewer],
	[ReviewerName],
	[LastReviewerTime],
	[BackLoginName],
	[BackUserName],
	[lastfeedbackTime],
	[IsDelete],
	[CreateTime]
FROM
	[dbo].[FileReviews]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectFileReviewsImageAll')
   BEGIN
       DROP  Procedure  usp_SelectFileReviewsImageAll
	END
GO

--region [dbo].[usp_SelectFileReviewsImageAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectFileReviewsImageAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectFileReviewsImageAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[ProjectID],
	[FileID],
	[SortID],
	[FilePath],
	[LibID]
FROM
	[dbo].[FileReviewsImage]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectFileReviewsImageDynamic')
   BEGIN
       DROP  Procedure  usp_SelectFileReviewsImageDynamic
	END
GO

--region [dbo].[usp_SelectFileReviewsImageDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectFileReviewsImageDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectFileReviewsImageDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ID],
	[ProjectID],
	[FileID],
	[SortID],
	[FilePath],
	[LibID]
FROM
	[dbo].[FileReviewsImage]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectFileScriptListAll')
   BEGIN
       DROP  Procedure  usp_SelectFileScriptListAll
	END
GO

--region [dbo].[usp_SelectFileScriptListAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectFileScriptListAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectFileScriptListAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[FileLibID],
	[StruCode],
	[StruCodeText],
	[StruName],
	[UpperStruCode],
	[StruType],
	[StruDescription],
	[StruCriticalYesNO],
	[StruTarget],
	[BuildingType],
	[Checkout],
	[CheckedReviewer],
	[StruPreparer],
	[StruCreateTime],
	[StruReviewer],
	[StruMasterORCarbon],
	[FlowExcutedState],
	[OpenNotes],
	[ClosedNotes],
	[StruSize],
	[StruLastEditTime],
	[FlowID],
	[FlowExcutedTime],
	[Fsitem],
	[FSCode],
	[BCycleCode],
	[AppScopeProject],
	[NonAppScopeProject],
	[AppCombineProject],
	[BuildLevel],
	[carrieddown],
	[ConnectData]
FROM
	[dbo].[FileScriptList]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectFileScriptListDynamic')
   BEGIN
       DROP  Procedure  usp_SelectFileScriptListDynamic
	END
GO

--region [dbo].[usp_SelectFileScriptListDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectFileScriptListDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectFileScriptListDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[FileLibID],
	[StruCode],
	[StruCodeText],
	[StruName],
	[UpperStruCode],
	[StruType],
	[StruDescription],
	[StruCriticalYesNO],
	[StruTarget],
	[BuildingType],
	[Checkout],
	[CheckedReviewer],
	[StruPreparer],
	[StruCreateTime],
	[StruReviewer],
	[StruMasterORCarbon],
	[FlowExcutedState],
	[OpenNotes],
	[ClosedNotes],
	[StruSize],
	[StruLastEditTime],
	[FlowID],
	[FlowExcutedTime],
	[Fsitem],
	[FSCode],
	[BCycleCode],
	[AppScopeProject],
	[NonAppScopeProject],
	[AppCombineProject],
	[BuildLevel],
	[carrieddown],
	[ConnectData]
FROM
	[dbo].[FileScriptList]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectFlowsActionAll')
   BEGIN
       DROP  Procedure  usp_SelectFlowsActionAll
	END
GO

--region [dbo].[usp_SelectFlowsActionAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectFlowsActionAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectFlowsActionAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[StruID],
	[FlowID],
	[NodeID],
	[NodeProcessor],
	[ActionDatetime]
FROM
	[dbo].[FlowsAction]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectFlowsActionDynamic')
   BEGIN
       DROP  Procedure  usp_SelectFlowsActionDynamic
	END
GO

--region [dbo].[usp_SelectFlowsActionDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectFlowsActionDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectFlowsActionDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[StruID],
	[FlowID],
	[NodeID],
	[NodeProcessor],
	[ActionDatetime]
FROM
	[dbo].[FlowsAction]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectFSCodeConfigAll')
   BEGIN
       DROP  Procedure  usp_SelectFSCodeConfigAll
	END
GO

--region [dbo].[usp_SelectFSCodeConfigAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectFSCodeConfigAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectFSCodeConfigAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[FsCode],
	[FsName],
	[FSType],
	[TBType],
	[IsMx],
	[Kmsx],
	[Yefx],
	[TBGrouping],
	[IsCashflow],
	[IsBankConfirmation],
	[IsRiskassess],
	[IsNote],
	[IsAuditplan],
	[IsAuditdocument],
	[AccountingMeasure],
	[FERcode],
	[IsUse]
FROM
	[dbo].[FSCodeConfig]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectFSCodeConfigDynamic')
   BEGIN
       DROP  Procedure  usp_SelectFSCodeConfigDynamic
	END
GO

--region [dbo].[usp_SelectFSCodeConfigDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectFSCodeConfigDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectFSCodeConfigDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[FsCode],
	[FsName],
	[FSType],
	[TBType],
	[IsMx],
	[Kmsx],
	[Yefx],
	[TBGrouping],
	[IsCashflow],
	[IsBankConfirmation],
	[IsRiskassess],
	[IsNote],
	[IsAuditplan],
	[IsAuditdocument],
	[AccountingMeasure],
	[FERcode],
	[IsUse]
FROM
	[dbo].[FSCodeConfig]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectInherentRiskAccountAll')
   BEGIN
       DROP  Procedure  usp_SelectInherentRiskAccountAll
	END
GO

--region [dbo].[usp_SelectInherentRiskAccountAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectInherentRiskAccountAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectInherentRiskAccountAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[ID],
	[RiskID],
	[RiskSource],
	[AccountID],
	[AccountName],
	[CognizanceCode],
	[AuditMethod],
	[ControlTestProgram],
	[MaterialityTestProgramYesNo],
	[DetailTestYesNo],
	[Memo],
	[CGoalID],
	[Referencelist1],
	[Referencelist2],
	[Referencelist3],
	[TotalConclusion],
	[Countermeasure]
FROM
	[dbo].[InherentRiskAccount]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectInherentRiskAccountDynamic')
   BEGIN
       DROP  Procedure  usp_SelectInherentRiskAccountDynamic
	END
GO

--region [dbo].[usp_SelectInherentRiskAccountDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectInherentRiskAccountDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectInherentRiskAccountDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[ID],
	[RiskID],
	[RiskSource],
	[AccountID],
	[AccountName],
	[CognizanceCode],
	[AuditMethod],
	[ControlTestProgram],
	[MaterialityTestProgramYesNo],
	[DetailTestYesNo],
	[Memo],
	[CGoalID],
	[Referencelist1],
	[Referencelist2],
	[Referencelist3],
	[TotalConclusion],
	[Countermeasure]
FROM
	[dbo].[InherentRiskAccount]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectInherentRiskAll')
   BEGIN
       DROP  Procedure  usp_SelectInherentRiskAll
	END
GO

--region [dbo].[usp_SelectInherentRiskAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectInherentRiskAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectInherentRiskAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[ID],
	[RiskLevelID],
	[RiskLevelType],
	[RiskSource],
	[RiskYesNO],
	[RiskDescription],
	[ImportantRiskYesNo],
	[SpecialRiskYesNo],
	[ReportSeverityYesNo],
	[Solution],
	[Countermeasure],
	[Referencelist],
	[FinalcialRiskYesNo],
	[Results],
	[Conclusion1],
	[Conclusion2]
FROM
	[dbo].[InherentRisk]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectInherentRiskDynamic')
   BEGIN
       DROP  Procedure  usp_SelectInherentRiskDynamic
	END
GO

--region [dbo].[usp_SelectInherentRiskDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectInherentRiskDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectInherentRiskDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[ID],
	[RiskLevelID],
	[RiskLevelType],
	[RiskSource],
	[RiskYesNO],
	[RiskDescription],
	[ImportantRiskYesNo],
	[SpecialRiskYesNo],
	[ReportSeverityYesNo],
	[Solution],
	[Countermeasure],
	[Referencelist],
	[FinalcialRiskYesNo],
	[Results],
	[Conclusion1],
	[Conclusion2]
FROM
	[dbo].[InherentRisk]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectNoteAndTBAll')
   BEGIN
       DROP  Procedure  usp_SelectNoteAndTBAll
	END
GO

--region [dbo].[usp_SelectNoteAndTBAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   HUASHENG using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectNoteAndTBAll]
-- Date Generated: 2018年12月11日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectNoteAndTBAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[GUID],
	[ProjectID],
	[NoteCode],
	[FormCode],
	[FSCode],
	[AccountCode],
	[AuxiliaryCode],
	[TBType],
	[IDGrouping]
FROM
	[dbo].[NoteAndTB]

--endregion


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectNoteAndTBDynamic')
   BEGIN
       DROP  Procedure  usp_SelectNoteAndTBDynamic
	END
GO

--region [dbo].[usp_SelectNoteAndTBDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   HUASHENG using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectNoteAndTBDynamic]
-- Date Generated: 2018年12月11日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectNoteAndTBDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[GUID],
	[ProjectID],
	[NoteCode],
	[FormCode],
	[FSCode],
	[AccountCode],
	[AuxiliaryCode],
	[TBType],
	[IDGrouping]
FROM
	[dbo].[NoteAndTB]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectNoteCheckRuleAll')
   BEGIN
       DROP  Procedure  usp_SelectNoteCheckRuleAll
	END
GO

--region [dbo].[usp_SelectNoteCheckRuleAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectNoteCheckRuleAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectNoteCheckRuleAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[ProjectID],
	[FSCode],
	[FormType],
	[CheckPathOne],
	[CheckPathTwo],
	[Remark],
	[IsUseCom],
	[IsUse],
	[SelectType]
FROM
	[dbo].[NoteCheckRule]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectNoteCheckRuleDynamic')
   BEGIN
       DROP  Procedure  usp_SelectNoteCheckRuleDynamic
	END
GO

--region [dbo].[usp_SelectNoteCheckRuleDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectNoteCheckRuleDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectNoteCheckRuleDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ID],
	[ProjectID],
	[FSCode],
	[FormType],
	[CheckPathOne],
	[CheckPathTwo],
	[Remark],
	[IsUseCom],
	[IsUse],
	[SelectType]
FROM
	[dbo].[NoteCheckRule]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectNoteColumnAttributeAll')
   BEGIN
       DROP  Procedure  usp_SelectNoteColumnAttributeAll
	END
GO

--region [dbo].[usp_SelectNoteColumnAttributeAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectNoteColumnAttributeAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectNoteColumnAttributeAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[ColumnCode],
	[FSCode],
	[FormCode],
	[Title],
	[SortID],
	[Type],
	[IsConnect],
	[ConnectName],
	[IsCheckRow],
	[IsMerge]
FROM
	[dbo].[NoteColumnAttribute]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectNoteColumnAttributeDynamic')
   BEGIN
       DROP  Procedure  usp_SelectNoteColumnAttributeDynamic
	END
GO

--region [dbo].[usp_SelectNoteColumnAttributeDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectNoteColumnAttributeDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectNoteColumnAttributeDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[ColumnCode],
	[FSCode],
	[FormCode],
	[Title],
	[SortID],
	[Type],
	[IsConnect],
	[ConnectName],
	[IsCheckRow],
	[IsMerge]
FROM
	[dbo].[NoteColumnAttribute]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectNoteComFormulaAll')
   BEGIN
       DROP  Procedure  usp_SelectNoteComFormulaAll
	END
GO

--region [dbo].[usp_SelectNoteComFormulaAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectNoteComFormulaAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectNoteComFormulaAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[StruCode],
	[ColumnCode],
	[NoteCode],
	[FormCode],
	[FSCode],
	[Formula]
FROM
	[dbo].[NoteComFormula]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectNoteComFormulaDynamic')
   BEGIN
       DROP  Procedure  usp_SelectNoteComFormulaDynamic
	END
GO

--region [dbo].[usp_SelectNoteComFormulaDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectNoteComFormulaDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectNoteComFormulaDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[StruCode],
	[ColumnCode],
	[NoteCode],
	[FormCode],
	[FSCode],
	[Formula]
FROM
	[dbo].[NoteComFormula]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectNoteConnectRuleAll')
   BEGIN
       DROP  Procedure  usp_SelectNoteConnectRuleAll
	END
GO

--region [dbo].[usp_SelectNoteConnectRuleAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectNoteConnectRuleAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectNoteConnectRuleAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[ProjectID],
	[FSCode],
	[FormCode],
	[ColumnCodeOne],
	[ColumnCodeTwo],
	[IsUse]
FROM
	[dbo].[NoteConnectRule]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectNoteConnectRuleDynamic')
   BEGIN
       DROP  Procedure  usp_SelectNoteConnectRuleDynamic
	END
GO

--region [dbo].[usp_SelectNoteConnectRuleDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectNoteConnectRuleDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectNoteConnectRuleDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ID],
	[ProjectID],
	[FSCode],
	[FormCode],
	[ColumnCodeOne],
	[ColumnCodeTwo],
	[IsUse]
FROM
	[dbo].[NoteConnectRule]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectNoteDataAll')
   BEGIN
       DROP  Procedure  usp_SelectNoteDataAll
	END
GO

--region [dbo].[usp_SelectNoteDataAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectNoteDataAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectNoteDataAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[NoteCode],
	[FormCode],
	[Bth],
	[CheckData]
FROM
	[dbo].[NoteData]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectNoteDataDetailAll')
   BEGIN
       DROP  Procedure  usp_SelectNoteDataDetailAll
	END
GO

--region [dbo].[usp_SelectNoteDataDetailAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectNoteDataDetailAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectNoteDataDetailAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[FormCode],
	[NoteCode],
	[ColumnCode],
	[NumberField],
	[TextField],
	[DateField]
FROM
	[dbo].[NoteDataDetail]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectNoteDataDetailDynamic')
   BEGIN
       DROP  Procedure  usp_SelectNoteDataDetailDynamic
	END
GO

--region [dbo].[usp_SelectNoteDataDetailDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectNoteDataDetailDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectNoteDataDetailDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[FormCode],
	[NoteCode],
	[ColumnCode],
	[NumberField],
	[TextField],
	[DateField]
FROM
	[dbo].[NoteDataDetail]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectNoteDataDynamic')
   BEGIN
       DROP  Procedure  usp_SelectNoteDataDynamic
	END
GO

--region [dbo].[usp_SelectNoteDataDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectNoteDataDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectNoteDataDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[NoteCode],
	[FormCode],
	[Bth],
	[CheckData]
FROM
	[dbo].[NoteData]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectNoteFormAll')
   BEGIN
       DROP  Procedure  usp_SelectNoteFormAll
	END
GO

--region [dbo].[usp_SelectNoteFormAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectNoteFormAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectNoteFormAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[FormCode],
	[FormName],
	[SortID],
	[IsUse],
	[FSCode],
	[FormType],
	[Remark],
	[StructHash],
	[DataHash],
	[IsChangeRow],
	[IsCombination]
FROM
	[dbo].[NoteForm]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectNoteFormDynamic')
   BEGIN
       DROP  Procedure  usp_SelectNoteFormDynamic
	END
GO

--region [dbo].[usp_SelectNoteFormDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectNoteFormDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectNoteFormDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[FormCode],
	[FormName],
	[SortID],
	[IsUse],
	[FSCode],
	[FormType],
	[Remark],
	[StructHash],
	[DataHash],
	[IsChangeRow],
	[IsCombination]
FROM
	[dbo].[NoteForm]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectNoteFormulaAll')
   BEGIN
       DROP  Procedure  usp_SelectNoteFormulaAll
	END
GO

--region [dbo].[usp_SelectNoteFormulaAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectNoteFormulaAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectNoteFormulaAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[ColumnCode],
	[NoteCode],
	[FormCode],
	[FSCode],
	[Formula]
FROM
	[dbo].[NoteFormula]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectNoteFormulaDynamic')
   BEGIN
       DROP  Procedure  usp_SelectNoteFormulaDynamic
	END
GO

--region [dbo].[usp_SelectNoteFormulaDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectNoteFormulaDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectNoteFormulaDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[ColumnCode],
	[NoteCode],
	[FormCode],
	[FSCode],
	[Formula]
FROM
	[dbo].[NoteFormula]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectNoteMemoAll')
   BEGIN
       DROP  Procedure  usp_SelectNoteMemoAll
	END
GO

--region [dbo].[usp_SelectNoteMemoAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectNoteMemoAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectNoteMemoAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[FSCode],
	[FormCode],
	[Memo],
	[memohelp]
FROM
	[dbo].[NoteMemo]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectNoteMemoDynamic')
   BEGIN
       DROP  Procedure  usp_SelectNoteMemoDynamic
	END
GO

--region [dbo].[usp_SelectNoteMemoDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectNoteMemoDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectNoteMemoDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[FSCode],
	[FormCode],
	[Memo],
	[memohelp]
FROM
	[dbo].[NoteMemo]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectNoteRowAttributeAll')
   BEGIN
       DROP  Procedure  usp_SelectNoteRowAttributeAll
	END
GO

--region [dbo].[usp_SelectNoteRowAttributeAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectNoteRowAttributeAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectNoteRowAttributeAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[NoteCode],
	[FormCode],
	[FSCode],
	[UpperNoteCode],
	[SortID],
	[Bth],
	[IsQzh],
	[IsGdh],
	[IsCheckRow],
	[IsConnect]
FROM
	[dbo].[NoteRowAttribute]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectNoteRowAttributeDynamic')
   BEGIN
       DROP  Procedure  usp_SelectNoteRowAttributeDynamic
	END
GO

--region [dbo].[usp_SelectNoteRowAttributeDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectNoteRowAttributeDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectNoteRowAttributeDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[NoteCode],
	[FormCode],
	[FSCode],
	[UpperNoteCode],
	[SortID],
	[Bth],
	[IsQzh],
	[IsGdh],
	[IsCheckRow],
	[IsConnect]
FROM
	[dbo].[NoteRowAttribute]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectPIDInformationAll')
   BEGIN
       DROP  Procedure  usp_SelectPIDInformationAll
	END
GO

--region [dbo].[usp_SelectPIDInformationAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectPIDInformationAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectPIDInformationAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[ClientRiskType],
	[currentyearPID],
	[lastperiodPID],
	[IPOPrioryear1PID],
	[IPOPrioryear2PID],
	[IPOPrioryear3PID],
	[Carryforward],
	[FinDefine],
	[InvDefine],
	[WagDefine],
	[FADefine]
FROM
	[dbo].[PIDInformation]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectPIDInformationDynamic')
   BEGIN
       DROP  Procedure  usp_SelectPIDInformationDynamic
	END
GO

--region [dbo].[usp_SelectPIDInformationDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectPIDInformationDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectPIDInformationDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[ClientRiskType],
	[currentyearPID],
	[lastperiodPID],
	[IPOPrioryear1PID],
	[IPOPrioryear2PID],
	[IPOPrioryear3PID],
	[Carryforward],
	[FinDefine],
	[InvDefine],
	[WagDefine],
	[FADefine]
FROM
	[dbo].[PIDInformation]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectPlanningProceduresAll')
   BEGIN
       DROP  Procedure  usp_SelectPlanningProceduresAll
	END
GO

--region [dbo].[usp_SelectPlanningProceduresAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectPlanningProceduresAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectPlanningProceduresAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[SortID],
	[StruCode],
	[BusinessCycleID],
	[ProgramName],
	[ReferenceList]
FROM
	[dbo].[PlanningProcedures]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectPlanningProceduresDynamic')
   BEGIN
       DROP  Procedure  usp_SelectPlanningProceduresDynamic
	END
GO

--region [dbo].[usp_SelectPlanningProceduresDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectPlanningProceduresDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectPlanningProceduresDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[SortID],
	[StruCode],
	[BusinessCycleID],
	[ProgramName],
	[ReferenceList]
FROM
	[dbo].[PlanningProcedures]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectPMofFsCodeAll')
   BEGIN
       DROP  Procedure  usp_SelectPMofFsCodeAll
	END
GO

--region [dbo].[usp_SelectPMofFsCodeAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectPMofFsCodeAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectPMofFsCodeAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[ID],
	[Fscode],
	[ValueofPM],
	[ValueofMP]
FROM
	[dbo].[PMofFsCode]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectPMofFsCodeDynamic')
   BEGIN
       DROP  Procedure  usp_SelectPMofFsCodeDynamic
	END
GO

--region [dbo].[usp_SelectPMofFsCodeDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectPMofFsCodeDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectPMofFsCodeDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[ID],
	[Fscode],
	[ValueofPM],
	[ValueofMP]
FROM
	[dbo].[PMofFsCode]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectPmPlanningMaterialityAll')
   BEGIN
       DROP  Procedure  usp_SelectPmPlanningMaterialityAll
	END
GO

--region [dbo].[usp_SelectPmPlanningMaterialityAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectPmPlanningMaterialityAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectPmPlanningMaterialityAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[ID],
	[CurrentMateriality],
	[PriorMateriality],
	[CurrentNotAdjustedTax],
	[PriorNotAdjustedTax],
	[CurrentAdjustedTax],
	[PriorAdjustedTax],
	[QuantityFactors],
	[Misstatementratio],
	[MinorMisstatements],
	[Taxeffect],
	[AnticipatedErrorRate],
	[AnticipatedTaxRate],
	[StatutoryTaxRate],
	[CriticalElement],
	[OtherCriticalElement],
	[CriticalElementCount],
	[SelectedIndex],
	[SelectedIndexDescription],
	[PMAfterTax]
FROM
	[dbo].[PmPlanningMateriality]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectPmPlanningMaterialityDynamic')
   BEGIN
       DROP  Procedure  usp_SelectPmPlanningMaterialityDynamic
	END
GO

--region [dbo].[usp_SelectPmPlanningMaterialityDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectPmPlanningMaterialityDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectPmPlanningMaterialityDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[ID],
	[CurrentMateriality],
	[PriorMateriality],
	[CurrentNotAdjustedTax],
	[PriorNotAdjustedTax],
	[CurrentAdjustedTax],
	[PriorAdjustedTax],
	[QuantityFactors],
	[Misstatementratio],
	[MinorMisstatements],
	[Taxeffect],
	[AnticipatedErrorRate],
	[AnticipatedTaxRate],
	[StatutoryTaxRate],
	[CriticalElement],
	[OtherCriticalElement],
	[CriticalElementCount],
	[SelectedIndex],
	[SelectedIndexDescription],
	[PMAfterTax]
FROM
	[dbo].[PmPlanningMateriality]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectPMvalueofJAll')
   BEGIN
       DROP  Procedure  usp_SelectPMvalueofJAll
	END
GO

--region [dbo].[usp_SelectPMvalueofJAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectPMvalueofJAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectPMvalueofJAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[Fscode],
	[Testobject],
	[Step],
	[ID],
	[Overallsample],
	[ValueofJ],
	[Samplesize],
	[SampleTotal],
	[Memo]
FROM
	[dbo].[PMvalueofJ]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectPMvalueofJDynamic')
   BEGIN
       DROP  Procedure  usp_SelectPMvalueofJDynamic
	END
GO

--region [dbo].[usp_SelectPMvalueofJDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectPMvalueofJDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectPMvalueofJDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[Fscode],
	[Testobject],
	[Step],
	[ID],
	[Overallsample],
	[ValueofJ],
	[Samplesize],
	[SampleTotal],
	[Memo]
FROM
	[dbo].[PMvalueofJ]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectProJectAll')
   BEGIN
       DROP  Procedure  usp_SelectProJectAll
	END
GO

--region [dbo].[usp_SelectProJectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectProJectAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectProJectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[TYPECODE],
	[PROJECTCODE],
	[PROJECTNAME],
	[UPPERCODE],
	[JB],
	[ISMX]
FROM
	[dbo].[ProJect]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectProjectConfigAll')
   BEGIN
       DROP  Procedure  usp_SelectProjectConfigAll
	END
GO

--region [dbo].[usp_SelectProjectConfigAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectProjectConfigAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectProjectConfigAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[Key],
	[Value],
	[Remark]
FROM
	[dbo].[ProjectConfig]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectProjectConfigDynamic')
   BEGIN
       DROP  Procedure  usp_SelectProjectConfigDynamic
	END
GO

--region [dbo].[usp_SelectProjectConfigDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectProjectConfigDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectProjectConfigDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[Key],
	[Value],
	[Remark]
FROM
	[dbo].[ProjectConfig]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectProJectDynamic')
   BEGIN
       DROP  Procedure  usp_SelectProJectDynamic
	END
GO

--region [dbo].[usp_SelectProJectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectProJectDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectProJectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[TYPECODE],
	[PROJECTCODE],
	[PROJECTNAME],
	[UPPERCODE],
	[JB],
	[ISMX]
FROM
	[dbo].[ProJect]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectProjectErrorAll')
   BEGIN
       DROP  Procedure  usp_SelectProjectErrorAll
	END
GO

--region [dbo].[usp_SelectProjectErrorAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectProjectErrorAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectProjectErrorAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[ProjectID],
	[FsCode],
	[AccountCode],
	[AuxiliaryCode],
	[VoucherID],
	[Type],
	[ReferCode],
	[SampleData],
	[CheckedData],
	[ProjectError],
	[AffectKm],
	[ErrorData],
	[ErrorReason],
	[ErrorType],
	[Memo],
	[IsUse]
FROM
	[dbo].[ProjectError]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectProjectErrorDynamic')
   BEGIN
       DROP  Procedure  usp_SelectProjectErrorDynamic
	END
GO

--region [dbo].[usp_SelectProjectErrorDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectProjectErrorDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectProjectErrorDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ID],
	[ProjectID],
	[FsCode],
	[AccountCode],
	[AuxiliaryCode],
	[VoucherID],
	[Type],
	[ReferCode],
	[SampleData],
	[CheckedData],
	[ProjectError],
	[AffectKm],
	[ErrorData],
	[ErrorReason],
	[ErrorType],
	[Memo],
	[IsUse]
FROM
	[dbo].[ProjectError]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectProjectTypeAll')
   BEGIN
       DROP  Procedure  usp_SelectProjectTypeAll
	END
GO

--region [dbo].[usp_SelectProjectTypeAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectProjectTypeAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectProjectTypeAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[TYPECODE],
	[TYPENAME]
FROM
	[dbo].[ProjectType]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectProjectTypeDynamic')
   BEGIN
       DROP  Procedure  usp_SelectProjectTypeDynamic
	END
GO

--region [dbo].[usp_SelectProjectTypeDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectProjectTypeDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectProjectTypeDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[TYPECODE],
	[TYPENAME]
FROM
	[dbo].[ProjectType]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectQcwljzpzAll')
   BEGIN
       DROP  Procedure  usp_SelectQcwljzpzAll
	END
GO

--region [dbo].[usp_SelectQcwljzpzAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectQcwljzpzAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectQcwljzpzAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[VoucherID],
	[Clientid],
	[ProjectID],
	[IncNo],
	[Date],
	[Period],
	[Pzlx],
	[Pzh],
	[Djh],
	[AccountCode],
	[ProjectCode],
	[Zy],
	[Jfje],
	[Dfje],
	[Jfsl],
	[Dfsl],
	[ZDR],
	[dfkm],
	[AccountingAge],
	[qmyegc],
	[Fsje],
	[Jd],
	[FDetailID]
FROM
	[dbo].[Qcwljzpz]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectQcwljzpzDynamic')
   BEGIN
       DROP  Procedure  usp_SelectQcwljzpzDynamic
	END
GO

--region [dbo].[usp_SelectQcwljzpzDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectQcwljzpzDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectQcwljzpzDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[VoucherID],
	[Clientid],
	[ProjectID],
	[IncNo],
	[Date],
	[Period],
	[Pzlx],
	[Pzh],
	[Djh],
	[AccountCode],
	[ProjectCode],
	[Zy],
	[Jfje],
	[Dfje],
	[Jfsl],
	[Dfsl],
	[ZDR],
	[dfkm],
	[AccountingAge],
	[qmyegc],
	[Fsje],
	[Jd],
	[FDetailID]
FROM
	[dbo].[Qcwljzpz]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectQhJzpzAll')
   BEGIN
       DROP  Procedure  usp_SelectQhJzpzAll
	END
GO

--region [dbo].[usp_SelectQhJzpzAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectQhJzpzAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectQhJzpzAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[VoucherID],
	[Clientid],
	[ProjectID],
	[IncNo],
	[Date],
	[Period],
	[Pzlx],
	[Pzh],
	[Djh],
	[AccountCode],
	[ProjectCode],
	[Zy],
	[Jfje],
	[Dfje],
	[Jfsl],
	[Dfsl],
	[ZDR],
	[dfkm],
	[Fsje],
	[Jd],
	[fllx],
	[FDetailID]
FROM
	[dbo].[QhJzpz]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectQhJzpzDynamic')
   BEGIN
       DROP  Procedure  usp_SelectQhJzpzDynamic
	END
GO

--region [dbo].[usp_SelectQhJzpzDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectQhJzpzDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectQhJzpzDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[VoucherID],
	[Clientid],
	[ProjectID],
	[IncNo],
	[Date],
	[Period],
	[Pzlx],
	[Pzh],
	[Djh],
	[AccountCode],
	[ProjectCode],
	[Zy],
	[Jfje],
	[Dfje],
	[Jfsl],
	[Dfsl],
	[ZDR],
	[dfkm],
	[Fsje],
	[Jd],
	[fllx],
	[FDetailID]
FROM
	[dbo].[QhJzpz]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectQmyegcAll')
   BEGIN
       DROP  Procedure  usp_SelectQmyegcAll
	END
GO

--region [dbo].[usp_SelectQmyegcAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectQmyegcAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectQmyegcAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[VProjectID],
	[AccountCode],
	[ProjectCode],
	[AccountingAge],
	[TableID],
	[VoucherID],
	[Date],
	[Jfje],
	[Dfje],
	[Fsje]
FROM
	[dbo].[Qmyegc]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectQmyegcDynamic')
   BEGIN
       DROP  Procedure  usp_SelectQmyegcDynamic
	END
GO

--region [dbo].[usp_SelectQmyegcDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectQmyegcDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectQmyegcDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[VProjectID],
	[AccountCode],
	[ProjectCode],
	[AccountingAge],
	[TableID],
	[VoucherID],
	[Date],
	[Jfje],
	[Dfje],
	[Fsje]
FROM
	[dbo].[Qmyegc]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectRecordOfSampleTestAll')
   BEGIN
       DROP  Procedure  usp_SelectRecordOfSampleTestAll
	END
GO

--region [dbo].[usp_SelectRecordOfSampleTestAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectRecordOfSampleTestAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectRecordOfSampleTestAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[VoucherID],
	[ContentID],
	[RecordID],
	[IncNo],
	[NumberofAE],
	[DateofAE],
	[AmountofAE],
	[QuantityofAE],
	[AuditEvidence],
	[RecordType],
	[copyofEvidence]
FROM
	[dbo].[RecordOfSampleTest]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectRecordOfSampleTestDynamic')
   BEGIN
       DROP  Procedure  usp_SelectRecordOfSampleTestDynamic
	END
GO

--region [dbo].[usp_SelectRecordOfSampleTestDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectRecordOfSampleTestDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectRecordOfSampleTestDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[VoucherID],
	[ContentID],
	[RecordID],
	[IncNo],
	[NumberofAE],
	[DateofAE],
	[AmountofAE],
	[QuantityofAE],
	[AuditEvidence],
	[RecordType],
	[copyofEvidence]
FROM
	[dbo].[RecordOfSampleTest]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectReplaceTestVoucherAll')
   BEGIN
       DROP  Procedure  usp_SelectReplaceTestVoucherAll
	END
GO
--region [dbo].[usp_SelectReplaceTestVoucherAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   HUASHENG using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectReplaceTestVoucherAll]
-- Date Generated: 2018年11月22日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectReplaceTestVoucherAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[VoucherID],
	[ProjectID],
	[FSCode],
	[AccountCode],
	[AccountName],
	[ProjectCode],
	[OsDate],
	[PZH],
	[dfkm],
	[JD],
	[JE],
	[ZY]
FROM
	[dbo].[ReplaceTestVoucher]

--endregion
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectReplaceTestVoucherDynamic')
   BEGIN
       DROP  Procedure  usp_SelectReplaceTestVoucherDynamic
	END
GO
--region [dbo].[usp_SelectReplaceTestVoucherDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   HUASHENG using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectReplaceTestVoucherDynamic]
-- Date Generated: 2018年11月22日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectReplaceTestVoucherDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[VoucherID],
	[ProjectID],
	[FSCode],
	[AccountCode],
	[AccountName],
	[ProjectCode],
	[OsDate],
	[PZH],
	[dfkm],
	[JD],
	[JE],
	[ZY]
FROM
	[dbo].[ReplaceTestVoucher]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectRiskfactorAll')
   BEGIN
       DROP  Procedure  usp_SelectRiskfactorAll
	END
GO

--region [dbo].[usp_SelectRiskfactorAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectRiskfactorAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectRiskfactorAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[ProjectID],
	[FSCode],
	[CognizanceCode],
	[RiskType],
	[RiskValue],
	[LastRiskValue],
	[BCycleCode]
FROM
	[dbo].[Riskfactor]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectRiskfactorDynamic')
   BEGIN
       DROP  Procedure  usp_SelectRiskfactorDynamic
	END
GO

--region [dbo].[usp_SelectRiskfactorDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectRiskfactorDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectRiskfactorDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ID],
	[ProjectID],
	[FSCode],
	[CognizanceCode],
	[RiskType],
	[RiskValue],
	[LastRiskValue],
	[BCycleCode]
FROM
	[dbo].[Riskfactor]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectRiskModelAll')
   BEGIN
       DROP  Procedure  usp_SelectRiskModelAll
	END
GO

--region [dbo].[usp_SelectRiskModelAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectRiskModelAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectRiskModelAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[ProjectID],
	[RiskType],
	[RiskText],
	[RiskValue],
	[Riskfactor]
FROM
	[dbo].[RiskModel]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectRiskModelDynamic')
   BEGIN
       DROP  Procedure  usp_SelectRiskModelDynamic
	END
GO

--region [dbo].[usp_SelectRiskModelDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectRiskModelDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectRiskModelDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ID],
	[ProjectID],
	[RiskType],
	[RiskText],
	[RiskValue],
	[Riskfactor]
FROM
	[dbo].[RiskModel]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectRiskResponseAll')
   BEGIN
       DROP  Procedure  usp_SelectRiskResponseAll
	END
GO

--region [dbo].[usp_SelectRiskResponseAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectRiskResponseAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectRiskResponseAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[ID],
	[UpperID],
	[DetailResponse]
FROM
	[dbo].[RiskResponse]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectRiskResponseDynamic')
   BEGIN
       DROP  Procedure  usp_SelectRiskResponseDynamic
	END
GO

--region [dbo].[usp_SelectRiskResponseDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectRiskResponseDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectRiskResponseDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[ID],
	[UpperID],
	[DetailResponse]
FROM
	[dbo].[RiskResponse]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectRoleInfoAll')
   BEGIN
       DROP  Procedure  usp_SelectRoleInfoAll
	END
GO

--region [dbo].[usp_SelectRoleInfoAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectRoleInfoAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectRoleInfoAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[RoleID],
	[RoleName],
	[AliasName],
	[RolesDescription],
	[SortID],
	[ISReview],
	[ReviewType],
	[ReviewObjecttive],
	[IsReadOnly]
FROM
	[dbo].[RoleInfo]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectRoleInfoDynamic')
   BEGIN
       DROP  Procedure  usp_SelectRoleInfoDynamic
	END
GO

--region [dbo].[usp_SelectRoleInfoDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectRoleInfoDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectRoleInfoDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[RoleID],
	[RoleName],
	[AliasName],
	[RolesDescription],
	[SortID],
	[ISReview],
	[ReviewType],
	[ReviewObjecttive],
	[IsReadOnly]
FROM
	[dbo].[RoleInfo]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectStrategicPlanningAll')
   BEGIN
       DROP  Procedure  usp_SelectStrategicPlanningAll
	END
GO

--region [dbo].[usp_SelectStrategicPlanningAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectStrategicPlanningAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectStrategicPlanningAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[ID],
	[AuditPurposes],
	[AccountingStandard],
	[AuditingStandard],
	[ParticularSpecific],
	[OtherInfo],
	[OtherMatters],
	[ControlStrategyRely],
	[RotationTestApply]
FROM
	[dbo].[StrategicPlanning]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectStrategicPlanningDynamic')
   BEGIN
       DROP  Procedure  usp_SelectStrategicPlanningDynamic
	END
GO

--region [dbo].[usp_SelectStrategicPlanningDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectStrategicPlanningDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectStrategicPlanningDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[ID],
	[AuditPurposes],
	[AccountingStandard],
	[AuditingStandard],
	[ParticularSpecific],
	[OtherInfo],
	[OtherMatters],
	[ControlStrategyRely],
	[RotationTestApply]
FROM
	[dbo].[StrategicPlanning]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectSubComNoteDataAll')
   BEGIN
       DROP  Procedure  usp_SelectSubComNoteDataAll
	END
GO

--region [dbo].[usp_SelectSubComNoteDataAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectSubComNoteDataAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectSubComNoteDataAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[GUID],
	[ProjectID],
	[StruCode],
	[EliminationNO],
	[ComProjectID],
	[FormCode],
	[NoteCode],
	[IsGdh],
	[Bth],
	[CheckData]
FROM
	[dbo].[SubComNoteData]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectSubComNoteDataDetailAll')
   BEGIN
       DROP  Procedure  usp_SelectSubComNoteDataDetailAll
	END
GO

--region [dbo].[usp_SelectSubComNoteDataDetailAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectSubComNoteDataDetailAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectSubComNoteDataDetailAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[GUID],
	[UpperGUID],
	[ProjectID],
	[StruCode],
	[ComProjectID],
	[FormCode],
	[NoteCode],
	[ColumnCode],
	[NumberField],
	[TextField],
	[DateField]
FROM
	[dbo].[SubComNoteDataDetail]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectSubComNoteDataDetailDynamic')
   BEGIN
       DROP  Procedure  usp_SelectSubComNoteDataDetailDynamic
	END
GO

--region [dbo].[usp_SelectSubComNoteDataDetailDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectSubComNoteDataDetailDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectSubComNoteDataDetailDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[GUID],
	[UpperGUID],
	[ProjectID],
	[StruCode],
	[ComProjectID],
	[FormCode],
	[NoteCode],
	[ColumnCode],
	[NumberField],
	[TextField],
	[DateField]
FROM
	[dbo].[SubComNoteDataDetail]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectSubComNoteDataDynamic')
   BEGIN
       DROP  Procedure  usp_SelectSubComNoteDataDynamic
	END
GO

--region [dbo].[usp_SelectSubComNoteDataDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectSubComNoteDataDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectSubComNoteDataDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[GUID],
	[ProjectID],
	[StruCode],
	[EliminationNO],
	[ComProjectID],
	[FormCode],
	[NoteCode],
	[IsGdh],
	[Bth],
	[CheckData]
FROM
	[dbo].[SubComNoteData]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectSubTBCombinationAll')
   BEGIN
       DROP  Procedure  usp_SelectSubTBCombinationAll
	END
GO

--region [dbo].[usp_SelectSubTBCombinationAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectSubTBCombinationAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectSubTBCombinationAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[GUID],
	[ProjectID],
	[StruCode],
	[ComProjectID],
	[FsCode],
	[Yefx],
	[FsName],
	[Unchecked],
	[UncheckedCeeJF],
	[UncheckedCeeDF],
	[UncheckedCFSData],
	[Checked],
	[CheckedCeeJF],
	[CheckedCeeDF],
	[CheckedCFSData]
FROM
	[dbo].[SubTBCombination]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectSubTBCombinationDynamic')
   BEGIN
       DROP  Procedure  usp_SelectSubTBCombinationDynamic
	END
GO

--region [dbo].[usp_SelectSubTBCombinationDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectSubTBCombinationDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectSubTBCombinationDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[GUID],
	[ProjectID],
	[StruCode],
	[ComProjectID],
	[FsCode],
	[Yefx],
	[FsName],
	[Unchecked],
	[UncheckedCeeJF],
	[UncheckedCeeDF],
	[UncheckedCFSData],
	[Checked],
	[CheckedCeeJF],
	[CheckedCeeDF],
	[CheckedCFSData]
FROM
	[dbo].[SubTBCombination]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectTBAdjustedItemsAll')
   BEGIN
       DROP  Procedure  usp_SelectTBAdjustedItemsAll
	END
GO

--region [dbo].[usp_SelectTBAdjustedItemsAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectTBAdjustedItemsAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectTBAdjustedItemsAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[AdjustedNO],
	[AdjustedDetails],
	[AdjustedType],
	[ReferenceList],
	[AdjustedyesNo],
	[TaxYesNo],
	[PSYesNo],
	[ResolveReference],
	[FAP],
	[IsAdjusted],
	[CreatorLogin],
	[CreatorName],
	[Createdtime]
FROM
	[dbo].[TBAdjustedItems]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectTBAdjustedItemsDynamic')
   BEGIN
       DROP  Procedure  usp_SelectTBAdjustedItemsDynamic
	END
GO

--region [dbo].[usp_SelectTBAdjustedItemsDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectTBAdjustedItemsDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectTBAdjustedItemsDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[AdjustedNO],
	[AdjustedDetails],
	[AdjustedType],
	[ReferenceList],
	[AdjustedyesNo],
	[TaxYesNo],
	[PSYesNo],
	[ResolveReference],
	[FAP],
	[IsAdjusted],
	[CreatorLogin],
	[CreatorName],
	[Createdtime]
FROM
	[dbo].[TBAdjustedItems]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectTBAdjustedSubItemsAll')
   BEGIN
       DROP  Procedure  usp_SelectTBAdjustedSubItemsAll
	END
GO

--region [dbo].[usp_SelectTBAdjustedSubItemsAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectTBAdjustedSubItemsAll]
-- Date Generated: 2018年8月18日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectTBAdjustedSubItemsAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[AdjustedNO],
	[ID],
	[SortID],
	[FSCode],
	[FSName],
	[AccountCode],
	[AuxiliaryCode],
	[AccAuxName],
	[Jd],
	[Jfje],
	[Dfje],
	[Fsje],
	[VoucherID]
FROM
	[dbo].[TBAdjustedSubItems]

--endregion



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectTBAdjustedSubItemsDynamic')
   BEGIN
       DROP  Procedure  usp_SelectTBAdjustedSubItemsDynamic
	END
GO

--region [dbo].[usp_SelectTBAdjustedSubItemsDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectTBAdjustedSubItemsDynamic]
-- Date Generated: 2018年8月18日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectTBAdjustedSubItemsDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[AdjustedNO],
	[ID],
	[SortID],
	[FSCode],
	[FSName],
	[AccountCode],
	[AuxiliaryCode],
	[AccAuxName],
	[Jd],
	[Jfje],
	[Dfje],
	[Fsje],
	[VoucherID]
FROM
	[dbo].[TBAdjustedSubItems]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectTbAppendTableAll')
   BEGIN
       DROP  Procedure  usp_SelectTbAppendTableAll
	END
GO

--region [dbo].[usp_SelectTbAppendTableAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectTbAppendTableAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectTbAppendTableAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[ProjectID],
	[FSName],
	[FSType],
	[AssociatedCode],
	[CombinationCode],
	[SortID],
	[Orderid],
	[NoteSort],
	[YSbbQmye],
	[QmyeFormula],
	[YSbbQcye],
	[UncheckedVariationAnalysis],
	[UncheckedProportionsAnalysis],
	[CheckedVariationAnalysis],
	[CheckedProportionsAnalysis],
	[QcyeFormulaAccount],
	[QcyeFormulaStructure],
	[CheckedFormulaAccount],
	[CheckedFormulaStructure]
FROM
	[dbo].[TbAppendTable]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectTbAppendTableDynamic')
   BEGIN
       DROP  Procedure  usp_SelectTbAppendTableDynamic
	END
GO

--region [dbo].[usp_SelectTbAppendTableDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectTbAppendTableDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectTbAppendTableDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ID],
	[ProjectID],
	[FSName],
	[FSType],
	[AssociatedCode],
	[CombinationCode],
	[SortID],
	[Orderid],
	[NoteSort],
	[YSbbQmye],
	[QmyeFormula],
	[YSbbQcye],
	[UncheckedVariationAnalysis],
	[UncheckedProportionsAnalysis],
	[CheckedVariationAnalysis],
	[CheckedProportionsAnalysis],
	[QcyeFormulaAccount],
	[QcyeFormulaStructure],
	[CheckedFormulaAccount],
	[CheckedFormulaStructure]
FROM
	[dbo].[TbAppendTable]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectTBAuxAll')
   BEGIN
       DROP  Procedure  usp_SelectTBAuxAll
	END
GO

--region [dbo].[usp_SelectTBAuxAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectTBAuxAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectTBAuxAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[AccountCode],
	[AuxiliaryCode],
	[AuxiliaryName],
	[FSCode],
	[kmsx],
	[YEFX],
	[TBGrouping],
	[Sqqmye],
	[Qqccgz],
	[jfje],
	[dfje],
	[qmye]
FROM
	[dbo].[TBAux]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectTBAuxDynamic')
   BEGIN
       DROP  Procedure  usp_SelectTBAuxDynamic
	END
GO

--region [dbo].[usp_SelectTBAuxDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectTBAuxDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectTBAuxDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[AccountCode],
	[AuxiliaryCode],
	[AuxiliaryName],
	[FSCode],
	[kmsx],
	[YEFX],
	[TBGrouping],
	[Sqqmye],
	[Qqccgz],
	[jfje],
	[dfje],
	[qmye]
FROM
	[dbo].[TBAux]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectTBCombinationAll')
   BEGIN
       DROP  Procedure  usp_SelectTBCombinationAll
	END
GO

--region [dbo].[usp_SelectTBCombinationAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectTBCombinationAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectTBCombinationAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[StruCode],
	[FsCode],
	[Yefx],
	[FsName],
	[FSType],
	[TBType],
	[Unchecked],
	[UncheckedCeeJF],
	[UncheckedCeeDF],
	[UncheckedCFSData],
	[Checked],
	[CheckedCeeJF],
	[CheckedCeeDF],
	[CheckedCFSData],
	[PY1],
	[PY2],
	[PY3],
	[PY4],
	[PY5],
	[TBGrouping]
FROM
	[dbo].[TBCombination]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectTBCombinationDynamic')
   BEGIN
       DROP  Procedure  usp_SelectTBCombinationDynamic
	END
GO

--region [dbo].[usp_SelectTBCombinationDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectTBCombinationDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectTBCombinationDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[StruCode],
	[FsCode],
	[Yefx],
	[FsName],
	[FSType],
	[TBType],
	[Unchecked],
	[UncheckedCeeJF],
	[UncheckedCeeDF],
	[UncheckedCFSData],
	[Checked],
	[CheckedCeeJF],
	[CheckedCeeDF],
	[CheckedCFSData],
	[PY1],
	[PY2],
	[PY3],
	[PY4],
	[PY5],
	[TBGrouping]
FROM
	[dbo].[TBCombination]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectTBDetailAll')
   BEGIN
       DROP  Procedure  usp_SelectTBDetailAll
	END
GO
--region [dbo].[usp_SelectTBDetailAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectTBDetailAll]
-- Date Generated: 2018年10月12日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectTBDetailAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[ProjectID],
	[FSCode],
	[AccountCode],
	[AuxiliaryCode],
	[AccAuxName],
	[DataType],
	[TBGrouping],
	[TBType],
	[IsAccMx],
	[IsMx],
	[IsAux],
	[kmsx],
	[Yefx],
	[SourceFSCode],
	[Sqqmye],
	[Qqccgz],
	[jfje],
	[dfje],
	[CrjeJF],
	[CrjeDF],
	[AjeJF],
	[AjeDF],
	[RjeJF],
	[RjeDF],
	[TaxBase],
	[PY1],
	[jfje1],
	[dfje1],
	[jfje2],
	[dfje2]
FROM
	[dbo].[TBDetail]

--endregion

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectTBDetailDynamic')
   BEGIN
       DROP  Procedure  usp_SelectTBDetailDynamic
	END
GO
--region [dbo].[usp_SelectTBDetailDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectTBDetailDynamic]
-- Date Generated: 2018年10月12日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectTBDetailDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ID],
	[ProjectID],
	[FSCode],
	[AccountCode],
	[AuxiliaryCode],
	[AccAuxName],
	[DataType],
	[TBGrouping],
	[TBType],
	[IsAccMx],
	[IsMx],
	[IsAux],
	[kmsx],
	[Yefx],
	[SourceFSCode],
	[Sqqmye],
	[Qqccgz],
	[jfje],
	[dfje],
	[CrjeJF],
	[CrjeDF],
	[AjeJF],
	[AjeDF],
	[RjeJF],
	[RjeDF],
	[TaxBase],
	[PY1],
	[jfje1],
	[dfje1],
	[jfje2],
	[dfje2]
FROM
	[dbo].[TBDetail]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectTBDetailExtraAll')
   BEGIN
       DROP  Procedure  usp_SelectTBDetailExtraAll
	END
GO

--region [dbo].[usp_SelectTBDetailExtraAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectTBDetailExtraAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectTBDetailExtraAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[ProjectID],
	[ReferenceList],
	[SelectedSampleLebelYesNo],
	[MaterialityProgram],
	[SelectSampleMethod],
	[DrSelectedSampleLebelYesNo],
	[DrMaterialityProgram],
	[DrSelectSampleMethod],
	[CrSelectedSampleLebelYesNo],
	[CrMaterialityProgram],
	[CrSelectSampleMethod],
	[SampleSelectedYesNo],
	[SampleSelectedType],
	[ConsultBalance],
	[ConfirmBalance],
	[ConsultType],
	[RelatedClientID],
	[SampleSelecteStep],
	[ErrorYesNO],
	[StepofSample],
	[AdjustedNo],
	[AccountProperty],
	[Memo]
FROM
	[dbo].[TBDetailExtra]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectTBDetailExtraDynamic')
   BEGIN
       DROP  Procedure  usp_SelectTBDetailExtraDynamic
	END
GO

--region [dbo].[usp_SelectTBDetailExtraDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectTBDetailExtraDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectTBDetailExtraDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ID],
	[ProjectID],
	[ReferenceList],
	[SelectedSampleLebelYesNo],
	[MaterialityProgram],
	[SelectSampleMethod],
	[DrSelectedSampleLebelYesNo],
	[DrMaterialityProgram],
	[DrSelectSampleMethod],
	[CrSelectedSampleLebelYesNo],
	[CrMaterialityProgram],
	[CrSelectSampleMethod],
	[SampleSelectedYesNo],
	[SampleSelectedType],
	[ConsultBalance],
	[ConfirmBalance],
	[ConsultType],
	[RelatedClientID],
	[SampleSelecteStep],
	[ErrorYesNO],
	[StepofSample],
	[AdjustedNo],
	[AccountProperty],
	[Memo]
FROM
	[dbo].[TBDetailExtra]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectTBEliminationItemsAll')
   BEGIN
       DROP  Procedure  usp_SelectTBEliminationItemsAll
	END
GO

--region [dbo].[usp_SelectTBEliminationItemsAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectTBEliminationItemsAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectTBEliminationItemsAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[EliminationNO],
	[EliminationType],
	[RelatedProject1],
	[RelatedProject2],
	[EliminationDetails],
	[InterTransaction],
	[EliminationyesNo],
	[CreatorLogin],
	[CreatorName],
	[Createdtime]
FROM
	[dbo].[TBEliminationItems]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectTBEliminationItemsDynamic')
   BEGIN
       DROP  Procedure  usp_SelectTBEliminationItemsDynamic
	END
GO

--region [dbo].[usp_SelectTBEliminationItemsDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectTBEliminationItemsDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectTBEliminationItemsDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[EliminationNO],
	[EliminationType],
	[RelatedProject1],
	[RelatedProject2],
	[EliminationDetails],
	[InterTransaction],
	[EliminationyesNo],
	[CreatorLogin],
	[CreatorName],
	[Createdtime]
FROM
	[dbo].[TBEliminationItems]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectTBEliminationSubItemsAll')
   BEGIN
       DROP  Procedure  usp_SelectTBEliminationSubItemsAll
	END
GO

--region [dbo].[usp_SelectTBEliminationSubItemsAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectTBEliminationSubItemsAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectTBEliminationSubItemsAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[EliminationNO],
	[ID],
	[SortID],
	[EliminationPID],
	[FSCode],
	[FSName],
	[AccountCode],
	[AccountName],
	[AuxiliaryCode],
	[AuxiliaryName],
	[JD],
	[Unchecked],
	[Checked]
FROM
	[dbo].[TBEliminationSubItems]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectTBEliminationSubItemsDynamic')
   BEGIN
       DROP  Procedure  usp_SelectTBEliminationSubItemsDynamic
	END
GO

--region [dbo].[usp_SelectTBEliminationSubItemsDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectTBEliminationSubItemsDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectTBEliminationSubItemsDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[EliminationNO],
	[ID],
	[SortID],
	[EliminationPID],
	[FSCode],
	[FSName],
	[AccountCode],
	[AccountName],
	[AuxiliaryCode],
	[AuxiliaryName],
	[JD],
	[Unchecked],
	[Checked]
FROM
	[dbo].[TBEliminationSubItems]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectTBFSAll')
   BEGIN
       DROP  Procedure  usp_SelectTBFSAll
	END
GO

--region [dbo].[usp_SelectTBFSAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectTBFSAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectTBFSAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[FSCode],
	[FsName],
	[FSType],
	[TBType],
	[IsMx],
	[Kmsx],
	[Yefx],
	[TBGrouping],
	[Sqqmye],
	[Qqccgz],
	[jfje],
	[dfje],
	[CrjeJF],
	[CrjeDF],
	[AjeJF],
	[AjeDF],
	[RjeJF],
	[RjeDF],
	[TaxBase],
	[YearEarlier],
	[PY1],
	[PyTaxBase],
	[Random],
	[GrossPretax],
	[jfje1],
	[dfje1],
	[jfje2],
	[dfje2],
	[Memo]
FROM
	[dbo].[TBFS]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectTBFSDynamic')
   BEGIN
       DROP  Procedure  usp_SelectTBFSDynamic
	END
GO

--region [dbo].[usp_SelectTBFSDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectTBFSDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectTBFSDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[FSCode],
	[FsName],
	[FSType],
	[TBType],
	[IsMx],
	[Kmsx],
	[Yefx],
	[TBGrouping],
	[Sqqmye],
	[Qqccgz],
	[jfje],
	[dfje],
	[CrjeJF],
	[CrjeDF],
	[AjeJF],
	[AjeDF],
	[RjeJF],
	[RjeDF],
	[TaxBase],
	[YearEarlier],
	[PY1],
	[PyTaxBase],
	[Random],
	[GrossPretax],
	[jfje1],
	[dfje1],
	[jfje2],
	[dfje2],
	[Memo]
FROM
	[dbo].[TBFS]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectTBVoucherAll')
   BEGIN
       DROP  Procedure  usp_SelectTBVoucherAll
	END
GO

--region [dbo].[usp_SelectTBVoucherAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectTBVoucherAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectTBVoucherAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[VoucherID],
	[Clientid],
	[ProjectID],
	[IncNo],
	[Date],
	[Period],
	[Pzlx],
	[Pzh],
	[Djh],
	[AccountCode],
	[ProjectCode],
	[Zy],
	[Jfje],
	[Dfje],
	[Jfsl],
	[Dfsl],
	[ZDR],
	[dfkm],
	[Jd],
	[Fsje],
	[Wbdm],
	[Wbje],
	[Hl],
	[FLLX],
	[SampleSelectedYesNo],
	[SampleSelectedType],
	[TBGrouping],
	[EASREF],
	[AccountingAge],
	[qmyegc],
	[Stepofsample],
	[ErrorYesNo],
	[FDetailID]
FROM
	[dbo].[TBVoucher]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectTBVoucherDynamic')
   BEGIN
       DROP  Procedure  usp_SelectTBVoucherDynamic
	END
GO

--region [dbo].[usp_SelectTBVoucherDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectTBVoucherDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectTBVoucherDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[VoucherID],
	[Clientid],
	[ProjectID],
	[IncNo],
	[Date],
	[Period],
	[Pzlx],
	[Pzh],
	[Djh],
	[AccountCode],
	[ProjectCode],
	[Zy],
	[Jfje],
	[Dfje],
	[Jfsl],
	[Dfsl],
	[ZDR],
	[dfkm],
	[Jd],
	[Fsje],
	[Wbdm],
	[Wbje],
	[Hl],
	[FLLX],
	[SampleSelectedYesNo],
	[SampleSelectedType],
	[TBGrouping],
	[EASREF],
	[AccountingAge],
	[qmyegc],
	[Stepofsample],
	[ErrorYesNo],
	[FDetailID]
FROM
	[dbo].[TBVoucher]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectTBWlhzAll')
   BEGIN
       DROP  Procedure  usp_SelectTBWlhzAll
	END
GO

--region [dbo].[usp_SelectTBWlhzAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   HUASHENG using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectTBWlhzAll]
-- Date Generated: 2019年1月2日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectTBWlhzAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[ID],
	[HZNumber],
	[HZSortID],
	[AccountName],
	[OtherMatters],
	[ConsultDate],
	[ConfirmDate],
	[PostCode],
	[PostAddress],
	[Recipient],
	[sample],
	[Sendletter],
	[Reason]
FROM
	[dbo].[TBWlhz]

--endregion


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectTBWlhzDynamic')
   BEGIN
       DROP  Procedure  usp_SelectTBWlhzDynamic
	END
GO

--region [dbo].[usp_SelectTBWlhzDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   HUASHENG using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectTBWlhzDynamic]
-- Date Generated: 2019年1月2日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectTBWlhzDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[ID],
	[HZNumber],
	[HZSortID],
	[AccountName],
	[OtherMatters],
	[ConsultDate],
	[ConfirmDate],
	[PostCode],
	[PostAddress],
	[Recipient],
	[sample],
	[Sendletter],
	[Reason]
FROM
	[dbo].[TBWlhz]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectTbwlzlAll')
   BEGIN
       DROP  Procedure  usp_SelectTbwlzlAll
	END
GO

--region [dbo].[usp_SelectTbwlzlAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectTbwlzlAll]
-- Date Generated: 2018年8月18日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectTbwlzlAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[ProjectID],
	[fsCode],
	[AccountCode],
	[AuxiliaryCode],
	[AgeAnalysis],
	[ZLD1],
	[ZLD2],
	[ZLD3],
	[ZLD4],
	[ZLD5],
	[ZLD6],
	[ZLD7],
	[ZLD8],
	[ZLD9],
	[significant],
	[Impairmenttestmethod],
	[impairmentamount],
	[BalanceAnalysis],
	[memo],
	[HZZBZLD1],
	[HZZBZLD2],
	[HZZBZLD3],
	[HZZBZLD4],
	[HZZBZLD5],
	[HZZBZLD6],
	[HZZBZLD7],
	[HZZBZLD8],
	[HZZBZLD9],
	[Creditperiod]
FROM
	[dbo].[Tbwlzl]

--endregion



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectTbwlzlDynamic')
   BEGIN
       DROP  Procedure  usp_SelectTbwlzlDynamic
	END
GO

--region [dbo].[usp_SelectTbwlzlDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectTbwlzlDynamic]
-- Date Generated: 2018年8月18日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectTbwlzlDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ID],
	[ProjectID],
	[fsCode],
	[AccountCode],
	[AuxiliaryCode],
	[AgeAnalysis],
	[ZLD1],
	[ZLD2],
	[ZLD3],
	[ZLD4],
	[ZLD5],
	[ZLD6],
	[ZLD7],
	[ZLD8],
	[ZLD9],
	[significant],
	[Impairmenttestmethod],
	[impairmentamount],
	[BalanceAnalysis],
	[memo],
	[HZZBZLD1],
	[HZZBZLD2],
	[HZZBZLD3],
	[HZZBZLD4],
	[HZZBZLD5],
	[HZZBZLD6],
	[HZZBZLD7],
	[HZZBZLD8],
	[HZZBZLD9],
	[Creditperiod]
FROM
	[dbo].[Tbwlzl]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectWlhzandTBAll')
   BEGIN
       DROP  Procedure  usp_SelectWlhzandTBAll
	END
GO

--region [dbo].[usp_SelectWlhzandTBAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectWlhzandTBAll]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectWlhzandTBAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProjectID],
	[ID],
	[WlhzID],
	[FSCode],
	[AccountCode],
	[AuxiliaryCode],
	[AccountName],
	[Sendletteryesno]
FROM
	[dbo].[WlhzandTB]

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_SelectWlhzandTBDynamic')
   BEGIN
       DROP  Procedure  usp_SelectWlhzandTBDynamic
	END
GO

--region [dbo].[usp_SelectWlhzandTBDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_SelectWlhzandTBDynamic]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_SelectWlhzandTBDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProjectID],
	[ID],
	[WlhzID],
	[FSCode],
	[AccountCode],
	[AuxiliaryCode],
	[AccountName],
	[Sendletteryesno]
FROM
	[dbo].[WlhzandTB]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateACCOUNT')
   BEGIN
       DROP  Procedure  usp_UpdateACCOUNT
	END
GO

--region [dbo].[usp_UpdateACCOUNT]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateACCOUNT]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateACCOUNT]
	@ProjectID varchar(100),
	@AccountCode varchar(255),
	@UpperCode varchar(255),
	@AccountName varchar(1000),
	@Attribute int,
	@Jd int,
	@Hsxms int,
	@TypeCode varchar(255),
	@Jb int,
	@IsMx int,
	@Ncye decimal(20, 2),
	@Qqccgz decimal(20, 2),
	@Jfje decimal(20, 2),
	@Dfje decimal(20, 2),
	@Ncsl int,
	@Syjz int
AS

SET NOCOUNT ON

UPDATE [dbo].[ACCOUNT] SET
	[UpperCode] = @UpperCode,
	[AccountName] = @AccountName,
	[Attribute] = @Attribute,
	[Jd] = @Jd,
	[Hsxms] = @Hsxms,
	[TypeCode] = @TypeCode,
	[Jb] = @Jb,
	[IsMx] = @IsMx,
	[Ncye] = @Ncye,
	[Qqccgz] = @Qqccgz,
	[Jfje] = @Jfje,
	[Dfje] = @Dfje,
	[Ncsl] = @Ncsl,
	[Syjz] = @Syjz
WHERE
	[ProjectID] = @ProjectID
	AND [AccountCode] = @AccountCode

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateAccountingAgeOfFscode')
   BEGIN
       DROP  Procedure  usp_UpdateAccountingAgeOfFscode
	END
GO

--region [dbo].[usp_UpdateAccountingAgeOfFscode]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateAccountingAgeOfFscode]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateAccountingAgeOfFscode]
	@ProjectID varchar(100),
	@ID int,
	@ORDER varchar(50),
	@FSCode varchar(50),
	@FIELDNAME varchar(50),
	@FIELDTEXT varchar(50),
	@AGEMINIMUM int,
	@AGECEILING int,
	@BADDEBTRATE float,
	@SAMPLING bit,
	@ApplyYesno int
AS

SET NOCOUNT ON

UPDATE [dbo].[AccountingAgeOfFscode] SET
	[ORDER] = @ORDER,
	[FSCode] = @FSCode,
	[FIELDNAME] = @FIELDNAME,
	[FIELDTEXT] = @FIELDTEXT,
	[AGEMINIMUM] = @AGEMINIMUM,
	[AGECEILING] = @AGECEILING,
	[BADDEBTRATE] = @BADDEBTRATE,
	[SAMPLING] = @SAMPLING,
	[ApplyYesno] = @ApplyYesno
WHERE
	[ProjectID] = @ProjectID
	AND [ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateAccountingPolicies')
   BEGIN
       DROP  Procedure  usp_UpdateAccountingPolicies
	END
GO

--region [dbo].[usp_UpdateAccountingPolicies]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateAccountingPolicies]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateAccountingPolicies]
	@ProjectID varchar(100),
	@ID int,
	@UpperID varchar(50),
	@PoliciesID varchar(50),
	@Order int,
	@Policies varchar(50),
	@ClientPolicies nvarchar(4000),
	@PoliciesEvaluation text,
	@Change int,
	@OldPolicies text,
	@ChangeDate datetime,
	@ChangeReasons text,
	@ChangeResults text,
	@ChangeEvaluation text
AS

SET NOCOUNT ON

UPDATE [dbo].[AccountingPolicies] SET
	[UpperID] = @UpperID,
	[PoliciesID] = @PoliciesID,
	[Order] = @Order,
	[Policies] = @Policies,
	[ClientPolicies] = @ClientPolicies,
	[PoliciesEvaluation] = @PoliciesEvaluation,
	[Change] = @Change,
	[OldPolicies] = @OldPolicies,
	[ChangeDate] = @ChangeDate,
	[ChangeReasons] = @ChangeReasons,
	[ChangeResults] = @ChangeResults,
	[ChangeEvaluation] = @ChangeEvaluation
WHERE
	[ProjectID] = @ProjectID
	AND [ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_Updateaccountperiod')
   BEGIN
       DROP  Procedure  usp_Updateaccountperiod
	END
GO

--region [dbo].[usp_Updateaccountperiod]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_Updateaccountperiod]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_Updateaccountperiod]
	@ProjectID varchar(100),
	@accountperiod int,
	@Period int,
	@StartDate datetime,
	@EndDate datetime,
	@DateType int,
	@CurrentyearPID varchar(100)
AS

SET NOCOUNT ON

UPDATE [dbo].[accountperiod] SET
	[Period] = @Period,
	[StartDate] = @StartDate,
	[EndDate] = @EndDate,
	[DateType] = @DateType,
	[CurrentyearPID] = @CurrentyearPID
WHERE
	[ProjectID] = @ProjectID
	AND [accountperiod] = @accountperiod

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateAccountQues')
   BEGIN
       DROP  Procedure  usp_UpdateAccountQues
	END
GO

--region [dbo].[usp_UpdateAccountQues]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateAccountQues]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateAccountQues]
	@ID int,
	@ProjectID varchar(100),
	@AccountCode varchar(50),
	@QuesID varchar(50),
	@QuesDescription nvarchar(2000),
	@SelectedYesNo int,
	@AuditProgramCode varchar(50),
	@QuestionType bit,
	@MutexQuesIDs varchar(100)
AS

SET NOCOUNT ON

UPDATE [dbo].[AccountQues] SET
	[ProjectID] = @ProjectID,
	[AccountCode] = @AccountCode,
	[QuesID] = @QuesID,
	[QuesDescription] = @QuesDescription,
	[SelectedYesNo] = @SelectedYesNo,
	[AuditProgramCode] = @AuditProgramCode,
	[QuestionType] = @QuestionType,
	[MutexQuesIDs] = @MutexQuesIDs
WHERE
	[ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateAnnounce')
   BEGIN
       DROP  Procedure  usp_UpdateAnnounce
	END
GO

--region [dbo].[usp_UpdateAnnounce]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateAnnounce]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateAnnounce]
	@ID int,
	@ProjectID varchar(100),
	@StruCode nvarchar(50),
	@AnnounceContent text,
	@RoleName nvarchar(50),
	@LoginName nvarchar(50),
	@SignOffTime datetime,
	@SignOffSequence int
AS

SET NOCOUNT ON

UPDATE [dbo].[Announce] SET
	[ProjectID] = @ProjectID,
	[StruCode] = @StruCode,
	[AnnounceContent] = @AnnounceContent,
	[RoleName] = @RoleName,
	[LoginName] = @LoginName,
	[SignOffTime] = @SignOffTime,
	[SignOffSequence] = @SignOffSequence
WHERE
	[ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateAuditGoalandCognizance')
   BEGIN
       DROP  Procedure  usp_UpdateAuditGoalandCognizance
	END
GO

--region [dbo].[usp_UpdateAuditGoalandCognizance]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateAuditGoalandCognizance]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateAuditGoalandCognizance]
	@ProjectID varchar(100),
	@ClassCode varchar(50),
	@AuditGoalCode varchar(50),
	@AuditGoalName nvarchar(1000),
	@Cognizance varchar(50)
AS

SET NOCOUNT ON

UPDATE [dbo].[AuditGoalandCognizance] SET
	[AuditGoalName] = @AuditGoalName,
	[Cognizance] = @Cognizance
WHERE
	[ProjectID] = @ProjectID
	AND [ClassCode] = @ClassCode
	AND [AuditGoalCode] = @AuditGoalCode

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateAuditProgramConfig')
   BEGIN
       DROP  Procedure  usp_UpdateAuditProgramConfig
	END
GO

--region [dbo].[usp_UpdateAuditProgramConfig]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateAuditProgramConfig]
-- Date Generated: 2018年9月5日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateAuditProgramConfig]
	@ProjectID varchar(100),
	@AuditProgramCode varchar(50),
	@FSCodeOrCycleCode varchar(50),
	@SortID int,
	@AuditGoalCode varchar(50),
	@Category int,
	@ApplyYesNo int,
	@ProgramLevel int,
	@QuesID varchar(50),
	@SelectedYesNo int,
	@SelectedReason varchar(1000)
AS

SET NOCOUNT ON

UPDATE [dbo].[AuditProgramConfig] SET
	[SortID] = @SortID,
	[AuditGoalCode] = @AuditGoalCode,
	[Category] = @Category,
	[ApplyYesNo] = @ApplyYesNo,
	[ProgramLevel] = @ProgramLevel,
	[QuesID] = @QuesID,
	[SelectedYesNo] = @SelectedYesNo,
	[SelectedReason] = @SelectedReason
WHERE
	[ProjectID] = @ProjectID
	AND [FSCodeOrCycleCode] = @FSCodeOrCycleCode
	AND [AuditProgramCode] = @AuditProgramCode

--endregion



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateAuditProgramFile')
   BEGIN
       DROP  Procedure  usp_UpdateAuditProgramFile
	END
GO
--region [dbo].[usp_UpdateAuditProgramFile]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateAuditProgramFile]
-- Date Generated: 2018年9月3日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateAuditProgramFile]
	@ID varchar(50),
	@ProjectID varchar(100),
	@AuditProgramCode varchar(50),
	@FSCodeOrCycleCode varchar(50),
	@StruCode varchar(128)
AS

SET NOCOUNT ON

UPDATE [dbo].[AuditProgramFile] SET
	[ProjectID] = @ProjectID,
	[AuditProgramCode] = @AuditProgramCode,
	[FSCodeOrCycleCode] = @FSCodeOrCycleCode,
	[StruCode] = @StruCode
WHERE
	[ID] = @ID

--endregion

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateAuditProgramForm')
   BEGIN
       DROP  Procedure  usp_UpdateAuditProgramForm
	END
GO
--region [dbo].[usp_UpdateAuditProgramForm]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateAuditProgramForm]
-- Date Generated: 2018年9月17日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateAuditProgramForm]
	@ProjectID varchar(100),
	@AuditProgramCode varchar(50),
	@SortID int,
	@Title varchar(100),
	@AssemblyID varchar(50)
AS

SET NOCOUNT ON

UPDATE [dbo].[AuditProgramForm] SET
	[Title] = @Title,
	[AssemblyID] = @AssemblyID
WHERE
	[ProjectID] = @ProjectID
	AND [AuditProgramCode] = @AuditProgramCode
	AND [SortID] = @SortID

--endregion

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateAuditProgramLibrary')
   BEGIN
       DROP  Procedure  usp_UpdateAuditProgramLibrary
	END
GO
--region [dbo].[usp_UpdateAuditProgramLibrary]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateAuditProgramLibrary]
-- Date Generated: 2018年10月29日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateAuditProgramLibrary]
	@ProjectID varchar(100),
	@AuditProgramCode varchar(50),
	@AuditProgramTitle varchar(500),
	@AuditProgramName varchar(1000),
	@AuditProgramGuideline nvarchar(3000),
	@StageCode varchar(50),
	@MenuID int,
	@UpperProgramCode varchar(50)
AS

SET NOCOUNT ON

UPDATE [dbo].[AuditProgramLibrary] SET
	[AuditProgramTitle] = @AuditProgramTitle,
	[AuditProgramName] = @AuditProgramName,
	[AuditProgramGuideline] = @AuditProgramGuideline,
	[StageCode] = @StageCode,
	[MenuID] = @MenuID,
	[UpperProgramCode] = @UpperProgramCode
WHERE
	[ProjectID] = @ProjectID
	AND [AuditProgramCode] = @AuditProgramCode

--endregion
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateAuditProgramLibrary1')
   BEGIN
       DROP  Procedure  usp_UpdateAuditProgramLibrary1
	END
GO

--region [dbo].[usp_UpdateAuditProgramLibrary1]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateAuditProgramLibrary1]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateAuditProgramLibrary1]
	@ProjectID varchar(100),
	@AccountCode varchar(50),
	@AuditProgramCode varchar(50),
	@SortID int,
	@AuditGoalCode varchar(50),
	@AuditProgramName varchar(1000),
	@AuditProgramGuideline nvarchar(3000),
	@Category int,
	@ApplyYesNo int,
	@ProgramLevel int,
	@SelectedYesNo int,
	@IndexNo varchar(3500),
	@Preparer varchar(2000),
	@PreparerName varchar(2000)
AS

SET NOCOUNT ON

UPDATE [dbo].[AuditProgramLibrary1] SET
	[SortID] = @SortID,
	[AuditGoalCode] = @AuditGoalCode,
	[AuditProgramName] = @AuditProgramName,
	[AuditProgramGuideline] = @AuditProgramGuideline,
	[Category] = @Category,
	[ApplyYesNo] = @ApplyYesNo,
	[ProgramLevel] = @ProgramLevel,
	[SelectedYesNo] = @SelectedYesNo,
	[IndexNo] = @IndexNo,
	[Preparer] = @Preparer,
	[PreparerName] = @PreparerName
WHERE
	[ProjectID] = @ProjectID
	AND [AccountCode] = @AccountCode
	AND [AuditProgramCode] = @AuditProgramCode

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateBActivitiesAndCGoal')
   BEGIN
       DROP  Procedure  usp_UpdateBActivitiesAndCGoal
	END
GO

--region [dbo].[usp_UpdateBActivitiesAndCGoal]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateBActivitiesAndCGoal]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateBActivitiesAndCGoal]
	@ProjectID varchar(100),
	@CGoalID varchar(50),
	@BActivitiesID varchar(50),
	@CGoalName varchar(50),
	@CControlPointIDs text,
	@AccountandCode text,
	@RealtedCognizance varchar(50),
	@CCActivities text,
	@ControTestProgram text,
	@ControlFrequence varchar(50),
	@SampleCount int,
	@Memo text,
	@RelationLevel int,
	@SelectedYesNO bit,
	@ACActivities text,
	@EfficiencyYesNo bit,
	@ExecutedYesNo bit,
	@EEfficiencyYesNo bit,
	@SupportingYesNo bit,
	@RelatedAccountandCognizance text
AS

SET NOCOUNT ON

UPDATE [dbo].[BActivitiesAndCGoal] SET
	[CGoalName] = @CGoalName,
	[CControlPointIDs] = @CControlPointIDs,
	[AccountandCode] = @AccountandCode,
	[RealtedCognizance] = @RealtedCognizance,
	[CCActivities] = @CCActivities,
	[ControTestProgram] = @ControTestProgram,
	[ControlFrequence] = @ControlFrequence,
	[SampleCount] = @SampleCount,
	[Memo] = @Memo,
	[RelationLevel] = @RelationLevel,
	[SelectedYesNO] = @SelectedYesNO,
	[ACActivities] = @ACActivities,
	[EfficiencyYesNo] = @EfficiencyYesNo,
	[ExecutedYesNo] = @ExecutedYesNo,
	[EEfficiencyYesNo] = @EEfficiencyYesNo,
	[SupportingYesNo] = @SupportingYesNo,
	[RelatedAccountandCognizance] = @RelatedAccountandCognizance
WHERE
	[ProjectID] = @ProjectID
	AND [CGoalID] = @CGoalID
	AND [BActivitiesID] = @BActivitiesID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateBankAcceptBill')
   BEGIN
       DROP  Procedure  usp_UpdateBankAcceptBill
	END
GO

--region [dbo].[usp_UpdateBankAcceptBill]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   HUASHENG using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateBankAcceptBill]
-- Date Generated: 2018年11月22日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateBankAcceptBill]
	@ID varchar(100),
	@ProjectID varchar(100),
	@BankID varchar(100),
	@BankName varchar(100),
	@AcceptBillNum varchar(100),
	@AcceptBankName varchar(100),
	@AccountName varchar(100),
	@AcceptMoney decimal(20, 2),
	@BeginDate datetime,
	@EndDate datetime
AS

SET NOCOUNT ON

UPDATE [dbo].[BankAcceptBill] SET
	[ProjectID] = @ProjectID,
	[BankID] = @BankID,
	[BankName] = @BankName,
	[AcceptBillNum] = @AcceptBillNum,
	[AcceptBankName] = @AcceptBankName,
	[AccountName] = @AccountName,
	[AcceptMoney] = @AcceptMoney,
	[BeginDate] = @BeginDate,
	[EndDate] = @EndDate
WHERE
	[ID] = @ID

--endregion


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateBankAccount')
   BEGIN
       DROP  Procedure  usp_UpdateBankAccount
	END
GO
CREATE PROCEDURE [dbo].[usp_UpdateBankAccount]
	@ID varchar(100),
	@ProjectID varchar(100),
	@BankID varchar(100),
	@BankName varchar(100),
	@AccountName varchar(100),
	@BankNum varchar(100),
	@Currency varchar(50),
	@Rate varchar(50),
	@AccountType varchar(100),
	@Balance decimal(20, 2),
	@BeginEndDate varchar(50),
	@Explain varchar(100),
	@Remark varchar(1000)
AS

SET NOCOUNT ON

UPDATE [dbo].[BankAccount] SET
	[ProjectID] = @ProjectID,
	[BankID] = @BankID,
	[BankName] = @BankName,
	[AccountName] = @AccountName,
	[BankNum] = @BankNum,
	[Currency] = @Currency,
	[Rate] = @Rate,
	[AccountType] = @AccountType,
	[Balance] = @Balance,
	[BeginEndDate] = @BeginEndDate,
	[Explain] = @Explain,
	[Remark] = @Remark
WHERE
	[ID] = @ID

--endregion
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateBankBorrow')
   BEGIN
       DROP  Procedure  usp_UpdateBankBorrow
	END
GO
CREATE PROCEDURE [dbo].[usp_UpdateBankBorrow]
	@ID varchar(100),
	@ProjectID varchar(100),
	@BankID varchar(100),
	@BankName varchar(100),
	@BorrowName varchar(100),
	@BankNum varchar(100),
	@Currency varchar(50),
	@Balance decimal(20, 2),
	@BorrowDate datetime,
	@BecomeDate datetime,
	@Rate varchar(50),
	@AssureName varchar(100),
	@Remark varchar(1000)
AS

SET NOCOUNT ON

UPDATE [dbo].[BankBorrow] SET
	[ProjectID] = @ProjectID,
	[BankID] = @BankID,
	[BankName] = @BankName,
	[BorrowName] = @BorrowName,
	[BankNum] = @BankNum,
	[Currency] = @Currency,
	[Balance] = @Balance,
	[BorrowDate] = @BorrowDate,
	[BecomeDate] = @BecomeDate,
	[Rate] = @Rate,
	[AssureName] = @AssureName,
	[Remark] = @Remark
WHERE
	[ID] = @ID

--endregion



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateBankInfo')
   BEGIN
       DROP  Procedure  usp_UpdateBankInfo
	END
GO

--region [dbo].[usp_UpdateBankInfo]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   HUASHENG using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateBankInfo]
-- Date Generated: 2019年1月2日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateBankInfo]
	@ID varchar(100),
	@ProjectID varchar(100),
	@BankName varchar(100),
	@EndDate datetime,
	@HZNumber varchar(100),
	@HZSortID varchar(10),
	@Remark varchar(1000)
AS

SET NOCOUNT ON

UPDATE [dbo].[BankInfo] SET
	[ProjectID] = @ProjectID,
	[BankName] = @BankName,
	[EndDate] = @EndDate,
	[HZNumber] = @HZNumber,
	[HZSortID] = @HZSortID,
	[Remark] = @Remark
WHERE
	[ID] = @ID

--endregion


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateBankUnsubscribe')
   BEGIN
       DROP  Procedure  usp_UpdateBankUnsubscribe
	END
GO

--region [dbo].[usp_UpdateBankUnsubscribe]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   HUASHENG using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateBankUnsubscribe]
-- Date Generated: 2018年11月22日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateBankUnsubscribe]
	@ID varchar(100),
	@ProjectID varchar(100),
	@BankID varchar(100),
	@BankName varchar(100),
	@AccountName varchar(100),
	@BankNum varchar(100),
	@Currency varchar(50),
	@UnsubscribeDate datetime
AS

SET NOCOUNT ON

UPDATE [dbo].[BankUnsubscribe] SET
	[ProjectID] = @ProjectID,
	[BankID] = @BankID,
	[BankName] = @BankName,
	[AccountName] = @AccountName,
	[BankNum] = @BankNum,
	[Currency] = @Currency,
	[UnsubscribeDate] = @UnsubscribeDate
WHERE
	[ID] = @ID

--endregion


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateBCycleAndAccounts')
   BEGIN
       DROP  Procedure  usp_UpdateBCycleAndAccounts
	END
GO

--region [dbo].[usp_UpdateBCycleAndAccounts]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateBCycleAndAccounts]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateBCycleAndAccounts]
	@ProjectID varchar(100),
	@BusinessCycleID varchar(50),
	@AccountID varchar(50),
	@AccountName varchar(50),
	@Memo text,
	@SelectedYesNO bit
AS

SET NOCOUNT ON

UPDATE [dbo].[BCycleAndAccounts] SET
	[AccountName] = @AccountName,
	[Memo] = @Memo,
	[SelectedYesNO] = @SelectedYesNO
WHERE
	[ProjectID] = @ProjectID
	AND [BusinessCycleID] = @BusinessCycleID
	AND [AccountID] = @AccountID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateBCycleAndBActivities')
   BEGIN
       DROP  Procedure  usp_UpdateBCycleAndBActivities
	END
GO

--region [dbo].[usp_UpdateBCycleAndBActivities]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateBCycleAndBActivities]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateBCycleAndBActivities]
	@ProjectID varchar(100),
	@BusinessCycleID varchar(50),
	@BActivitiesID varchar(50),
	@BActivitiesName varchar(50),
	@Memo text,
	@RelationLevel int,
	@SelectedYesNO bit,
	@UnSelectedReason text
AS

SET NOCOUNT ON

UPDATE [dbo].[BCycleAndBActivities] SET
	[BActivitiesName] = @BActivitiesName,
	[Memo] = @Memo,
	[RelationLevel] = @RelationLevel,
	[SelectedYesNO] = @SelectedYesNO,
	[UnSelectedReason] = @UnSelectedReason
WHERE
	[ProjectID] = @ProjectID
	AND [BusinessCycleID] = @BusinessCycleID
	AND [BActivitiesID] = @BActivitiesID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateBusinessCycle')
   BEGIN
       DROP  Procedure  usp_UpdateBusinessCycle
	END
GO

--region [dbo].[usp_UpdateBusinessCycle]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateBusinessCycle]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateBusinessCycle]
	@ProjectID varchar(100),
	@BusinessCycleID varchar(50),
	@BusinessCycleName varchar(50),
	@Memo text,
	@FileCodeFor15000 varchar(50),
	@FileCodeFor40000 varchar(50),
	@LastExecutedYear int,
	@ExecutedYesNo bit,
	@NextExecutedYear int,
	@TotalInitialConslusion int
AS

SET NOCOUNT ON

UPDATE [dbo].[BusinessCycle] SET
	[BusinessCycleName] = @BusinessCycleName,
	[Memo] = @Memo,
	[FileCodeFor15000] = @FileCodeFor15000,
	[FileCodeFor40000] = @FileCodeFor40000,
	[LastExecutedYear] = @LastExecutedYear,
	[ExecutedYesNo] = @ExecutedYesNo,
	[NextExecutedYear] = @NextExecutedYear,
	[TotalInitialConslusion] = @TotalInitialConslusion
WHERE
	[ProjectID] = @ProjectID
	AND [BusinessCycleID] = @BusinessCycleID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateClientMaintainProposed')
   BEGIN
       DROP  Procedure  usp_UpdateClientMaintainProposed
	END
GO

--region [dbo].[usp_UpdateClientMaintainProposed]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateClientMaintainProposed]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateClientMaintainProposed]
	@ProjectID varchar(100),
	@ID int,
	@UpperID int,
	@ConsiderElement text,
	@Existence bit,
	@IsTitle bit
AS

SET NOCOUNT ON

UPDATE [dbo].[ClientMaintainProposed] SET
	[UpperID] = @UpperID,
	[ConsiderElement] = @ConsiderElement,
	[Existence] = @Existence,
	[IsTitle] = @IsTitle
WHERE
	[ProjectID] = @ProjectID
	AND [ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateCombinationChangedReason')
   BEGIN
       DROP  Procedure  usp_UpdateCombinationChangedReason
	END
GO

--region [dbo].[usp_UpdateCombinationChangedReason]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateCombinationChangedReason]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateCombinationChangedReason]
	@GUID varchar(50),
	@ProjectID varchar(50),
	@StruCode varchar(50),
	@ComPID varchar(50),
	@ChangeReason varchar(max)
AS

SET NOCOUNT ON

UPDATE [dbo].[CombinationChangedReason] SET
	[ProjectID] = @ProjectID,
	[StruCode] = @StruCode,
	[ComPID] = @ComPID,
	[ChangeReason] = @ChangeReason
WHERE
	[GUID] = @GUID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateCombinationList')
   BEGIN
       DROP  Procedure  usp_UpdateCombinationList
	END
GO

--region [dbo].[usp_UpdateCombinationList]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateCombinationList]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateCombinationList]
	@ProjectID varchar(50),
	@ComCode varchar(50),
	@ComName varchar(500)
AS

SET NOCOUNT ON

UPDATE [dbo].[CombinationList] SET
	[ComName] = @ComName
WHERE
	[ProjectID] = @ProjectID
	AND [ComCode] = @ComCode

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateCombinationRange')
   BEGIN
       DROP  Procedure  usp_UpdateCombinationRange
	END
GO

--region [dbo].[usp_UpdateCombinationRange]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateCombinationRange]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateCombinationRange]
	@GUID varchar(50),
	@ProjectID varchar(50),
	@StruCode varchar(50),
	@ComPID varchar(50),
	@IsForeign int,
	@Rate decimal(10, 4),
	@ComTime datetime
AS

SET NOCOUNT ON

UPDATE [dbo].[CombinationRange] SET
	[ProjectID] = @ProjectID,
	[StruCode] = @StruCode,
	[ComPID] = @ComPID,
	[IsForeign] = @IsForeign,
	[Rate] = @Rate,
	[ComTime] = @ComTime
WHERE
	[GUID] = @GUID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateCommunication')
   BEGIN
       DROP  Procedure  usp_UpdateCommunication
	END
GO

--region [dbo].[usp_UpdateCommunication]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateCommunication]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateCommunication]
	@ID int,
	@ProjectID varchar(100),
	@StruCode nvarchar(50),
	@CommunicationTargets int,
	@CommunicationContent text,
	@ReferenceList nvarchar(50)
AS

SET NOCOUNT ON

UPDATE [dbo].[Communication] SET
	[ProjectID] = @ProjectID,
	[StruCode] = @StruCode,
	[CommunicationTargets] = @CommunicationTargets,
	[CommunicationContent] = @CommunicationContent,
	[ReferenceList] = @ReferenceList
WHERE
	[ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateComNoteData')
   BEGIN
       DROP  Procedure  usp_UpdateComNoteData
	END
GO

--region [dbo].[usp_UpdateComNoteData]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateComNoteData]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateComNoteData]
	@GUID varchar(50),
	@ProjectID varchar(50),
	@StruCode varchar(255),
	@FormCode varchar(50),
	@NoteCode varchar(100),
	@Bth nvarchar(255),
	@CheckData decimal(20, 2)
AS

SET NOCOUNT ON

UPDATE [dbo].[ComNoteData] SET
	[ProjectID] = @ProjectID,
	[StruCode] = @StruCode,
	[FormCode] = @FormCode,
	[NoteCode] = @NoteCode,
	[Bth] = @Bth,
	[CheckData] = @CheckData
WHERE
	[GUID] = @GUID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateComNoteDataDetail')
   BEGIN
       DROP  Procedure  usp_UpdateComNoteDataDetail
	END
GO

--region [dbo].[usp_UpdateComNoteDataDetail]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateComNoteDataDetail]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateComNoteDataDetail]
	@GUID varchar(50),
	@UpperGUID varchar(50),
	@ProjectID varchar(50),
	@StruCode varchar(255),
	@ComProjectID varchar(255),
	@FormCode varchar(50),
	@NoteCode varchar(100),
	@ColumnCode varchar(50),
	@NumberField decimal(20, 2),
	@TextField nvarchar(255),
	@DateField datetime
AS

SET NOCOUNT ON

UPDATE [dbo].[ComNoteDataDetail] SET
	[UpperGUID] = @UpperGUID,
	[ProjectID] = @ProjectID,
	[StruCode] = @StruCode,
	[ComProjectID] = @ComProjectID,
	[FormCode] = @FormCode,
	[NoteCode] = @NoteCode,
	[ColumnCode] = @ColumnCode,
	[NumberField] = @NumberField,
	[TextField] = @TextField,
	[DateField] = @DateField
WHERE
	[GUID] = @GUID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateComNoteMemo')
   BEGIN
       DROP  Procedure  usp_UpdateComNoteMemo
	END
GO

--region [dbo].[usp_UpdateComNoteMemo]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateComNoteMemo]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateComNoteMemo]
	@ProjectID varchar(50),
	@StruCode varchar(100),
	@FSCode varchar(100),
	@FormCode varchar(50),
	@Memo nvarchar(4000),
	@memohelp varchar(max)
AS

SET NOCOUNT ON

UPDATE [dbo].[ComNoteMemo] SET
	[FSCode] = @FSCode,
	[Memo] = @Memo,
	[memohelp] = @memohelp
WHERE
	[ProjectID] = @ProjectID
	AND [StruCode] = @StruCode
	AND [FormCode] = @FormCode

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateContentofSampleTest')
   BEGIN
       DROP  Procedure  usp_UpdateContentofSampleTest
	END
GO

--region [dbo].[usp_UpdateContentofSampleTest]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateContentofSampleTest]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateContentofSampleTest]
	@ProjectID varchar(100),
	@FSCode varchar(50),
	@FunctionType varchar(10),
	@contentID int,
	@recordtype int,
	@Fieldname varchar(50),
	@Display int
AS

SET NOCOUNT ON

UPDATE [dbo].[ContentofSampleTest] SET
	[recordtype] = @recordtype,
	[Fieldname] = @Fieldname,
	[Display] = @Display
WHERE
	[ProjectID] = @ProjectID
	AND [FSCode] = @FSCode
	AND [FunctionType] = @FunctionType
	AND [contentID] = @contentID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateContentofsampleTestInfo')
   BEGIN
       DROP  Procedure  usp_UpdateContentofsampleTestInfo
	END
GO

--region [dbo].[usp_UpdateContentofsampleTestInfo]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateContentofsampleTestInfo]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateContentofsampleTestInfo]
	@ProjectID varchar(100),
	@FSCode varchar(50),
	@contentID int,
	@FunctionType varchar(10),
	@recordtype int,
	@NumberofAE int,
	@DateofAE int,
	@AmountofAE int,
	@QuantityofAE int,
	@AuditEvidence int,
	@copyofEvidence int
AS

SET NOCOUNT ON

UPDATE [dbo].[ContentofsampleTestInfo] SET
	[recordtype] = @recordtype,
	[NumberofAE] = @NumberofAE,
	[DateofAE] = @DateofAE,
	[AmountofAE] = @AmountofAE,
	[QuantityofAE] = @QuantityofAE,
	[AuditEvidence] = @AuditEvidence,
	[copyofEvidence] = @copyofEvidence
WHERE
	[ProjectID] = @ProjectID
	AND [FSCode] = @FSCode
	AND [contentID] = @contentID
	AND [FunctionType] = @FunctionType

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateCriticalElementofPM')
   BEGIN
       DROP  Procedure  usp_UpdateCriticalElementofPM
	END
GO

--region [dbo].[usp_UpdateCriticalElementofPM]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateCriticalElementofPM]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateCriticalElementofPM]
	@ProjectID varchar(100),
	@ID varchar(50),
	@Fscode varchar(50),
	@CriticalElement varchar(100),
	@OtherCriticalElement varchar(100),
	@CriticalElementCount decimal(22, 2),
	@SelectedIndex decimal(10, 4),
	@SelectedIndexDescription varchar(500),
	@CurrentMateriality decimal(22, 2),
	@selected int,
	@Reasons varchar(500)
AS

SET NOCOUNT ON

UPDATE [dbo].[CriticalElementofPM] SET
	[Fscode] = @Fscode,
	[CriticalElement] = @CriticalElement,
	[OtherCriticalElement] = @OtherCriticalElement,
	[CriticalElementCount] = @CriticalElementCount,
	[SelectedIndex] = @SelectedIndex,
	[SelectedIndexDescription] = @SelectedIndexDescription,
	[CurrentMateriality] = @CurrentMateriality,
	[selected] = @selected,
	[Reasons] = @Reasons
WHERE
	[ProjectID] = @ProjectID
	AND [ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateCutofftest')
   BEGIN
       DROP  Procedure  usp_UpdateCutofftest
	END
GO

--region [dbo].[usp_UpdateCutofftest]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateCutofftest]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateCutofftest]
	@VoucherID varchar(50),
	@ProjectID varchar(100),
	@FSCode varchar(50),
	@AccountCode varchar(100),
	@AccountName varchar(100),
	@ProjectCode varchar(100),
	@IsBefore int,
	@Sample int,
	@OsDate datetime,
	@PZH varchar(100),
	@dfkm varchar(100),
	@JD int,
	@JE decimal(20, 2),
	@ZY varchar(255)
AS

SET NOCOUNT ON

UPDATE [dbo].[Cutofftest] SET
	[FSCode] = @FSCode,
	[AccountCode] = @AccountCode,
	[AccountName] = @AccountName,
	[ProjectCode] = @ProjectCode,
	[IsBefore] = @IsBefore,
	[Sample] = @Sample,
	[OsDate] = @OsDate,
	[PZH] = @PZH,
	[dfkm] = @dfkm,
	[JD] = @JD,
	[JE] = @JE,
	[ZY] = @ZY
WHERE
	[VoucherID] = @VoucherID
	AND [ProjectID] = @ProjectID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateEliminationAllocate')
   BEGIN
       DROP  Procedure  usp_UpdateEliminationAllocate
	END
GO

--region [dbo].[usp_UpdateEliminationAllocate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateEliminationAllocate]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateEliminationAllocate]
	@GUID varchar(50),
	@ProjectID varchar(50),
	@EliminationNO varchar(50),
	@ComPID varchar(50),
	@FsCode varchar(50),
	@AccountCode varchar(100),
	@AuxiliaryCode varchar(100),
	@FormCode varchar(50),
	@NoteCode varchar(100),
	@ColumnCode varchar(50),
	@CheckData decimal(20, 2),
	@ChildEliminationID varchar(50)
AS

SET NOCOUNT ON

UPDATE [dbo].[EliminationAllocate] SET
	[ProjectID] = @ProjectID,
	[EliminationNO] = @EliminationNO,
	[ComPID] = @ComPID,
	[FsCode] = @FsCode,
	[AccountCode] = @AccountCode,
	[AuxiliaryCode] = @AuxiliaryCode,
	[FormCode] = @FormCode,
	[NoteCode] = @NoteCode,
	[ColumnCode] = @ColumnCode,
	[CheckData] = @CheckData,
	[ChildEliminationID] = @ChildEliminationID
WHERE
	[GUID] = @GUID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateERisksLevel')
   BEGIN
       DROP  Procedure  usp_UpdateERisksLevel
	END
GO

--region [dbo].[usp_UpdateERisksLevel]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateERisksLevel]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateERisksLevel]
	@ProjectID varchar(100),
	@ID int,
	@UpperID int,
	@Riskcase varchar(500),
	@RiskID int,
	@RiskYesNO int,
	@ImportantRiskYesNo int,
	@Reference varchar(50)
AS

SET NOCOUNT ON

UPDATE [dbo].[ERisksLevel] SET
	[UpperID] = @UpperID,
	[Riskcase] = @Riskcase,
	[RiskID] = @RiskID,
	[RiskYesNO] = @RiskYesNO,
	[ImportantRiskYesNo] = @ImportantRiskYesNo,
	[Reference] = @Reference
WHERE
	[ProjectID] = @ProjectID
	AND [ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateErrorRelationItem')
   BEGIN
       DROP  Procedure  usp_UpdateErrorRelationItem
	END
GO

--region [dbo].[usp_UpdateErrorRelationItem]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateErrorRelationItem]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateErrorRelationItem]
	@ID varchar(50),
	@ErrorID varchar(50),
	@ErrorType int,
	@ProjectID varchar(100),
	@FsCode varchar(50),
	@JD int,
	@JE decimal(20, 2)
AS

SET NOCOUNT ON

UPDATE [dbo].[ErrorRelationItem] SET
	[ErrorID] = @ErrorID,
	[ErrorType] = @ErrorType,
	[ProjectID] = @ProjectID,
	[FsCode] = @FsCode,
	[JD] = @JD,
	[JE] = @JE
WHERE
	[ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateEvaluationError')
   BEGIN
       DROP  Procedure  usp_UpdateEvaluationError
	END
GO

--region [dbo].[usp_UpdateEvaluationError]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateEvaluationError]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateEvaluationError]
	@ID varchar(50),
	@ProjectID varchar(100),
	@FsCode varchar(50),
	@AccountCode varchar(100),
	@AuxiliaryCode varchar(100),
	@Type int,
	@ReferCode varchar(50),
	@SampleData decimal(20, 2),
	@ExpectedData decimal(20, 2),
	@AcceptDiff decimal(20, 2),
	@ConfirmedDiff decimal(20, 2),
	@EvaluationError decimal(20, 2),
	@AffectKm varchar(500),
	@Memo varchar(100),
	@IsUse int
AS

SET NOCOUNT ON

UPDATE [dbo].[EvaluationError] SET
	[ProjectID] = @ProjectID,
	[FsCode] = @FsCode,
	[AccountCode] = @AccountCode,
	[AuxiliaryCode] = @AuxiliaryCode,
	[Type] = @Type,
	[ReferCode] = @ReferCode,
	[SampleData] = @SampleData,
	[ExpectedData] = @ExpectedData,
	[AcceptDiff] = @AcceptDiff,
	[ConfirmedDiff] = @ConfirmedDiff,
	[EvaluationError] = @EvaluationError,
	[AffectKm] = @AffectKm,
	[Memo] = @Memo,
	[IsUse] = @IsUse
WHERE
	[ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateFileReviews')
   BEGIN
       DROP  Procedure  usp_UpdateFileReviews
	END
GO

--region [dbo].[usp_UpdateFileReviews]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateFileReviews]
-- Date Generated: 2018年8月28日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateFileReviews]
	@ID varchar(50),
	@ProjectID varchar(100),
	@StruCode varchar(50),
	@AuditProgramCode varchar(50),
	@IsOpen int,
	@Context varchar(max),
	@feedback varchar(max),
	@feedbackdoc varchar(50),
	@Reviewer varchar(50),
	@ReviewerName varchar(50),
	@LastReviewerTime datetime,
	@BackLoginName varchar(50),
	@BackUserName varchar(50),
	@lastfeedbackTime datetime,
	@IsDelete int,
	@CreateTime datetime
AS

SET NOCOUNT ON

UPDATE [dbo].[FileReviews] SET
	[ProjectID] = @ProjectID,
	[StruCode] = @StruCode,
	[AuditProgramCode] = @AuditProgramCode,
	[IsOpen] = @IsOpen,
	[Context] = @Context,
	[feedback] = @feedback,
	[feedbackdoc] = @feedbackdoc,
	[Reviewer] = @Reviewer,
	[ReviewerName] = @ReviewerName,
	[LastReviewerTime] = @LastReviewerTime,
	[BackLoginName] = @BackLoginName,
	[BackUserName] = @BackUserName,
	[lastfeedbackTime] = @lastfeedbackTime,
	[IsDelete] = @IsDelete,
	[CreateTime] = @CreateTime
WHERE
	[ID] = @ID

--endregion



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateFileReviewsImage')
   BEGIN
       DROP  Procedure  usp_UpdateFileReviewsImage
	END
GO

--region [dbo].[usp_UpdateFileReviewsImage]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateFileReviewsImage]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateFileReviewsImage]
	@ID varchar(50),
	@ProjectID varchar(100),
	@FileID varchar(50),
	@SortID int,
	@FilePath varchar(1000),
	@LibID varchar(100)
AS

SET NOCOUNT ON

UPDATE [dbo].[FileReviewsImage] SET
	[ProjectID] = @ProjectID,
	[FileID] = @FileID,
	[SortID] = @SortID,
	[FilePath] = @FilePath,
	[LibID] = @LibID
WHERE
	[ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateFileScriptList')
   BEGIN
       DROP  Procedure  usp_UpdateFileScriptList
	END
GO

--region [dbo].[usp_UpdateFileScriptList]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateFileScriptList]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateFileScriptList]
	@ProjectID varchar(100),
	@FileLibID varchar(128),
	@StruCode varchar(128),
	@StruCodeText varchar(128),
	@StruName nvarchar(500),
	@UpperStruCode varchar(128),
	@StruType int,
	@StruDescription nvarchar(1000),
	@StruCriticalYesNO bit,
	@StruTarget varchar(500),
	@BuildingType varchar(100),
	@Checkout int,
	@CheckedReviewer nvarchar(1000),
	@StruPreparer nvarchar(1000),
	@StruCreateTime datetime,
	@StruReviewer nvarchar(1000),
	@StruMasterORCarbon bit,
	@FlowExcutedState int,
	@OpenNotes int,
	@ClosedNotes int,
	@StruSize int,
	@StruLastEditTime datetime,
	@FlowID int,
	@FlowExcutedTime datetime,
	@Fsitem int,
	@FSCode varchar(50),
	@BCycleCode varchar(100),
	@AppScopeProject int,
	@NonAppScopeProject int,
	@AppCombineProject int,
	@BuildLevel int,
	@carrieddown int,
	@ConnectData int
AS

SET NOCOUNT ON

UPDATE [dbo].[FileScriptList] SET
	[FileLibID] = @FileLibID,
	[StruCodeText] = @StruCodeText,
	[StruName] = @StruName,
	[UpperStruCode] = @UpperStruCode,
	[StruType] = @StruType,
	[StruDescription] = @StruDescription,
	[StruCriticalYesNO] = @StruCriticalYesNO,
	[StruTarget] = @StruTarget,
	[BuildingType] = @BuildingType,
	[Checkout] = @Checkout,
	[CheckedReviewer] = @CheckedReviewer,
	[StruPreparer] = @StruPreparer,
	[StruCreateTime] = @StruCreateTime,
	[StruReviewer] = @StruReviewer,
	[StruMasterORCarbon] = @StruMasterORCarbon,
	[FlowExcutedState] = @FlowExcutedState,
	[OpenNotes] = @OpenNotes,
	[ClosedNotes] = @ClosedNotes,
	[StruSize] = @StruSize,
	[StruLastEditTime] = @StruLastEditTime,
	[FlowID] = @FlowID,
	[FlowExcutedTime] = @FlowExcutedTime,
	[Fsitem] = @Fsitem,
	[FSCode] = @FSCode,
	[BCycleCode] = @BCycleCode,
	[AppScopeProject] = @AppScopeProject,
	[NonAppScopeProject] = @NonAppScopeProject,
	[AppCombineProject] = @AppCombineProject,
	[BuildLevel] = @BuildLevel,
	[carrieddown] = @carrieddown,
	[ConnectData] = @ConnectData
WHERE
	[ProjectID] = @ProjectID
	AND [StruCode] = @StruCode

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateFlowsAction')
   BEGIN
       DROP  Procedure  usp_UpdateFlowsAction
	END
GO

--region [dbo].[usp_UpdateFlowsAction]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateFlowsAction]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateFlowsAction]
	@ProjectID varchar(100),
	@StruID varchar(50),
	@FlowID int,
	@NodeID int,
	@NodeProcessor varchar(50),
	@ActionDatetime datetime
AS

SET NOCOUNT ON

UPDATE [dbo].[FlowsAction] SET
	[FlowID] = @FlowID,
	[NodeID] = @NodeID,
	[ActionDatetime] = @ActionDatetime
WHERE
	[ProjectID] = @ProjectID
	AND [StruID] = @StruID
	AND [NodeProcessor] = @NodeProcessor

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateFSCodeConfig')
   BEGIN
       DROP  Procedure  usp_UpdateFSCodeConfig
	END
GO

--region [dbo].[usp_UpdateFSCodeConfig]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateFSCodeConfig]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateFSCodeConfig]
	@ProjectID varchar(100),
	@FsCode varchar(50),
	@FsName varchar(100),
	@FSType int,
	@TBType int,
	@IsMx int,
	@Kmsx varchar(50),
	@Yefx int,
	@TBGrouping varchar(50),
	@IsCashflow int,
	@IsBankConfirmation int,
	@IsRiskassess int,
	@IsNote int,
	@IsAuditplan int,
	@IsAuditdocument int,
	@AccountingMeasure varchar(100),
	@FERcode varchar(100),
	@IsUse int
AS

SET NOCOUNT ON

UPDATE [dbo].[FSCodeConfig] SET
	[FsName] = @FsName,
	[FSType] = @FSType,
	[TBType] = @TBType,
	[IsMx] = @IsMx,
	[Kmsx] = @Kmsx,
	[Yefx] = @Yefx,
	[TBGrouping] = @TBGrouping,
	[IsCashflow] = @IsCashflow,
	[IsBankConfirmation] = @IsBankConfirmation,
	[IsRiskassess] = @IsRiskassess,
	[IsNote] = @IsNote,
	[IsAuditplan] = @IsAuditplan,
	[IsAuditdocument] = @IsAuditdocument,
	[AccountingMeasure] = @AccountingMeasure,
	[FERcode] = @FERcode,
	[IsUse] = @IsUse
WHERE
	[ProjectID] = @ProjectID
	AND [FsCode] = @FsCode

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateInherentRisk')
   BEGIN
       DROP  Procedure  usp_UpdateInherentRisk
	END
GO

--region [dbo].[usp_UpdateInherentRisk]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateInherentRisk]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateInherentRisk]
	@ProjectID varchar(100),
	@ID int,
	@RiskLevelID int,
	@RiskLevelType int,
	@RiskSource varchar(50),
	@RiskYesNO bit,
	@RiskDescription text,
	@ImportantRiskYesNo bit,
	@SpecialRiskYesNo bit,
	@ReportSeverityYesNo bit,
	@Solution text,
	@Countermeasure text,
	@Referencelist text,
	@FinalcialRiskYesNo bit,
	@Results text,
	@Conclusion1 text,
	@Conclusion2 text
AS

SET NOCOUNT ON

UPDATE [dbo].[InherentRisk] SET
	[RiskLevelID] = @RiskLevelID,
	[RiskLevelType] = @RiskLevelType,
	[RiskSource] = @RiskSource,
	[RiskYesNO] = @RiskYesNO,
	[RiskDescription] = @RiskDescription,
	[ImportantRiskYesNo] = @ImportantRiskYesNo,
	[SpecialRiskYesNo] = @SpecialRiskYesNo,
	[ReportSeverityYesNo] = @ReportSeverityYesNo,
	[Solution] = @Solution,
	[Countermeasure] = @Countermeasure,
	[Referencelist] = @Referencelist,
	[FinalcialRiskYesNo] = @FinalcialRiskYesNo,
	[Results] = @Results,
	[Conclusion1] = @Conclusion1,
	[Conclusion2] = @Conclusion2
WHERE
	[ProjectID] = @ProjectID
	AND [ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateInherentRiskAccount')
   BEGIN
       DROP  Procedure  usp_UpdateInherentRiskAccount
	END
GO

--region [dbo].[usp_UpdateInherentRiskAccount]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateInherentRiskAccount]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateInherentRiskAccount]
	@ProjectID varchar(100),
	@ID int,
	@RiskID int,
	@RiskSource nvarchar(50),
	@AccountID varchar(50),
	@AccountName nvarchar(50),
	@CognizanceCode varchar(50),
	@AuditMethod varchar(50),
	@ControlTestProgram varchar(50),
	@MaterialityTestProgramYesNo bit,
	@DetailTestYesNo bit,
	@Memo text,
	@CGoalID varchar(50),
	@Referencelist1 text,
	@Referencelist2 text,
	@Referencelist3 text,
	@TotalConclusion text,
	@Countermeasure text
AS

SET NOCOUNT ON

UPDATE [dbo].[InherentRiskAccount] SET
	[RiskID] = @RiskID,
	[RiskSource] = @RiskSource,
	[AccountID] = @AccountID,
	[AccountName] = @AccountName,
	[CognizanceCode] = @CognizanceCode,
	[AuditMethod] = @AuditMethod,
	[ControlTestProgram] = @ControlTestProgram,
	[MaterialityTestProgramYesNo] = @MaterialityTestProgramYesNo,
	[DetailTestYesNo] = @DetailTestYesNo,
	[Memo] = @Memo,
	[CGoalID] = @CGoalID,
	[Referencelist1] = @Referencelist1,
	[Referencelist2] = @Referencelist2,
	[Referencelist3] = @Referencelist3,
	[TotalConclusion] = @TotalConclusion,
	[Countermeasure] = @Countermeasure
WHERE
	[ProjectID] = @ProjectID
	AND [ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateNoteAndTB')
   BEGIN
       DROP  Procedure  usp_UpdateNoteAndTB
	END
GO

--region [dbo].[usp_UpdateNoteAndTB]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   HUASHENG using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateNoteAndTB]
-- Date Generated: 2018年12月11日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateNoteAndTB]
	@GUID varchar(50),
	@ProjectID varchar(50),
	@NoteCode varchar(100),
	@FormCode varchar(50),
	@FSCode varchar(100),
	@AccountCode varchar(100),
	@AuxiliaryCode varchar(100),
	@TBType int,
	@IDGrouping varchar(50)
AS

SET NOCOUNT ON

UPDATE [dbo].[NoteAndTB] SET
	[ProjectID] = @ProjectID,
	[NoteCode] = @NoteCode,
	[FormCode] = @FormCode,
	[FSCode] = @FSCode,
	[AccountCode] = @AccountCode,
	[AuxiliaryCode] = @AuxiliaryCode,
	[TBType] = @TBType,
	[IDGrouping] = @IDGrouping
WHERE
	[GUID] = @GUID

--endregion


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateNoteCheckRule')
   BEGIN
       DROP  Procedure  usp_UpdateNoteCheckRule
	END
GO

--region [dbo].[usp_UpdateNoteCheckRule]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateNoteCheckRule]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateNoteCheckRule]
	@ID varchar(50),
	@ProjectID varchar(50),
	@FSCode varchar(100),
	@FormType int,
	@CheckPathOne varchar(1000),
	@CheckPathTwo varchar(1000),
	@Remark varchar(2000),
	@IsUseCom int,
	@IsUse int,
	@SelectType int
AS

SET NOCOUNT ON

UPDATE [dbo].[NoteCheckRule] SET
	[FSCode] = @FSCode,
	[FormType] = @FormType,
	[CheckPathOne] = @CheckPathOne,
	[CheckPathTwo] = @CheckPathTwo,
	[Remark] = @Remark,
	[IsUseCom] = @IsUseCom,
	[IsUse] = @IsUse,
	[SelectType] = @SelectType
WHERE
	[ID] = @ID
	AND [ProjectID] = @ProjectID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateNoteColumnAttribute')
   BEGIN
       DROP  Procedure  usp_UpdateNoteColumnAttribute
	END
GO

--region [dbo].[usp_UpdateNoteColumnAttribute]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateNoteColumnAttribute]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateNoteColumnAttribute]
	@ProjectID varchar(50),
	@ColumnCode varchar(50),
	@FSCode varchar(100),
	@FormCode varchar(50),
	@Title varchar(255),
	@SortID int,
	@Type int,
	@IsConnect int,
	@ConnectName varchar(50),
	@IsCheckRow int,
	@IsMerge int
AS

SET NOCOUNT ON

UPDATE [dbo].[NoteColumnAttribute] SET
	[FSCode] = @FSCode,
	[Title] = @Title,
	[SortID] = @SortID,
	[Type] = @Type,
	[IsConnect] = @IsConnect,
	[ConnectName] = @ConnectName,
	[IsCheckRow] = @IsCheckRow,
	[IsMerge] = @IsMerge
WHERE
	[ProjectID] = @ProjectID
	AND [ColumnCode] = @ColumnCode
	AND [FormCode] = @FormCode

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateNoteComFormula')
   BEGIN
       DROP  Procedure  usp_UpdateNoteComFormula
	END
GO

--region [dbo].[usp_UpdateNoteComFormula]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateNoteComFormula]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateNoteComFormula]
	@ProjectID varchar(50),
	@StruCode varchar(255),
	@ColumnCode varchar(50),
	@NoteCode varchar(100),
	@FormCode varchar(50),
	@FSCode varchar(100),
	@Formula varchar(500)
AS

SET NOCOUNT ON

UPDATE [dbo].[NoteComFormula] SET
	[FSCode] = @FSCode,
	[Formula] = @Formula
WHERE
	[ProjectID] = @ProjectID
	AND [StruCode] = @StruCode
	AND [ColumnCode] = @ColumnCode
	AND [NoteCode] = @NoteCode
	AND [FormCode] = @FormCode

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateNoteConnectRule')
   BEGIN
       DROP  Procedure  usp_UpdateNoteConnectRule
	END
GO

--region [dbo].[usp_UpdateNoteConnectRule]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateNoteConnectRule]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateNoteConnectRule]
	@ID varchar(50),
	@ProjectID varchar(50),
	@FSCode varchar(100),
	@FormCode varchar(50),
	@ColumnCodeOne varchar(50),
	@ColumnCodeTwo varchar(50),
	@IsUse int
AS

SET NOCOUNT ON

UPDATE [dbo].[NoteConnectRule] SET
	[ProjectID] = @ProjectID,
	[FSCode] = @FSCode,
	[FormCode] = @FormCode,
	[ColumnCodeOne] = @ColumnCodeOne,
	[ColumnCodeTwo] = @ColumnCodeTwo,
	[IsUse] = @IsUse
WHERE
	[ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateNoteData')
   BEGIN
       DROP  Procedure  usp_UpdateNoteData
	END
GO

--region [dbo].[usp_UpdateNoteData]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateNoteData]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateNoteData]
	@ProjectID varchar(50),
	@NoteCode varchar(100),
	@FormCode varchar(50),
	@Bth nvarchar(255),
	@CheckData decimal(20, 2)
AS

SET NOCOUNT ON

UPDATE [dbo].[NoteData] SET
	[Bth] = @Bth,
	[CheckData] = @CheckData
WHERE
	[ProjectID] = @ProjectID
	AND [NoteCode] = @NoteCode
	AND [FormCode] = @FormCode

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateNoteDataDetail')
   BEGIN
       DROP  Procedure  usp_UpdateNoteDataDetail
	END
GO

--region [dbo].[usp_UpdateNoteDataDetail]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateNoteDataDetail]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateNoteDataDetail]
	@ProjectID varchar(50),
	@FormCode varchar(50),
	@NoteCode varchar(100),
	@ColumnCode varchar(50),
	@NumberField decimal(20, 2),
	@TextField nvarchar(255),
	@DateField datetime
AS

SET NOCOUNT ON

UPDATE [dbo].[NoteDataDetail] SET
	[NumberField] = @NumberField,
	[TextField] = @TextField,
	[DateField] = @DateField
WHERE
	[ProjectID] = @ProjectID
	AND [FormCode] = @FormCode
	AND [NoteCode] = @NoteCode
	AND [ColumnCode] = @ColumnCode

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateNoteForm')
   BEGIN
       DROP  Procedure  usp_UpdateNoteForm
	END
GO

--region [dbo].[usp_UpdateNoteForm]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateNoteForm]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateNoteForm]
	@ProjectID varchar(50),
	@FormCode varchar(50),
	@FormName nvarchar(255),
	@SortID int,
	@IsUse int,
	@FSCode varchar(100),
	@FormType int,
	@Remark nvarchar(2000),
	@StructHash varchar(100),
	@DataHash varchar(100),
	@IsChangeRow int,
	@IsCombination int
AS

SET NOCOUNT ON

UPDATE [dbo].[NoteForm] SET
	[FormName] = @FormName,
	[SortID] = @SortID,
	[IsUse] = @IsUse,
	[FSCode] = @FSCode,
	[FormType] = @FormType,
	[Remark] = @Remark,
	[StructHash] = @StructHash,
	[DataHash] = @DataHash,
	[IsChangeRow] = @IsChangeRow,
	[IsCombination] = @IsCombination
WHERE
	[ProjectID] = @ProjectID
	AND [FormCode] = @FormCode

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateNoteFormula')
   BEGIN
       DROP  Procedure  usp_UpdateNoteFormula
	END
GO

--region [dbo].[usp_UpdateNoteFormula]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateNoteFormula]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateNoteFormula]
	@ProjectID varchar(50),
	@ColumnCode varchar(50),
	@NoteCode varchar(100),
	@FormCode varchar(50),
	@FSCode varchar(100),
	@Formula varchar(500)
AS

SET NOCOUNT ON

UPDATE [dbo].[NoteFormula] SET
	[FSCode] = @FSCode,
	[Formula] = @Formula
WHERE
	[ProjectID] = @ProjectID
	AND [ColumnCode] = @ColumnCode
	AND [NoteCode] = @NoteCode
	AND [FormCode] = @FormCode

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateNoteMemo')
   BEGIN
       DROP  Procedure  usp_UpdateNoteMemo
	END
GO

--region [dbo].[usp_UpdateNoteMemo]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateNoteMemo]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateNoteMemo]
	@ProjectID varchar(50),
	@FSCode varchar(100),
	@FormCode varchar(50),
	@Memo nvarchar(4000),
	@memohelp varchar(max)
AS

SET NOCOUNT ON

UPDATE [dbo].[NoteMemo] SET
	[FSCode] = @FSCode,
	[Memo] = @Memo,
	[memohelp] = @memohelp
WHERE
	[ProjectID] = @ProjectID
	AND [FormCode] = @FormCode

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateNoteRowAttribute')
   BEGIN
       DROP  Procedure  usp_UpdateNoteRowAttribute
	END
GO

--region [dbo].[usp_UpdateNoteRowAttribute]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateNoteRowAttribute]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateNoteRowAttribute]
	@ProjectID varchar(50),
	@NoteCode varchar(100),
	@FormCode varchar(50),
	@FSCode varchar(100),
	@UpperNoteCode varchar(100),
	@SortID int,
	@Bth nvarchar(255),
	@IsQzh int,
	@IsGdh int,
	@IsCheckRow int,
	@IsConnect int
AS

SET NOCOUNT ON

UPDATE [dbo].[NoteRowAttribute] SET
	[FSCode] = @FSCode,
	[UpperNoteCode] = @UpperNoteCode,
	[SortID] = @SortID,
	[Bth] = @Bth,
	[IsQzh] = @IsQzh,
	[IsGdh] = @IsGdh,
	[IsCheckRow] = @IsCheckRow,
	[IsConnect] = @IsConnect
WHERE
	[ProjectID] = @ProjectID
	AND [NoteCode] = @NoteCode
	AND [FormCode] = @FormCode

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdatePIDInformation')
   BEGIN
       DROP  Procedure  usp_UpdatePIDInformation
	END
GO

--region [dbo].[usp_UpdatePIDInformation]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdatePIDInformation]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdatePIDInformation]
	@ProjectID varchar(100),
	@ClientRiskType int,
	@currentyearPID varchar(50),
	@lastperiodPID varchar(50),
	@IPOPrioryear1PID varchar(50),
	@IPOPrioryear2PID varchar(50),
	@IPOPrioryear3PID varchar(50),
	@Carryforward int,
	@FinDefine int,
	@InvDefine int,
	@WagDefine int,
	@FADefine int
AS

SET NOCOUNT ON

UPDATE [dbo].[PIDInformation] SET
	[ClientRiskType] = @ClientRiskType,
	[currentyearPID] = @currentyearPID,
	[lastperiodPID] = @lastperiodPID,
	[IPOPrioryear1PID] = @IPOPrioryear1PID,
	[IPOPrioryear2PID] = @IPOPrioryear2PID,
	[IPOPrioryear3PID] = @IPOPrioryear3PID,
	[Carryforward] = @Carryforward,
	[FinDefine] = @FinDefine,
	[InvDefine] = @InvDefine,
	[WagDefine] = @WagDefine,
	[FADefine] = @FADefine
WHERE
	[ProjectID] = @ProjectID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdatePlanningProcedures')
   BEGIN
       DROP  Procedure  usp_UpdatePlanningProcedures
	END
GO

--region [dbo].[usp_UpdatePlanningProcedures]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdatePlanningProcedures]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdatePlanningProcedures]
	@ProjectID varchar(100),
	@SortID int,
	@StruCode nvarchar(50),
	@BusinessCycleID nvarchar(50),
	@ProgramName text,
	@ReferenceList nvarchar(50)
AS

SET NOCOUNT ON

UPDATE [dbo].[PlanningProcedures] SET
	[StruCode] = @StruCode,
	[BusinessCycleID] = @BusinessCycleID,
	[ProgramName] = @ProgramName,
	[ReferenceList] = @ReferenceList
WHERE
	[ProjectID] = @ProjectID
	AND [SortID] = @SortID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdatePMofFsCode')
   BEGIN
       DROP  Procedure  usp_UpdatePMofFsCode
	END
GO

--region [dbo].[usp_UpdatePMofFsCode]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdatePMofFsCode]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdatePMofFsCode]
	@ProjectID varchar(100),
	@ID varchar(50),
	@Fscode varchar(50),
	@ValueofPM decimal(20, 2),
	@ValueofMP decimal(20, 2)
AS

SET NOCOUNT ON

UPDATE [dbo].[PMofFsCode] SET
	[Fscode] = @Fscode,
	[ValueofPM] = @ValueofPM,
	[ValueofMP] = @ValueofMP
WHERE
	[ProjectID] = @ProjectID
	AND [ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdatePmPlanningMateriality')
   BEGIN
       DROP  Procedure  usp_UpdatePmPlanningMateriality
	END
GO

--region [dbo].[usp_UpdatePmPlanningMateriality]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdatePmPlanningMateriality]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdatePmPlanningMateriality]
	@ProjectID varchar(100),
	@ID varchar(50),
	@CurrentMateriality decimal(20, 2),
	@PriorMateriality decimal(20, 2),
	@CurrentNotAdjustedTax decimal(20, 2),
	@PriorNotAdjustedTax decimal(20, 2),
	@CurrentAdjustedTax decimal(20, 2),
	@PriorAdjustedTax decimal(20, 2),
	@QuantityFactors int,
	@Misstatementratio decimal(20, 4),
	@MinorMisstatements decimal(20, 2),
	@Taxeffect int,
	@AnticipatedErrorRate decimal(20, 4),
	@AnticipatedTaxRate decimal(20, 4),
	@StatutoryTaxRate decimal(20, 4),
	@CriticalElement int,
	@OtherCriticalElement varchar(50),
	@CriticalElementCount decimal(22, 2),
	@SelectedIndex decimal(22, 4),
	@SelectedIndexDescription varchar(max),
	@PMAfterTax decimal(22, 2)
AS

SET NOCOUNT ON

UPDATE [dbo].[PmPlanningMateriality] SET
	[CurrentMateriality] = @CurrentMateriality,
	[PriorMateriality] = @PriorMateriality,
	[CurrentNotAdjustedTax] = @CurrentNotAdjustedTax,
	[PriorNotAdjustedTax] = @PriorNotAdjustedTax,
	[CurrentAdjustedTax] = @CurrentAdjustedTax,
	[PriorAdjustedTax] = @PriorAdjustedTax,
	[QuantityFactors] = @QuantityFactors,
	[Misstatementratio] = @Misstatementratio,
	[MinorMisstatements] = @MinorMisstatements,
	[Taxeffect] = @Taxeffect,
	[AnticipatedErrorRate] = @AnticipatedErrorRate,
	[AnticipatedTaxRate] = @AnticipatedTaxRate,
	[StatutoryTaxRate] = @StatutoryTaxRate,
	[CriticalElement] = @CriticalElement,
	[OtherCriticalElement] = @OtherCriticalElement,
	[CriticalElementCount] = @CriticalElementCount,
	[SelectedIndex] = @SelectedIndex,
	[SelectedIndexDescription] = @SelectedIndexDescription,
	[PMAfterTax] = @PMAfterTax
WHERE
	[ProjectID] = @ProjectID
	AND [ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdatePMvalueofJ')
   BEGIN
       DROP  Procedure  usp_UpdatePMvalueofJ
	END
GO

--region [dbo].[usp_UpdatePMvalueofJ]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdatePMvalueofJ]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdatePMvalueofJ]
	@ProjectID varchar(100),
	@Fscode varchar(50),
	@Testobject int,
	@Step int,
	@ID varchar(50),
	@Overallsample decimal(20, 2),
	@ValueofJ decimal(20, 2),
	@Samplesize int,
	@SampleTotal int,
	@Memo varchar(500)
AS

SET NOCOUNT ON

UPDATE [dbo].[PMvalueofJ] SET
	[ID] = @ID,
	[Overallsample] = @Overallsample,
	[ValueofJ] = @ValueofJ,
	[Samplesize] = @Samplesize,
	[SampleTotal] = @SampleTotal,
	[Memo] = @Memo
WHERE
	[ProjectID] = @ProjectID
	AND [Fscode] = @Fscode
	AND [Testobject] = @Testobject
	AND [Step] = @Step

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateProJect')
   BEGIN
       DROP  Procedure  usp_UpdateProJect
	END
GO

--region [dbo].[usp_UpdateProJect]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateProJect]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateProJect]
	@ProjectID varchar(100),
	@TYPECODE varchar(255),
	@PROJECTCODE varchar(255),
	@PROJECTNAME varchar(1000),
	@UPPERCODE varchar(255),
	@JB int,
	@ISMX int
AS

SET NOCOUNT ON

UPDATE [dbo].[ProJect] SET
	[PROJECTNAME] = @PROJECTNAME,
	[UPPERCODE] = @UPPERCODE,
	[JB] = @JB,
	[ISMX] = @ISMX
WHERE
	[ProjectID] = @ProjectID
	AND [TYPECODE] = @TYPECODE
	AND [PROJECTCODE] = @PROJECTCODE

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateProjectConfig')
   BEGIN
       DROP  Procedure  usp_UpdateProjectConfig
	END
GO

--region [dbo].[usp_UpdateProjectConfig]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateProjectConfig]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateProjectConfig]
	@ProjectID varchar(100),
	@Key varchar(100),
	@Value varchar(100),
	@Remark nvarchar(1000)
AS

SET NOCOUNT ON

UPDATE [dbo].[ProjectConfig] SET
	[Value] = @Value,
	[Remark] = @Remark
WHERE
	[Key] = @Key
	AND [ProjectID] = @ProjectID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateProjectError')
   BEGIN
       DROP  Procedure  usp_UpdateProjectError
	END
GO

--region [dbo].[usp_UpdateProjectError]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateProjectError]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateProjectError]
	@ID varchar(50),
	@ProjectID varchar(100),
	@FsCode varchar(50),
	@AccountCode varchar(100),
	@AuxiliaryCode varchar(100),
	@VoucherID varchar(50),
	@Type int,
	@ReferCode varchar(50),
	@SampleData decimal(20, 2),
	@CheckedData decimal(20, 2),
	@ProjectError decimal(20, 2),
	@AffectKm varchar(500),
	@ErrorData decimal(20, 2),
	@ErrorReason varchar(100),
	@ErrorType int,
	@Memo varchar(100),
	@IsUse int
AS

SET NOCOUNT ON

UPDATE [dbo].[ProjectError] SET
	[ProjectID] = @ProjectID,
	[FsCode] = @FsCode,
	[AccountCode] = @AccountCode,
	[AuxiliaryCode] = @AuxiliaryCode,
	[VoucherID] = @VoucherID,
	[Type] = @Type,
	[ReferCode] = @ReferCode,
	[SampleData] = @SampleData,
	[CheckedData] = @CheckedData,
	[ProjectError] = @ProjectError,
	[AffectKm] = @AffectKm,
	[ErrorData] = @ErrorData,
	[ErrorReason] = @ErrorReason,
	[ErrorType] = @ErrorType,
	[Memo] = @Memo,
	[IsUse] = @IsUse
WHERE
	[ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateProjectType')
   BEGIN
       DROP  Procedure  usp_UpdateProjectType
	END
GO

--region [dbo].[usp_UpdateProjectType]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateProjectType]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateProjectType]
	@ProjectID varchar(100),
	@TYPECODE varchar(255),
	@TYPENAME varchar(1000)
AS

SET NOCOUNT ON

UPDATE [dbo].[ProjectType] SET
	[TYPENAME] = @TYPENAME
WHERE
	[ProjectID] = @ProjectID
	AND [TYPECODE] = @TYPECODE

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateQcwljzpz')
   BEGIN
       DROP  Procedure  usp_UpdateQcwljzpz
	END
GO

--region [dbo].[usp_UpdateQcwljzpz]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateQcwljzpz]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateQcwljzpz]
	@VoucherID varchar(50),
	@Clientid varchar(100),
	@ProjectID varchar(100),
	@IncNo varchar(50),
	@Date datetime,
	@Period int,
	@Pzlx varchar(255),
	@Pzh varchar(255),
	@Djh int,
	@AccountCode varchar(100),
	@ProjectCode varchar(100),
	@Zy varchar(max),
	@Jfje decimal(20, 2),
	@Dfje decimal(20, 2),
	@Jfsl decimal(20, 4),
	@Dfsl decimal(20, 4),
	@ZDR varchar(255),
	@dfkm varchar(200),
	@AccountingAge int,
	@qmyegc int,
	@Fsje decimal(20, 2),
	@Jd int,
	@FDetailID int
AS

SET NOCOUNT ON

UPDATE [dbo].[Qcwljzpz] SET
	[Clientid] = @Clientid,
	[ProjectID] = @ProjectID,
	[IncNo] = @IncNo,
	[Date] = @Date,
	[Period] = @Period,
	[Pzlx] = @Pzlx,
	[Pzh] = @Pzh,
	[Djh] = @Djh,
	[AccountCode] = @AccountCode,
	[ProjectCode] = @ProjectCode,
	[Zy] = @Zy,
	[Jfje] = @Jfje,
	[Dfje] = @Dfje,
	[Jfsl] = @Jfsl,
	[Dfsl] = @Dfsl,
	[ZDR] = @ZDR,
	[dfkm] = @dfkm,
	[AccountingAge] = @AccountingAge,
	[qmyegc] = @qmyegc,
	[Fsje] = @Fsje,
	[Jd] = @Jd,
	[FDetailID] = @FDetailID
WHERE
	[VoucherID] = @VoucherID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateQhJzpz')
   BEGIN
       DROP  Procedure  usp_UpdateQhJzpz
	END
GO

--region [dbo].[usp_UpdateQhJzpz]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateQhJzpz]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateQhJzpz]
	@VoucherID varchar(50),
	@Clientid varchar(100),
	@ProjectID varchar(100),
	@IncNo varchar(50),
	@Date datetime,
	@Period int,
	@Pzlx varchar(255),
	@Pzh varchar(255),
	@Djh int,
	@AccountCode varchar(255),
	@ProjectCode varchar(255),
	@Zy varchar(255),
	@Jfje decimal(20, 2),
	@Dfje decimal(20, 2),
	@Jfsl decimal(20, 4),
	@Dfsl decimal(20, 4),
	@ZDR varchar(255),
	@dfkm varchar(200),
	@Fsje decimal(20, 2),
	@Jd int,
	@fllx int,
	@FDetailID int
AS

SET NOCOUNT ON

UPDATE [dbo].[QhJzpz] SET
	[Clientid] = @Clientid,
	[ProjectID] = @ProjectID,
	[IncNo] = @IncNo,
	[Date] = @Date,
	[Period] = @Period,
	[Pzlx] = @Pzlx,
	[Pzh] = @Pzh,
	[Djh] = @Djh,
	[AccountCode] = @AccountCode,
	[ProjectCode] = @ProjectCode,
	[Zy] = @Zy,
	[Jfje] = @Jfje,
	[Dfje] = @Dfje,
	[Jfsl] = @Jfsl,
	[Dfsl] = @Dfsl,
	[ZDR] = @ZDR,
	[dfkm] = @dfkm,
	[Fsje] = @Fsje,
	[Jd] = @Jd,
	[fllx] = @fllx,
	[FDetailID] = @FDetailID
WHERE
	[VoucherID] = @VoucherID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateQmyegc')
   BEGIN
       DROP  Procedure  usp_UpdateQmyegc
	END
GO

--region [dbo].[usp_UpdateQmyegc]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateQmyegc]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateQmyegc]
	@ProjectID varchar(100),
	@VProjectID varchar(100),
	@AccountCode varchar(255),
	@ProjectCode varchar(255),
	@AccountingAge int,
	@TableID int,
	@VoucherID varchar(50),
	@Date datetime,
	@Jfje decimal(20, 2),
	@Dfje decimal(20, 2),
	@Fsje decimal(20, 2)
AS

SET NOCOUNT ON

UPDATE [dbo].[Qmyegc] SET
	[VProjectID] = @VProjectID,
	[AccountCode] = @AccountCode,
	[ProjectCode] = @ProjectCode,
	[AccountingAge] = @AccountingAge,
	[TableID] = @TableID,
	[Date] = @Date,
	[Jfje] = @Jfje,
	[Dfje] = @Dfje,
	[Fsje] = @Fsje
WHERE
	[ProjectID] = @ProjectID
	AND [VoucherID] = @VoucherID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateRecordOfSampleTest')
   BEGIN
       DROP  Procedure  usp_UpdateRecordOfSampleTest
	END
GO

--region [dbo].[usp_UpdateRecordOfSampleTest]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateRecordOfSampleTest]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateRecordOfSampleTest]
	@ProjectID varchar(100),
	@VoucherID varchar(50),
	@ContentID int,
	@RecordID varchar(100),
	@IncNo varchar(50),
	@NumberofAE varchar(50),
	@DateofAE datetime,
	@AmountofAE decimal(20, 2),
	@QuantityofAE decimal(20, 2),
	@AuditEvidence varchar(500),
	@RecordType int,
	@copyofEvidence varchar(100)
AS

SET NOCOUNT ON

UPDATE [dbo].[RecordOfSampleTest] SET
	[RecordID] = @RecordID,
	[IncNo] = @IncNo,
	[NumberofAE] = @NumberofAE,
	[DateofAE] = @DateofAE,
	[AmountofAE] = @AmountofAE,
	[QuantityofAE] = @QuantityofAE,
	[AuditEvidence] = @AuditEvidence,
	[RecordType] = @RecordType,
	[copyofEvidence] = @copyofEvidence
WHERE
	[ProjectID] = @ProjectID
	AND [VoucherID] = @VoucherID
	AND [ContentID] = @ContentID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateReplaceTestVoucher')
   BEGIN
       DROP  Procedure  usp_UpdateReplaceTestVoucher
	END
GO
--region [dbo].[usp_UpdateReplaceTestVoucher]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   HUASHENG using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateReplaceTestVoucher]
-- Date Generated: 2018年11月22日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateReplaceTestVoucher]
	@VoucherID varchar(50),
	@ProjectID varchar(100),
	@FSCode varchar(50),
	@AccountCode varchar(100),
	@AccountName varchar(100),
	@ProjectCode varchar(100),
	@OsDate datetime,
	@PZH varchar(100),
	@dfkm varchar(100),
	@JD int,
	@JE decimal(20, 2),
	@ZY varchar(255)
AS

SET NOCOUNT ON

UPDATE [dbo].[ReplaceTestVoucher] SET
	[ProjectID] = @ProjectID,
	[FSCode] = @FSCode,
	[AccountCode] = @AccountCode,
	[AccountName] = @AccountName,
	[ProjectCode] = @ProjectCode,
	[OsDate] = @OsDate,
	[PZH] = @PZH,
	[dfkm] = @dfkm,
	[JD] = @JD,
	[JE] = @JE,
	[ZY] = @ZY
WHERE
	[VoucherID] = @VoucherID

--endregion
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateRiskfactor')
   BEGIN
       DROP  Procedure  usp_UpdateRiskfactor
	END
GO

--region [dbo].[usp_UpdateRiskfactor]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateRiskfactor]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateRiskfactor]
	@ID int,
	@ProjectID varchar(100),
	@FSCode varchar(50),
	@CognizanceCode varchar(50),
	@RiskType int,
	@RiskValue int,
	@LastRiskValue int,
	@BCycleCode varchar(50)
AS

SET NOCOUNT ON

UPDATE [dbo].[Riskfactor] SET
	[ProjectID] = @ProjectID,
	[FSCode] = @FSCode,
	[CognizanceCode] = @CognizanceCode,
	[RiskType] = @RiskType,
	[RiskValue] = @RiskValue,
	[LastRiskValue] = @LastRiskValue,
	[BCycleCode] = @BCycleCode
WHERE
	[ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateRiskModel')
   BEGIN
       DROP  Procedure  usp_UpdateRiskModel
	END
GO

--region [dbo].[usp_UpdateRiskModel]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateRiskModel]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateRiskModel]
	@ID int,
	@ProjectID varchar(100),
	@RiskType int,
	@RiskText varchar(100),
	@RiskValue int,
	@Riskfactor float
AS

SET NOCOUNT ON

UPDATE [dbo].[RiskModel] SET
	[ProjectID] = @ProjectID,
	[RiskType] = @RiskType,
	[RiskText] = @RiskText,
	[RiskValue] = @RiskValue,
	[Riskfactor] = @Riskfactor
WHERE
	[ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateRiskResponse')
   BEGIN
       DROP  Procedure  usp_UpdateRiskResponse
	END
GO

--region [dbo].[usp_UpdateRiskResponse]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateRiskResponse]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateRiskResponse]
	@ProjectID varchar(100),
	@ID int,
	@UpperID int,
	@DetailResponse varchar(1000)
AS

SET NOCOUNT ON

UPDATE [dbo].[RiskResponse] SET
	[UpperID] = @UpperID,
	[DetailResponse] = @DetailResponse
WHERE
	[ProjectID] = @ProjectID
	AND [ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateRoleInfo')
   BEGIN
       DROP  Procedure  usp_UpdateRoleInfo
	END
GO

--region [dbo].[usp_UpdateRoleInfo]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateRoleInfo]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateRoleInfo]
	@ProjectID varchar(100),
	@RoleID int,
	@RoleName varchar(50),
	@AliasName varchar(1000),
	@RolesDescription varchar(max),
	@SortID int,
	@ISReview int,
	@ReviewType nvarchar(50),
	@ReviewObjecttive text,
	@IsReadOnly int
AS

SET NOCOUNT ON

UPDATE [dbo].[RoleInfo] SET
	[RoleName] = @RoleName,
	[AliasName] = @AliasName,
	[RolesDescription] = @RolesDescription,
	[SortID] = @SortID,
	[ISReview] = @ISReview,
	[ReviewType] = @ReviewType,
	[ReviewObjecttive] = @ReviewObjecttive,
	[IsReadOnly] = @IsReadOnly
WHERE
	[ProjectID] = @ProjectID
	AND [RoleID] = @RoleID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateStrategicPlanning')
   BEGIN
       DROP  Procedure  usp_UpdateStrategicPlanning
	END
GO

--region [dbo].[usp_UpdateStrategicPlanning]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateStrategicPlanning]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateStrategicPlanning]
	@ProjectID varchar(100),
	@ID int,
	@AuditPurposes nvarchar(200),
	@AccountingStandard nvarchar(200),
	@AuditingStandard nvarchar(200),
	@ParticularSpecific nvarchar(4000),
	@OtherInfo nvarchar(4000),
	@OtherMatters nvarchar(4000),
	@ControlStrategyRely bit,
	@RotationTestApply bit
AS

SET NOCOUNT ON

UPDATE [dbo].[StrategicPlanning] SET
	[AuditPurposes] = @AuditPurposes,
	[AccountingStandard] = @AccountingStandard,
	[AuditingStandard] = @AuditingStandard,
	[ParticularSpecific] = @ParticularSpecific,
	[OtherInfo] = @OtherInfo,
	[OtherMatters] = @OtherMatters,
	[ControlStrategyRely] = @ControlStrategyRely,
	[RotationTestApply] = @RotationTestApply
WHERE
	[ProjectID] = @ProjectID
	AND [ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateSubComNoteData')
   BEGIN
       DROP  Procedure  usp_UpdateSubComNoteData
	END
GO

--region [dbo].[usp_UpdateSubComNoteData]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateSubComNoteData]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateSubComNoteData]
	@GUID varchar(50),
	@ProjectID varchar(50),
	@StruCode varchar(255),
	@EliminationNO varchar(255),
	@ComProjectID varchar(255),
	@FormCode varchar(50),
	@NoteCode varchar(100),
	@IsGdh int,
	@Bth nvarchar(255),
	@CheckData decimal(20, 2)
AS

SET NOCOUNT ON

UPDATE [dbo].[SubComNoteData] SET
	[ProjectID] = @ProjectID,
	[StruCode] = @StruCode,
	[EliminationNO] = @EliminationNO,
	[ComProjectID] = @ComProjectID,
	[FormCode] = @FormCode,
	[NoteCode] = @NoteCode,
	[IsGdh] = @IsGdh,
	[Bth] = @Bth,
	[CheckData] = @CheckData
WHERE
	[GUID] = @GUID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateSubComNoteDataDetail')
   BEGIN
       DROP  Procedure  usp_UpdateSubComNoteDataDetail
	END
GO

--region [dbo].[usp_UpdateSubComNoteDataDetail]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateSubComNoteDataDetail]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateSubComNoteDataDetail]
	@GUID varchar(50),
	@UpperGUID varchar(50),
	@ProjectID varchar(50),
	@StruCode varchar(255),
	@ComProjectID varchar(255),
	@FormCode varchar(50),
	@NoteCode varchar(100),
	@ColumnCode varchar(50),
	@NumberField decimal(20, 2),
	@TextField nvarchar(255),
	@DateField datetime
AS

SET NOCOUNT ON

UPDATE [dbo].[SubComNoteDataDetail] SET
	[UpperGUID] = @UpperGUID,
	[ProjectID] = @ProjectID,
	[StruCode] = @StruCode,
	[ComProjectID] = @ComProjectID,
	[FormCode] = @FormCode,
	[NoteCode] = @NoteCode,
	[ColumnCode] = @ColumnCode,
	[NumberField] = @NumberField,
	[TextField] = @TextField,
	[DateField] = @DateField
WHERE
	[GUID] = @GUID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateSubTBCombination')
   BEGIN
       DROP  Procedure  usp_UpdateSubTBCombination
	END
GO

--region [dbo].[usp_UpdateSubTBCombination]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateSubTBCombination]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateSubTBCombination]
	@GUID varchar(50),
	@ProjectID varchar(50),
	@StruCode varchar(50),
	@ComProjectID varchar(255),
	@FsCode varchar(50),
	@Yefx int,
	@FsName nvarchar(50),
	@Unchecked decimal(20, 2),
	@UncheckedCeeJF decimal(20, 2),
	@UncheckedCeeDF decimal(20, 2),
	@UncheckedCFSData decimal(20, 2),
	@Checked decimal(20, 2),
	@CheckedCeeJF decimal(20, 2),
	@CheckedCeeDF decimal(20, 2),
	@CheckedCFSData decimal(20, 2)
AS

SET NOCOUNT ON

UPDATE [dbo].[SubTBCombination] SET
	[ProjectID] = @ProjectID,
	[StruCode] = @StruCode,
	[ComProjectID] = @ComProjectID,
	[FsCode] = @FsCode,
	[Yefx] = @Yefx,
	[FsName] = @FsName,
	[Unchecked] = @Unchecked,
	[UncheckedCeeJF] = @UncheckedCeeJF,
	[UncheckedCeeDF] = @UncheckedCeeDF,
	[UncheckedCFSData] = @UncheckedCFSData,
	[Checked] = @Checked,
	[CheckedCeeJF] = @CheckedCeeJF,
	[CheckedCeeDF] = @CheckedCeeDF,
	[CheckedCFSData] = @CheckedCFSData
WHERE
	[GUID] = @GUID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateTBAdjustedItems')
   BEGIN
       DROP  Procedure  usp_UpdateTBAdjustedItems
	END
GO

--region [dbo].[usp_UpdateTBAdjustedItems]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateTBAdjustedItems]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateTBAdjustedItems]
	@ProjectID varchar(100),
	@AdjustedNO varchar(50),
	@AdjustedDetails varchar(1000),
	@AdjustedType varchar(5),
	@ReferenceList varchar(50),
	@AdjustedyesNo int,
	@TaxYesNo int,
	@PSYesNo int,
	@ResolveReference varchar(50),
	@FAP varchar(max),
	@IsAdjusted int,
	@CreatorLogin varchar(50),
	@CreatorName varchar(50),
	@Createdtime datetime
AS

SET NOCOUNT ON

UPDATE [dbo].[TBAdjustedItems] SET
	[AdjustedDetails] = @AdjustedDetails,
	[AdjustedType] = @AdjustedType,
	[ReferenceList] = @ReferenceList,
	[AdjustedyesNo] = @AdjustedyesNo,
	[TaxYesNo] = @TaxYesNo,
	[PSYesNo] = @PSYesNo,
	[ResolveReference] = @ResolveReference,
	[FAP] = @FAP,
	[IsAdjusted] = @IsAdjusted,
	[CreatorLogin] = @CreatorLogin,
	[CreatorName] = @CreatorName,
	[Createdtime] = @Createdtime
WHERE
	[ProjectID] = @ProjectID
	AND [AdjustedNO] = @AdjustedNO

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateTBAdjustedSubItems')
   BEGIN
       DROP  Procedure  usp_UpdateTBAdjustedSubItems
	END
GO

--region [dbo].[usp_UpdateTBAdjustedSubItems]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateTBAdjustedSubItems]
-- Date Generated: 2018年8月18日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateTBAdjustedSubItems]
	@ProjectID varchar(100),
	@AdjustedNO varchar(50),
	@ID varchar(50),
	@SortID int,
	@FSCode varchar(50),
	@FSName varchar(500),
	@AccountCode varchar(100),
	@AuxiliaryCode varchar(100),
	@AccAuxName varchar(255),
	@Jd int,
	@Jfje decimal(20, 2),
	@Dfje decimal(20, 2),
	@Fsje decimal(20, 2),
	@VoucherID int
AS

SET NOCOUNT ON

UPDATE [dbo].[TBAdjustedSubItems] SET
	[SortID] = @SortID,
	[FSCode] = @FSCode,
	[FSName] = @FSName,
	[AccountCode] = @AccountCode,
	[AuxiliaryCode] = @AuxiliaryCode,
	[AccAuxName] = @AccAuxName,
	[Jd] = @Jd,
	[Jfje] = @Jfje,
	[Dfje] = @Dfje,
	[Fsje] = @Fsje,
	[VoucherID] = @VoucherID
WHERE
	[ProjectID] = @ProjectID
	AND [AdjustedNO] = @AdjustedNO
	AND [ID] = @ID

--endregion



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateTbAppendTable')
   BEGIN
       DROP  Procedure  usp_UpdateTbAppendTable
	END
GO

--region [dbo].[usp_UpdateTbAppendTable]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateTbAppendTable]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateTbAppendTable]
	@ID varchar(50),
	@ProjectID varchar(100),
	@FSName nvarchar(100),
	@FSType int,
	@AssociatedCode varchar(max),
	@CombinationCode varchar(max),
	@SortID int,
	@Orderid int,
	@NoteSort varchar(50),
	@YSbbQmye decimal(20, 2),
	@QmyeFormula varchar(1000),
	@YSbbQcye decimal(20, 2),
	@UncheckedVariationAnalysis varchar(1000),
	@UncheckedProportionsAnalysis varchar(1000),
	@CheckedVariationAnalysis varchar(1000),
	@CheckedProportionsAnalysis varchar(1000),
	@QcyeFormulaAccount varchar(1000),
	@QcyeFormulaStructure varchar(1000),
	@CheckedFormulaAccount varchar(1000),
	@CheckedFormulaStructure varchar(1000)
AS

SET NOCOUNT ON

UPDATE [dbo].[TbAppendTable] SET
	[FSName] = @FSName,
	[FSType] = @FSType,
	[AssociatedCode] = @AssociatedCode,
	[CombinationCode] = @CombinationCode,
	[SortID] = @SortID,
	[Orderid] = @Orderid,
	[NoteSort] = @NoteSort,
	[YSbbQmye] = @YSbbQmye,
	[QmyeFormula] = @QmyeFormula,
	[YSbbQcye] = @YSbbQcye,
	[UncheckedVariationAnalysis] = @UncheckedVariationAnalysis,
	[UncheckedProportionsAnalysis] = @UncheckedProportionsAnalysis,
	[CheckedVariationAnalysis] = @CheckedVariationAnalysis,
	[CheckedProportionsAnalysis] = @CheckedProportionsAnalysis,
	[QcyeFormulaAccount] = @QcyeFormulaAccount,
	[QcyeFormulaStructure] = @QcyeFormulaStructure,
	[CheckedFormulaAccount] = @CheckedFormulaAccount,
	[CheckedFormulaStructure] = @CheckedFormulaStructure
WHERE
	[ID] = @ID
	AND [ProjectID] = @ProjectID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateTBAux')
   BEGIN
       DROP  Procedure  usp_UpdateTBAux
	END
GO

--region [dbo].[usp_UpdateTBAux]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateTBAux]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateTBAux]
	@ProjectID varchar(100),
	@AccountCode varchar(100),
	@AuxiliaryCode varchar(100),
	@AuxiliaryName varchar(100),
	@FSCode varchar(50),
	@kmsx varchar(100),
	@YEFX int,
	@TBGrouping nvarchar(50),
	@Sqqmye decimal(20, 2),
	@Qqccgz decimal(20, 2),
	@jfje decimal(20, 2),
	@dfje decimal(20, 2),
	@qmye decimal(20, 2)
AS

SET NOCOUNT ON

UPDATE [dbo].[TBAux] SET
	[AuxiliaryName] = @AuxiliaryName,
	[FSCode] = @FSCode,
	[kmsx] = @kmsx,
	[YEFX] = @YEFX,
	[TBGrouping] = @TBGrouping,
	[Sqqmye] = @Sqqmye,
	[Qqccgz] = @Qqccgz,
	[jfje] = @jfje,
	[dfje] = @dfje,
	[qmye] = @qmye
WHERE
	[ProjectID] = @ProjectID
	AND [AccountCode] = @AccountCode
	AND [AuxiliaryCode] = @AuxiliaryCode

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateTBCombination')
   BEGIN
       DROP  Procedure  usp_UpdateTBCombination
	END
GO

--region [dbo].[usp_UpdateTBCombination]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateTBCombination]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateTBCombination]
	@ProjectID varchar(50),
	@StruCode varchar(50),
	@FsCode varchar(50),
	@Yefx int,
	@FsName nvarchar(50),
	@FSType int,
	@TBType int,
	@Unchecked decimal(20, 2),
	@UncheckedCeeJF decimal(20, 2),
	@UncheckedCeeDF decimal(20, 2),
	@UncheckedCFSData decimal(20, 2),
	@Checked decimal(20, 2),
	@CheckedCeeJF decimal(20, 2),
	@CheckedCeeDF decimal(20, 2),
	@CheckedCFSData decimal(20, 2),
	@PY1 decimal(20, 2),
	@PY2 decimal(20, 2),
	@PY3 decimal(20, 2),
	@PY4 decimal(20, 2),
	@PY5 decimal(20, 2),
	@TBGrouping nvarchar(50)
AS

SET NOCOUNT ON

UPDATE [dbo].[TBCombination] SET
	[Yefx] = @Yefx,
	[FsName] = @FsName,
	[FSType] = @FSType,
	[TBType] = @TBType,
	[Unchecked] = @Unchecked,
	[UncheckedCeeJF] = @UncheckedCeeJF,
	[UncheckedCeeDF] = @UncheckedCeeDF,
	[UncheckedCFSData] = @UncheckedCFSData,
	[Checked] = @Checked,
	[CheckedCeeJF] = @CheckedCeeJF,
	[CheckedCeeDF] = @CheckedCeeDF,
	[CheckedCFSData] = @CheckedCFSData,
	[PY1] = @PY1,
	[PY2] = @PY2,
	[PY3] = @PY3,
	[PY4] = @PY4,
	[PY5] = @PY5,
	[TBGrouping] = @TBGrouping
WHERE
	[ProjectID] = @ProjectID
	AND [StruCode] = @StruCode
	AND [FsCode] = @FsCode

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateTBDetail')
   BEGIN
       DROP  Procedure  usp_UpdateTBDetail
	END
GO
--region [dbo].[usp_UpdateTBDetail]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateTBDetail]
-- Date Generated: 2018年10月12日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateTBDetail]
	@ID varchar(50),
	@ProjectID varchar(100),
	@FSCode varchar(50),
	@AccountCode varchar(100),
	@AuxiliaryCode varchar(100),
	@AccAuxName varchar(100),
	@DataType int,
	@TBGrouping varchar(100),
	@TBType int,
	@IsAccMx int,
	@IsMx int,
	@IsAux int,
	@kmsx varchar(100),
	@Yefx int,
	@SourceFSCode varchar(50),
	@Sqqmye decimal(20, 2),
	@Qqccgz decimal(20, 2),
	@jfje decimal(20, 2),
	@dfje decimal(20, 2),
	@CrjeJF decimal(20, 2),
	@CrjeDF decimal(20, 2),
	@AjeJF decimal(20, 2),
	@AjeDF decimal(20, 2),
	@RjeJF decimal(20, 2),
	@RjeDF decimal(20, 2),
	@TaxBase decimal(20, 2),
	@PY1 decimal(20, 2),
	@jfje1 decimal(20, 2),
	@dfje1 decimal(20, 2),
	@jfje2 decimal(20, 2),
	@dfje2 decimal(20, 2)
AS

SET NOCOUNT ON

UPDATE [dbo].[TBDetail] SET
	[FSCode] = @FSCode,
	[AccountCode] = @AccountCode,
	[AuxiliaryCode] = @AuxiliaryCode,
	[AccAuxName] = @AccAuxName,
	[DataType] = @DataType,
	[TBGrouping] = @TBGrouping,
	[TBType] = @TBType,
	[IsAccMx] = @IsAccMx,
	[IsMx] = @IsMx,
	[IsAux] = @IsAux,
	[kmsx] = @kmsx,
	[Yefx] = @Yefx,
	[SourceFSCode] = @SourceFSCode,
	[Sqqmye] = @Sqqmye,
	[Qqccgz] = @Qqccgz,
	[jfje] = @jfje,
	[dfje] = @dfje,
	[CrjeJF] = @CrjeJF,
	[CrjeDF] = @CrjeDF,
	[AjeJF] = @AjeJF,
	[AjeDF] = @AjeDF,
	[RjeJF] = @RjeJF,
	[RjeDF] = @RjeDF,
	[TaxBase] = @TaxBase,
	[PY1] = @PY1,
	[jfje1] = @jfje1,
	[dfje1] = @dfje1,
	[jfje2] = @jfje2,
	[dfje2] = @dfje2
WHERE
	[ID] = @ID
	AND [ProjectID] = @ProjectID

--endregion

GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateTBDetailExtra')
   BEGIN
       DROP  Procedure  usp_UpdateTBDetailExtra
	END
GO

--region [dbo].[usp_UpdateTBDetailExtra]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateTBDetailExtra]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateTBDetailExtra]
	@ID varchar(50),
	@ProjectID varchar(100),
	@ReferenceList varchar(50),
	@SelectedSampleLebelYesNo int,
	@MaterialityProgram int,
	@SelectSampleMethod int,
	@DrSelectedSampleLebelYesNo int,
	@DrMaterialityProgram int,
	@DrSelectSampleMethod int,
	@CrSelectedSampleLebelYesNo int,
	@CrMaterialityProgram int,
	@CrSelectSampleMethod int,
	@SampleSelectedYesNo int,
	@SampleSelectedType int,
	@ConsultBalance decimal(20, 2),
	@ConfirmBalance decimal(20, 2),
	@ConsultType varchar(100),
	@RelatedClientID nvarchar(50),
	@SampleSelecteStep int,
	@ErrorYesNO int,
	@StepofSample int,
	@AdjustedNo varchar(50),
	@AccountProperty varchar(500),
	@Memo varchar(1000)
AS

SET NOCOUNT ON

UPDATE [dbo].[TBDetailExtra] SET
	[ReferenceList] = @ReferenceList,
	[SelectedSampleLebelYesNo] = @SelectedSampleLebelYesNo,
	[MaterialityProgram] = @MaterialityProgram,
	[SelectSampleMethod] = @SelectSampleMethod,
	[DrSelectedSampleLebelYesNo] = @DrSelectedSampleLebelYesNo,
	[DrMaterialityProgram] = @DrMaterialityProgram,
	[DrSelectSampleMethod] = @DrSelectSampleMethod,
	[CrSelectedSampleLebelYesNo] = @CrSelectedSampleLebelYesNo,
	[CrMaterialityProgram] = @CrMaterialityProgram,
	[CrSelectSampleMethod] = @CrSelectSampleMethod,
	[SampleSelectedYesNo] = @SampleSelectedYesNo,
	[SampleSelectedType] = @SampleSelectedType,
	[ConsultBalance] = @ConsultBalance,
	[ConfirmBalance] = @ConfirmBalance,
	[ConsultType] = @ConsultType,
	[RelatedClientID] = @RelatedClientID,
	[SampleSelecteStep] = @SampleSelecteStep,
	[ErrorYesNO] = @ErrorYesNO,
	[StepofSample] = @StepofSample,
	[AdjustedNo] = @AdjustedNo,
	[AccountProperty] = @AccountProperty,
	[Memo] = @Memo
WHERE
	[ID] = @ID
	AND [ProjectID] = @ProjectID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateTBEliminationItems')
   BEGIN
       DROP  Procedure  usp_UpdateTBEliminationItems
	END
GO

--region [dbo].[usp_UpdateTBEliminationItems]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateTBEliminationItems]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateTBEliminationItems]
	@ProjectID varchar(100),
	@EliminationNO varchar(50),
	@EliminationType int,
	@RelatedProject1 varchar(50),
	@RelatedProject2 varchar(50),
	@EliminationDetails varchar(1000),
	@InterTransaction int,
	@EliminationyesNo int,
	@CreatorLogin varchar(50),
	@CreatorName varchar(50),
	@Createdtime datetime
AS

SET NOCOUNT ON

UPDATE [dbo].[TBEliminationItems] SET
	[EliminationType] = @EliminationType,
	[RelatedProject1] = @RelatedProject1,
	[RelatedProject2] = @RelatedProject2,
	[EliminationDetails] = @EliminationDetails,
	[InterTransaction] = @InterTransaction,
	[EliminationyesNo] = @EliminationyesNo,
	[CreatorLogin] = @CreatorLogin,
	[CreatorName] = @CreatorName,
	[Createdtime] = @Createdtime
WHERE
	[ProjectID] = @ProjectID
	AND [EliminationNO] = @EliminationNO

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateTBEliminationSubItems')
   BEGIN
       DROP  Procedure  usp_UpdateTBEliminationSubItems
	END
GO

--region [dbo].[usp_UpdateTBEliminationSubItems]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateTBEliminationSubItems]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateTBEliminationSubItems]
	@ProjectID varchar(100),
	@EliminationNO varchar(50),
	@ID varchar(50),
	@SortID int,
	@EliminationPID varchar(50),
	@FSCode varchar(50),
	@FSName varchar(50),
	@AccountCode varchar(100),
	@AccountName varchar(100),
	@AuxiliaryCode varchar(100),
	@AuxiliaryName varchar(100),
	@JD int,
	@Unchecked decimal(20, 2),
	@Checked decimal(20, 2)
AS

SET NOCOUNT ON

UPDATE [dbo].[TBEliminationSubItems] SET
	[SortID] = @SortID,
	[EliminationPID] = @EliminationPID,
	[FSCode] = @FSCode,
	[FSName] = @FSName,
	[AccountCode] = @AccountCode,
	[AccountName] = @AccountName,
	[AuxiliaryCode] = @AuxiliaryCode,
	[AuxiliaryName] = @AuxiliaryName,
	[JD] = @JD,
	[Unchecked] = @Unchecked,
	[Checked] = @Checked
WHERE
	[ProjectID] = @ProjectID
	AND [ID] = @ID
	AND [EliminationNO] = @EliminationNO

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateTBFS')
   BEGIN
       DROP  Procedure  usp_UpdateTBFS
	END
GO

--region [dbo].[usp_UpdateTBFS]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateTBFS]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateTBFS]
	@ProjectID varchar(100),
	@FSCode varchar(50),
	@FsName varchar(100),
	@FSType int,
	@TBType int,
	@IsMx int,
	@Kmsx varchar(100),
	@Yefx int,
	@TBGrouping varchar(50),
	@Sqqmye decimal(20, 2),
	@Qqccgz decimal(20, 2),
	@jfje decimal(20, 2),
	@dfje decimal(20, 2),
	@CrjeJF decimal(20, 2),
	@CrjeDF decimal(20, 2),
	@AjeJF decimal(20, 2),
	@AjeDF decimal(20, 2),
	@RjeJF decimal(20, 2),
	@RjeDF decimal(20, 2),
	@TaxBase decimal(20, 2),
	@YearEarlier decimal(20, 2),
	@PY1 decimal(20, 2),
	@PyTaxBase decimal(20, 2),
	@Random decimal(20, 2),
	@GrossPretax int,
	@jfje1 decimal(20, 2),
	@dfje1 decimal(20, 2),
	@jfje2 decimal(20, 2),
	@dfje2 decimal(20, 2),
	@Memo nvarchar(500)
AS

SET NOCOUNT ON

UPDATE [dbo].[TBFS] SET
	[FsName] = @FsName,
	[FSType] = @FSType,
	[TBType] = @TBType,
	[IsMx] = @IsMx,
	[Kmsx] = @Kmsx,
	[Yefx] = @Yefx,
	[TBGrouping] = @TBGrouping,
	[Sqqmye] = @Sqqmye,
	[Qqccgz] = @Qqccgz,
	[jfje] = @jfje,
	[dfje] = @dfje,
	[CrjeJF] = @CrjeJF,
	[CrjeDF] = @CrjeDF,
	[AjeJF] = @AjeJF,
	[AjeDF] = @AjeDF,
	[RjeJF] = @RjeJF,
	[RjeDF] = @RjeDF,
	[TaxBase] = @TaxBase,
	[YearEarlier] = @YearEarlier,
	[PY1] = @PY1,
	[PyTaxBase] = @PyTaxBase,
	[Random] = @Random,
	[GrossPretax] = @GrossPretax,
	[jfje1] = @jfje1,
	[dfje1] = @dfje1,
	[jfje2] = @jfje2,
	[dfje2] = @dfje2,
	[Memo] = @Memo
WHERE
	[ProjectID] = @ProjectID
	AND [FSCode] = @FSCode

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateTBVoucher')
   BEGIN
       DROP  Procedure  usp_UpdateTBVoucher
	END
GO

--region [dbo].[usp_UpdateTBVoucher]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateTBVoucher]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateTBVoucher]
	@VoucherID varchar(50),
	@Clientid varchar(100),
	@ProjectID varchar(100),
	@IncNo varchar(50),
	@Date datetime,
	@Period int,
	@Pzlx varchar(255),
	@Pzh varchar(255),
	@Djh int,
	@AccountCode varchar(100),
	@ProjectCode varchar(100),
	@Zy varchar(max),
	@Jfje decimal(20, 2),
	@Dfje decimal(20, 2),
	@Jfsl decimal(20, 4),
	@Dfsl decimal(20, 4),
	@ZDR varchar(255),
	@dfkm varchar(200),
	@Jd int,
	@Fsje decimal(20, 2),
	@Wbdm varchar(200),
	@Wbje decimal(20, 4),
	@Hl decimal(20, 4),
	@FLLX int,
	@SampleSelectedYesNo int,
	@SampleSelectedType int,
	@TBGrouping varchar(200),
	@EASREF varchar(5),
	@AccountingAge int,
	@qmyegc int,
	@Stepofsample int,
	@ErrorYesNo int,
	@FDetailID int
AS

SET NOCOUNT ON

UPDATE [dbo].[TBVoucher] SET
	[Clientid] = @Clientid,
	[ProjectID] = @ProjectID,
	[IncNo] = @IncNo,
	[Date] = @Date,
	[Period] = @Period,
	[Pzlx] = @Pzlx,
	[Pzh] = @Pzh,
	[Djh] = @Djh,
	[AccountCode] = @AccountCode,
	[ProjectCode] = @ProjectCode,
	[Zy] = @Zy,
	[Jfje] = @Jfje,
	[Dfje] = @Dfje,
	[Jfsl] = @Jfsl,
	[Dfsl] = @Dfsl,
	[ZDR] = @ZDR,
	[dfkm] = @dfkm,
	[Jd] = @Jd,
	[Fsje] = @Fsje,
	[Wbdm] = @Wbdm,
	[Wbje] = @Wbje,
	[Hl] = @Hl,
	[FLLX] = @FLLX,
	[SampleSelectedYesNo] = @SampleSelectedYesNo,
	[SampleSelectedType] = @SampleSelectedType,
	[TBGrouping] = @TBGrouping,
	[EASREF] = @EASREF,
	[AccountingAge] = @AccountingAge,
	[qmyegc] = @qmyegc,
	[Stepofsample] = @Stepofsample,
	[ErrorYesNo] = @ErrorYesNo,
	[FDetailID] = @FDetailID
WHERE
	[VoucherID] = @VoucherID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateTBWlhz')
   BEGIN
       DROP  Procedure  usp_UpdateTBWlhz
	END
GO

--region [dbo].[usp_UpdateTBWlhz]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   HUASHENG using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateTBWlhz]
-- Date Generated: 2019年1月2日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateTBWlhz]
	@ProjectID varchar(100),
	@ID varchar(50),
	@HZNumber varchar(50),
	@HZSortID varchar(10),
	@AccountName varchar(255),
	@OtherMatters nvarchar(500),
	@ConsultDate datetime,
	@ConfirmDate datetime,
	@PostCode varchar(50),
	@PostAddress nvarchar(1000),
	@Recipient nvarchar(100),
	@sample int,
	@Sendletter int,
	@Reason nvarchar(1000)
AS

SET NOCOUNT ON

UPDATE [dbo].[TBWlhz] SET
	[HZNumber] = @HZNumber,
	[HZSortID] = @HZSortID,
	[AccountName] = @AccountName,
	[OtherMatters] = @OtherMatters,
	[ConsultDate] = @ConsultDate,
	[ConfirmDate] = @ConfirmDate,
	[PostCode] = @PostCode,
	[PostAddress] = @PostAddress,
	[Recipient] = @Recipient,
	[sample] = @sample,
	[Sendletter] = @Sendletter,
	[Reason] = @Reason
WHERE
	[ProjectID] = @ProjectID
	AND [ID] = @ID

--endregion


GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateTbwlzl')
   BEGIN
       DROP  Procedure  usp_UpdateTbwlzl
	END
GO

--region [dbo].[usp_UpdateTbwlzl]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateTbwlzl]
-- Date Generated: 2018年8月18日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateTbwlzl]
	@ID varchar(50),
	@ProjectID varchar(100),
	@fsCode varchar(50),
	@AccountCode varchar(100),
	@AuxiliaryCode varchar(100),
	@AgeAnalysis int,
	@ZLD1 decimal(20, 2),
	@ZLD2 decimal(20, 2),
	@ZLD3 decimal(20, 2),
	@ZLD4 decimal(20, 2),
	@ZLD5 decimal(20, 2),
	@ZLD6 decimal(20, 2),
	@ZLD7 decimal(20, 2),
	@ZLD8 decimal(20, 2),
	@ZLD9 decimal(20, 2),
	@significant int,
	@Impairmenttestmethod int,
	@impairmentamount decimal(20, 2),
	@BalanceAnalysis int,
	@memo varchar(500),
	@HZZBZLD1 decimal(20, 2),
	@HZZBZLD2 decimal(20, 2),
	@HZZBZLD3 decimal(20, 2),
	@HZZBZLD4 decimal(20, 2),
	@HZZBZLD5 decimal(20, 2),
	@HZZBZLD6 decimal(20, 2),
	@HZZBZLD7 decimal(20, 2),
	@HZZBZLD8 decimal(20, 2),
	@HZZBZLD9 decimal(20, 2),
	@Creditperiod int
AS

SET NOCOUNT ON

UPDATE [dbo].[Tbwlzl] SET
	[fsCode] = @fsCode,
	[AccountCode] = @AccountCode,
	[AuxiliaryCode] = @AuxiliaryCode,
	[AgeAnalysis] = @AgeAnalysis,
	[ZLD1] = @ZLD1,
	[ZLD2] = @ZLD2,
	[ZLD3] = @ZLD3,
	[ZLD4] = @ZLD4,
	[ZLD5] = @ZLD5,
	[ZLD6] = @ZLD6,
	[ZLD7] = @ZLD7,
	[ZLD8] = @ZLD8,
	[ZLD9] = @ZLD9,
	[significant] = @significant,
	[Impairmenttestmethod] = @Impairmenttestmethod,
	[impairmentamount] = @impairmentamount,
	[BalanceAnalysis] = @BalanceAnalysis,
	[memo] = @memo,
	[HZZBZLD1] = @HZZBZLD1,
	[HZZBZLD2] = @HZZBZLD2,
	[HZZBZLD3] = @HZZBZLD3,
	[HZZBZLD4] = @HZZBZLD4,
	[HZZBZLD5] = @HZZBZLD5,
	[HZZBZLD6] = @HZZBZLD6,
	[HZZBZLD7] = @HZZBZLD7,
	[HZZBZLD8] = @HZZBZLD8,
	[HZZBZLD9] = @HZZBZLD9,
	[Creditperiod] = @Creditperiod
WHERE
	[ID] = @ID
	AND [ProjectID] = @ProjectID

--endregion



GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'P' AND name = 'usp_UpdateWlhzandTB')
   BEGIN
       DROP  Procedure  usp_UpdateWlhzandTB
	END
GO

--region [dbo].[usp_UpdateWlhzandTB]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Administrator using CodeSmith 6.0.0.0
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[usp_UpdateWlhzandTB]
-- Date Generated: 2018年8月13日
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[usp_UpdateWlhzandTB]
	@ProjectID varchar(100),
	@ID varchar(50),
	@WlhzID varchar(50),
	@FSCode varchar(50),
	@AccountCode varchar(255),
	@AuxiliaryCode varchar(255),
	@AccountName varchar(255),
	@Sendletteryesno int
AS

SET NOCOUNT ON

UPDATE [dbo].[WlhzandTB] SET
	[WlhzID] = @WlhzID,
	[FSCode] = @FSCode,
	[AccountCode] = @AccountCode,
	[AuxiliaryCode] = @AuxiliaryCode,
	[AccountName] = @AccountName,
	[Sendletteryesno] = @Sendletteryesno
WHERE
	[ProjectID] = @ProjectID
	AND [ID] = @ID

--endregion




GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[ConvertMeterialityProgramtoInt]') AND xtype IN ( N'FN', N'IF', N'TF' ) ) 
   BEGIN
       DROP FUNCTION [dbo].[ConvertMeterialityProgramtoInt]
   END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu Baden
  Project   : EAS -实质性测试程序由文字转换为 数字
  Created   : 2010/06/25 	by dengll
  Updated   : -
  Version   : 1.0.0
********************************************************************************/
 CREATE FUNCTION [dbo].[ConvertMeterialityProgramtoInt] ( @MeterialityProgram varchar(100) )
RETURNS int
 AS 
        BEGIN 
            DECLARE @RESULT int
            
            IF(@MeterialityProgram='细节测试')
				SET @RESULT = 1
			ELSE IF(@MeterialityProgram='实质性分析程序')
				SET @RESULT = 0
			ELSE
				SET @RESULT =-1
            RETURN @RESULT 
        END







GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[ConvertMeterialityProgramtoStr]') AND xtype IN ( N'FN', N'IF', N'TF' ) ) 
   BEGIN
       DROP FUNCTION [dbo].[ConvertMeterialityProgramtoStr]
   END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu Baden
  Project   : EAS -抽样数字转换成文字
  Created   : 2010/06/25 	by dengll
  Updated   : -
  Version   : 1.0.0
********************************************************************************/
 CREATE FUNCTION ConvertMeterialityProgramtoStr ( @MeterialityProgram int )
RETURNS varchar(100)
 AS 
        BEGIN 
            DECLARE @RESULT varchar(100)
            
            IF(@MeterialityProgram=1)
				SET @RESULT = '细节测试'
			ELSE IF(@MeterialityProgram=0)
				SET @RESULT = '实质性分析程序'
			ELSE
				SET @RESULT =''
            RETURN @RESULT 
        END 

GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[ConvertSelectSampleMethodtoInt]') AND xtype IN ( N'FN', N'IF', N'TF' ) ) 
   BEGIN
       DROP FUNCTION [dbo].[ConvertSelectSampleMethodtoInt]
   END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu Baden
  Project   : EAS -抽样方法由文字转换为 数字
  Created   : 2010/06/25 	by dengll
  Updated   : -
  Version   : 1.0.0
********************************************************************************/
 CREATE FUNCTION ConvertSelectSampleMethodtoInt ( @SelectSampleMethod varchar(100) )
		RETURNS int
 AS 
        BEGIN 
            DECLARE @RESULT int
            
            IF(@SelectSampleMethod='统计抽样')
				SET @RESULT = 1
			ELSE IF(@SelectSampleMethod='非统计抽样')
				SET @RESULT = 2
			ELSE IF(@SelectSampleMethod='全部项目')
				SET @RESULT =3
			ELSE
				SET @RESULT =0
            RETURN @RESULT 
        END 








GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[ConvertSelectSampleMethodtoStr]') AND xtype IN ( N'FN', N'IF', N'TF' ) ) 
   BEGIN
       DROP FUNCTION [dbo].[ConvertSelectSampleMethodtoStr]
   END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu Baden
  Project   : EAS -抽样数字转换成文字
  Created   : 2010/06/25 	by dengll
  Updated   : -
  Version   : 1.0.0
********************************************************************************/
 CREATE FUNCTION [dbo].[ConvertSelectSampleMethodtoStr] ( @SelectSampleMethod INT )
		RETURNS VARCHAR(100)
 AS 
        BEGIN 
            DECLARE @RESULT VARCHAR(100)
            
            IF(@SelectSampleMethod=1)
				SET @RESULT = '统计抽样'
			ELSE IF(@SelectSampleMethod=2)
				SET @RESULT = '非统计抽样'
			ELSE IF(@SelectSampleMethod=3)
				SET @RESULT ='全部项目'
			ELSE
				SET @RESULT =''
            RETURN @RESULT 
        END







GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[fn_getmonthlastday]') AND xtype IN ( N'FN', N'IF', N'TF' ) ) 
   BEGIN
       DROP FUNCTION [dbo].[fn_getmonthlastday]
   END
GO

CREATE function dbo.fn_getmonthlastday
(@y int, --> 指定年份
 @m int  --> 指定月份
) returns varchar(20)
as
begin
 declare @x varchar(20)
 
 select @x=convert(varchar,
                   dateadd(d,-1,dateadd(m,1,rtrim(@y)+'-'+rtrim(@m)+'-01')),
                   111)
 
 return @x
end

GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[fn_SplitTSQL]') AND xtype IN ( N'FN', N'IF', N'TF' ) ) 
   BEGIN
       DROP FUNCTION [dbo].[fn_SplitTSQL]
   END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu  Baden
  Project   : EAS -拆分字符串并返回一表table
  Created   : 2010/08/28 by len
  Updated   : -
  Version   : 1.0.0
********************************************************************************/ 
CREATE FUNCTION dbo.fn_SplitTSQL(@SourceSql varchar(8000),@StrSeprate varchar(10))
	returns @temp table(code varchar(100)	COLLATE Chinese_PRC_CS_AS_KS_WS	NULL)
as 
begin
declare @i int
set @SourceSql=rtrim(ltrim(@SourceSql))
set @i=charindex(@StrSeprate,@SourceSql)
while @i>=1
begin
insert @temp values(left(@SourceSql,@i-1))
set @SourceSql=substring(@SourceSql,@i+1,len(@SourceSql)-@i)
set @i=charindex(@StrSeprate,@SourceSql)
end
if @SourceSql<>''
insert @temp values(@SourceSql)
return 
end

GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[GetAllChildFSCode]') AND xtype IN ( N'FN', N'IF', N'TF' ) ) 
   BEGIN
       DROP FUNCTION [dbo].[GetAllChildFSCode]
   END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu Baden
  Project   : EAS -查询所有子集报表项目
  Created   : 2017/08/24 	by pwg
  Version   : 1.0.0
********************************************************************************/
 CREATE FUNCTION [dbo].[GetAllChildFSCode] ( @ProjectID	varchar(50),@FSCode	varchar(50) )
RETURNS @Table TABLE(FSCode nvarchar(100),FSName nvarchar(100),IsMx int)
 AS 
        BEGIN 
                with temp as(
                   select
                        FSCode,
                        FSName, 
                        IsMx
                    from 
                        view_tbfs 
                    where 
                        ProjectID=@ProjectID
                        and FSCode=@FSCode
                   union  all
                   select
                        b.FSCode,
                        b.FSName, 
                        b.IsMx
                    from 
                        temp a,view_tbfs b
                    where 
                         a.FSCode=b.TBGrouping and
                         b.ProjectID=@ProjectID
                    )
                    insert @table select * from temp
return      
        END







GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[GetAllChildFSInfo]') AND xtype IN ( N'FN', N'IF', N'TF' ) ) 
   BEGIN
       DROP FUNCTION [dbo].[GetAllChildFSInfo]
   END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu Baden
  Project   : EAS -查询所有子集报表项目
  Created   : 2017/08/24 	by pwg
  Version   : 1.0.0
********************************************************************************/
 CREATE FUNCTION GetAllChildFSInfo ( @ProjectID	varchar(50),@FSCode	varchar(50) )
RETURNS @Table TABLE(FSCode nvarchar(100) collate Chinese_PRC_CS_AS_KS_WS,FSName nvarchar(100),IsMx int)
 AS 
        BEGIN 
                with temp as(
                   select
                        FSCode,
                        FSName, 
                        IsMx
                    from 
                        view_tbfs 
                    where 
                        ProjectID=@ProjectID
                        and FSCode=@FSCode
                   union  all
                   select
                        b.FSCode,
                        b.FSName, 
                        b.IsMx
                    from 
                        temp a,view_tbfs b
                    where 
                         a.FSCode=b.TBGrouping and
                         b.ProjectID=@ProjectID
                    )
                    insert @table select * from temp
return      
        END 







GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[GetChildAccountInfo]') AND xtype IN ( N'FN', N'IF', N'TF' ) ) 
   BEGIN
       DROP FUNCTION [dbo].[GetChildAccountInfo]
   END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu Baden
  Project   : EAS -查询所有子集会计科目项目
  Created   : 2017/08/24 	by pwg
  Version   : 1.0.0
********************************************************************************/
 CREATE FUNCTION [dbo].[GetChildAccountInfo] ( @ProjectID	varchar(50), @FSCode	varchar(50),@AccountCode	varchar(50) )
RETURNS @Table TABLE(AccountCode nvarchar(100),AccountName nvarchar(100),IsMx int)
 AS 
        BEGIN 
                with temp as(
                   select
                        accountCode,
                        accountName, 
                        IsMx
                    from 
                        view_tbacc
                    where 
                        ProjectID=@ProjectID
                        and accountCode=@AccountCode
                        and FSCode=@FSCode
                   union  all
                   select
                        b.accountCode,
                        b.accountName,
                        b.IsMx
                    from 
                        temp a,view_tbacc b
                    where 
                         a.accountCode=b.TBGrouping and
                         b.ProjectID=@ProjectID
                         and b.FSCode=@FSCode
                    )
                    insert @table select * from temp
return      
        END







GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[GetCutoffTestingNumber]') AND xtype IN ( N'FN', N'IF', N'TF' ) ) 
   BEGIN
       DROP FUNCTION [dbo].[GetCutoffTestingNumber]
   END
GO

/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -获取81180 Cutoff Testing样本量
  Created   : Dengll PM 09-02-25
  Updated   : -
  Version   : 1.0.0
********************************************************************************/ 

CREATE   FUNCTION   [dbo].[GetCutoffTestingNumber] (@R decimal(20,2))
  RETURNS   INT   AS       
  BEGIN
	DECLARE @stylenumber INT
		SET @stylenumber = case (Round((@R/0.7*5),12) - CAST(@R/0.7*5 AS INT))
			WHEN 0
			THEN CAST(@R/0.7*5 AS INT) 
			ELSE CAST(@R/0.7*5 AS INT)+1
		END
  RETURN   @stylenumber
END








GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[GetDFKMCode]') AND xtype IN ( N'FN', N'IF', N'TF' ) ) 
   BEGIN
       DROP FUNCTION [dbo].[GetDFKMCode]
   END
GO
/********************************************************************************
	  Database  : EAS
	  Copyright : 2008 Huapu (Beijing)
	  Customer  : Huapu  Baden
	  Project   : EAS -返回voucher.dfkm对应的kmdm(补充dfkm代码使用)
	  Created   : 2010/08/28 by len
	  Updated   : -
	  Version   : 1.0.0
	********************************************************************************/ 
	 CREATE FUNCTION dbo.GetDFKMCode(@code varchar(200),@pid varchar(100))  
 returns  varchar(100)  
as   
begin  
 declare @txt varchar(1000)  
 declare @tmp table(code varchar(100))  
 insert @tmp  
 select  k.kmdm_jd as code   
 from dbo.fn_SplitTSQL(ltrim(rtrim(@code)),',') a  
 inner join tmpDFKM k  
 on a.code COLLATE Chinese_PRC_CS_AS_KS_WS=ltrim(rtrim(k.kmdm)) COLLATE Chinese_PRC_CS_AS_KS_WS  
 where k.pid=@pid  
  
 SELECT @txt=stuff ((SELECT ','+Code  
   FROM @tmp  
    FOR xml path ('')), 1, 1,'')  
 from @tmp  
 return  @txt;  
end

GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[GetStylebookScopeNumber]') AND xtype IN ( N'FN', N'IF', N'TF' ) ) 
   BEGIN
       DROP FUNCTION [dbo].[GetStylebookScopeNumber]
   END
GO

/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu
  Project   : EAS -获取xxx50 样本数量.向上取整
  Created   : Dengll PM 04.08.2008
  Updated   : -
  Version   : 1.0.0
********************************************************************************/ 

create   FUNCTION   [dbo].[GetStylebookScopeNumber] (@je decimal(20,2),@J decimal(20,2))
  RETURNS   INT   AS       
  BEGIN
	IF(@J=0) RETURN 0
	DECLARE @stylenumber INT
		SET @stylenumber = case (Round((ABS(@JE)/@J),12) - CAST(ABS(@JE)/@J AS INT))
			WHEN 0
			THEN CAST(ABS(@JE)/@J AS INT) 
			ELSE CAST(ABS(@JE)/@J AS INT)+1
		END
  RETURN   @stylenumber
END



GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[GetTypeCode]') AND xtype IN ( N'FN', N'IF', N'TF' ) ) 
   BEGIN
       DROP FUNCTION [dbo].[GetTypeCode]
   END
GO
--判断当前xmdm是否在指定的索引行上
--by dengll
CREATE FUNCTION [dbo].[GetTypeCode]
(
	@kmdm	varchar(max),
	@xmdm	varchar(max),
	@index	int
)
RETURNS VARCHAR(max)
AS
BEGIN
	DECLARE	@CodeTYpe		VARCHAR(max);
	SELECT @CodeTYpe=TYPECODE	FROM	KMTYPE	
		WHERE	TYPECODE=LEFT(@xmdm,LEN(TYPECODE))	AND KMDM=@kmdm	and	ID=@index;
	RETURN @CodeTYpe;
END







GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[GetTypeCodeLeve1]') AND xtype IN ( N'FN', N'IF', N'TF' ) ) 
   BEGIN
       DROP FUNCTION [dbo].[GetTypeCodeLeve1]
   END
GO
CREATE FUNCTION dbo.GetTypeCodeLeve1
	(@kmdm	varchar(max),
		@index	int
	)
RETURNS varchar(max)
AS
begin
	DECLARE	@TCODE	VARCHAR(MAX)
	SELECT @TCODE=TYPECODE	FROM	kmtype	WHERE	ID=@index	and kmdm=@kmdm;
	RETURN @TCODE
end







GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[GetTypeCodeLeve2]') AND xtype IN ( N'FN', N'IF', N'TF' ) ) 
   BEGIN
       DROP FUNCTION [dbo].[GetTypeCodeLeve2]
   END
GO
CREATE FUNCTION dbo.GetTypeCodeLeve2
(
	@pid	varchar(max),
	@xmdm	varchar(max)
)
RETURNS VARCHAR(max)
AS
BEGIN
	DECLARE	@CodeTYpe		VARCHAR(max);
	SELECT	@codeType=typecode	from	dbo.GlobProjectType	
	where	pid=@pid	and	TYPECODE=LEFT(@xmdm,LEN(TYPECODE))
	RETURN @CodeTYpe
END







GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[GetXMName]') AND xtype IN ( N'FN', N'IF', N'TF' ) ) 
   BEGIN
       DROP FUNCTION [dbo].[GetXMName]
   END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu  Baden
  Project   : EAS -by code get project.name
  Created   : 2010/08/28 by len
  Updated   : -
  Version   : 1.0.0
********************************************************************************/ 
CREATE FUNCTION dbo.GetXMName(@split varchar(2),@ProjectID	varchar(100),@code varchar(200))
	returns	 varchar(1000)
as 
begin
	declare	@txt varchar(1000)
	;
	with a1 as(
	select protype.typename+'/'+pro.projectname as Proname from	dbo.fn_SplitTSQL(@code,@split)	sp
	join	project	pro
	on	pro.projectcode	 =sp.code 	and	pro.ProjectID=@ProjectID
	join	dbo.projecttype protype
	on	pro.typecode =proType.TypeCode and protype.ProjectID=@ProjectID)
	
	SELECT @txt = stuff ((SELECT ';'+b.Proname
							  FROM a1 AS b
								  FOR xml path ('')
								  ), 1, 1, ''
								  )
	FROM a1
	return @txt;
end
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[ifnull]') AND xtype IN ( N'FN', N'IF', N'TF' ) ) 
   BEGIN
       DROP FUNCTION [dbo].[ifnull]
   END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu Baden
  Project   : EAS
  Created   : 2017/09/04 	by pwg
  Updated   : -
  Version   : 1.0.0
********************************************************************************/
 CREATE FUNCTION ifnull ( @value varchar(100) )
RETURNS int
 AS 
        BEGIN 
            IF(@value IS NULL or LEN(@value)=0)
		          RETURN 0
	          RETURN 1 
        END







GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[IndexSplterNumber]') AND xtype IN ( N'FN', N'IF', N'TF' ) ) 
   BEGIN
       DROP FUNCTION [dbo].[IndexSplterNumber]
   END
GO
--判断当前xmdm是否在指定的索引行上
--by dengll
CREATE FUNCTION IndexSplterNumber
(
	@SourceSql varchar(8000),@StrSeprate varchar(10)
)
RETURNS int
AS
begin
declare @i int,@ii int=0

if(@SourceSql is not null)
	set	@ii+=1

set @SourceSql=rtrim(ltrim(@SourceSql))
set @i=charindex(@StrSeprate,@SourceSql)

while @i>=1
begin
	set @SourceSql=substring(@SourceSql,@i+1,len(@SourceSql)-@i)
	set @i=charindex(@StrSeprate,@SourceSql)
	set	@ii+=1	
end
	return	@ii--case when @ii>0 then @ii+1 else @ii end
end

GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[ISNullEmpty]') AND xtype IN ( N'FN', N'IF', N'TF' ) ) 
   BEGIN
       DROP FUNCTION [dbo].[ISNullEmpty]
   END
GO
/*
扩展isnull函数	by dengll
*/
CREATE FUNCTION [dbo].[ISNullEmpty]
(
	@param1 varchar(max),
	@param2 varchar(max)
)
RETURNS varchar(1000)
AS
BEGIN
	return	case when len(isnull(@param1,''))=0 then @param2	else @param1	end;
END

GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[JoinString]') AND xtype IN ( N'FN', N'IF', N'TF' ) ) 
   BEGIN
       DROP FUNCTION [dbo].[JoinString]
   END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu  Baden
  Project   : EAS -拆分字符串并返回一表table
  Created   : 2010/08/28 by len
  Updated   : -
  Version   : 1.0.0
********************************************************************************/ 
CREATE FUNCTION dbo.JoinString(@split varchar(2),@code varchar(200),@code1 varchar(200))
	returns	 varchar(100)
as 
begin
	declare	@txt varchar(1000)
	set @txt=case when @code is not null then @code else space(0) end;

	if( len(@txt)>0)
		set @txt=case when @code1 is not null then 	@txt+@split+@code1  else @txt end
	else	set	@txt=@code1

	return @txt;
end
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[SubSplitLink]') AND xtype IN ( N'FN', N'IF', N'TF' ) ) 
   BEGIN
       DROP FUNCTION [dbo].[SubSplitLink]
   END
GO
/********************************************************************************
  Database  : EAS
  Copyright : 2008 Huapu (Beijing)
  Customer  : Huapu  Baden
  Project   : EAS -根据符号前匹配
  Created   : 2010/08/28 by len
  Updated   : -
  Version   : 1.0.0
********************************************************************************/ 
CREATE FUNCTION dbo.SubSplitLink(@split varchar(2),@code varchar(200),@likeCode	varchar(200))
	returns	 varchar(100)
as 
begin
	declare	@txt varchar(1000)

	declare @tmp	table(typecode VARCHAR(100),	code	varchar(100))
	insert	@tmp
	select  b.code,a.code 
	from	dbo.fn_SplitTSQL(@likeCode,@split)	b
		join	dbo.fn_SplitTSQL(@code,@split)	a
	on	left(replace(a.code,' ',''),len(replace(b.code,' ','')))=replace(b.code,' ','')

	SELECT @txt=stuff ((SELECT ';'+Code
			FROM @tmp
				FOR xml path ('')), 1, 1,'')
	from	@tmp
	return  @txt;
end

GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[TJCHAR]') AND xtype IN ( N'FN', N'IF', N'TF' ) ) 
   BEGIN
       DROP FUNCTION [dbo].[TJCHAR]
   END
GO

CREATE FUNCTION TJCHAR
(
	@DMS	varchar(max),
	@xNCHAR CHAR(1)='.'
)
RETURNS INT
AS
BEGIN
	DECLARE	@I INT,@NCHAR CHAR(1)=@xNCHAR
	DECLARE @DM	VARCHAR(255)=@DMS;
	DECLARE @IX INT=0;
	
	WHILE CHARINDEX(@NCHAR,@DM)>0 BEGIN
		SET @IX=@IX+1
		SET @I=CHARINDEX(@NCHAR,@DM)
		DECLARE @A INT=LEN(@DM)-@I-1;
		IF(@A<0)
			BREAK;
		SET @DM=RIGHT(@DM,@A)
	END
	RETURN @IX;
END

GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[ViewDetailAccount]') AND xtype IN ( N'FN', N'IF', N'TF' ) ) 
   BEGIN
       DROP FUNCTION [dbo].[ViewDetailAccount]
   END
GO

create FUNCTION [dbo].[ViewDetailAccount](@projectID varchar(100),@name varchar(100))
RETURNS TABLE
AS 
RETURN
(
select distinct 
   t1.fscode + t1.AccountCode+t1.AuxiliaryCode as id,
   t1.projectid,
   t1.fscode,
   t.fsname  as fsname,
   t1.AccountCode,
   t1.AccAuxName as AccountName,
   t1.AuxiliaryCode,
   '' as AuxiliaryName,
   isaux,
   t1.checked,
   t1.qcye
from
   VIEW_TBDetail t1 with(nolock)
join fscodeconfig t with(nolock) 
on t .projectid = t1.projectid 
and t .fscode = t1.fscode 
where
   t1.projectID  = @projectID 
   AND t1.ismx = 1
   AND t1.IsAux = 0
   AND t1.datatype <> 3
   AND  t.fsname like @name
   AND t1.fscode <> ''
union
select distinct 
   t1.fscode + t1.AccountCode+t1.AuxiliaryCode as id,
   t1.projectid,
   t1.fscode,
   t.fsname  as fsname,
   t1.AccountCode,
   t1.AccAuxName as AccountName,
   t1.AuxiliaryCode,
   '' as AuxiliaryName,
   isaux,
   t1.checked,
   t1.qcye
from
   VIEW_TBDetail t1 with(nolock)
join fscodeconfig t with(nolock) 
on t .projectid = t1.projectid 
and t .fscode = t1.fscode 
where
   t1.projectID  = @projectID 
   AND t1.ismx = 1
   AND t1.IsAux = 0
   AND t1.datatype <> 3
   AND t1.AccAuxName like @name
   AND t1.fscode <> ''
UNION
select distinct 
   t1.fscode + t1.AccountCode+t1.AuxiliaryCode as id,
   t1.ProjectID,
   t1.FSCode,
   t.fsname as fsname,
   t1.AccountCode,
   d.AccAuxName as AccountName,
   t1.AuxiliaryCode,
   d.AccAuxName+'\'+t1.AccAuxName as AuxiliaryName,
   t1.IsAux,
   t1.checked,
   t1.qcye
from
   VIEW_TBDetail t1 with(nolock)
join fscodeconfig t with(nolock)
on  t .projectid = t1.projectid AND t .fscode = t1.fscode
join TBDetail d  with(nolock)
on d.ProjectID=t1.projectid and d.AccountCode=t1.tbgrouping and d.IsAux=0
where
   t1.projectID  = @projectID 
   AND t1.ismx = 1
   AND t1.IsAux = 1
   AND t1.datatype <> 3
   AND  t.fsname  like @name 
   AND t1.fscode <> ''
UNION
select distinct 
   t1.fscode + t1.AccountCode+t1.AuxiliaryCode as id,
   t1.ProjectID,
   t1.FSCode,
   t.fsname as fsname,
   t1.AccountCode,
   d.AccAuxName as AccountName,
   t1.AuxiliaryCode,
   d.AccAuxName+'\'+t1.AccAuxName as AuxiliaryName,
   t1.IsAux,
   t1.checked,
   t1.qcye
from
   VIEW_TBDetail t1 with(nolock)
join fscodeconfig t with(nolock)
on  t .projectid = t1.projectid AND t .fscode = t1.fscode
join TBDetail d  with(nolock)
on d.ProjectID=t1.projectid and d.AccountCode=t1.tbgrouping and d.IsAux=0
where
   t1.projectID  = @projectID 
   AND t1.ismx = 1
   AND t1.IsAux = 1
   AND t1.datatype <> 3
   AND  t1.AccAuxName  like @name  
   AND t1.fscode <> ''
   UNION
select distinct 
   t1.fscode + t1.AccountCode+t1.AuxiliaryCode as id,
   t1.ProjectID,
   t1.FSCode,
   t.fsname as fsname,
   t1.AccountCode,
   d.AccAuxName as AccountName,
   t1.AuxiliaryCode,
   d.AccAuxName+'\'+t1.AccAuxName as AuxiliaryName,
   t1.IsAux,
   t1.checked,
   t1.qcye
from
   VIEW_TBDetail t1 with(nolock)
join fscodeconfig t with(nolock)
on  t .projectid = t1.projectid AND t .fscode = t1.fscode
join TBDetail d  with(nolock)
on d.ProjectID=t1.projectid and d.AccountCode=t1.tbgrouping and d.IsAux=0
where
   t1.projectID  = @projectID 
   AND t1.ismx = 1
   AND t1.IsAux = 1
   AND t1.datatype <> 3
   AND   t1.AccAuxName  like @name 
   AND t1.fscode <> ''
)
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'TR' AND name = 'TR_Insert_NoteAndTB') 
   BEGIN
       DROP TRIGGER [dbo].[TR_Insert_NoteAndTB]
   END
GO

CREATE TRIGGER TR_Insert_NoteAndTB
ON NoteAndTB
FOR INSERT
AS
 
	DECLARE @T_NoteAndTB TABLE(ID int identity, 
		[GUID]               VARCHAR(50)          collate Chinese_PRC_CS_AS_KS_WS not null,
		ProjectID            varchar(50)          collate Chinese_PRC_CS_AS_KS_WS not null,
		NoteCode             varchar(100)         collate Chinese_PRC_CS_AS_KS_WS not null,
		FormCode             varchar(50)          collate Chinese_PRC_CS_AS_KS_WS not null,
		FSCode               varchar(100)         collate Chinese_PRC_CS_AS_KS_WS not null,
		AccountCode          varchar(100)         collate Chinese_PRC_CS_AS_KS_WS not null)

	INSERT @T_NoteAndTB ([GUID],ProjectID,NoteCode,FormCode,FSCode,AccountCode) 
		SELECT [GUID],ProjectID,NoteCode,FormCode,FSCode,AccountCode FROM inserted 
			WHERE AuxiliaryCode IS NULL OR AuxiliaryCode=''

	DECLARE @GUID				  varchar(50),
			@ProjectID            varchar(50),
			@NoteCode             varchar(100),
			@FormCode             varchar(50),
			@FSCode               varchar(100),
			@AccountCode          varchar(100)

	DECLARE @INDEX INT,@ROW_COUNT INT,@ISMX INT
	SET @INDEX=1
	SELECT @ROW_COUNT=COUNT(1) FROM @T_NoteAndTB

	WHILE(@INDEX<=@ROW_COUNT) BEGIN
		SELECT TOP 1 @GUID=[GUID],@ProjectID=ProjectID,@NoteCode=NoteCode,@FormCode=FormCode,@FSCode=FSCode,@AccountCode=AccountCode
			FROM @T_NoteAndTB WHERE ID=@INDEX
		SELECT @ISMX=ISMX FROM DBO.TBDetail WHERE ProjectID=@ProjectID AND FSCode=@FSCode AND AccountCode=@AccountCode

		--如何不是明细行需要找到所有子行，以TBTYPE=1的插入noteandtb表
		IF @ISMX=0 BEGIN;	

			with temp as(
				SELECT newid() as [guid],projectid,@NoteCode as notecode,@FormCode as formcode,FSCODE,ACCOUNTCODE,'' as AuxiliaryCode,1 as tbtype,@GUID as IDGrouping
					FROM DBO.TBDetail WHERE PROJECTID=@ProjectID and fscode = @FSCode AND TBGROUPING=@AccountCode and IsAux=0
				union all 
				select newid() as [guid],b.projectid,@NoteCode as notecode,@FormCode as formcode,b.FSCODE,b.ACCOUNTCODE,'' as AuxiliaryCode,1 as tbtype,@GUID as IDGrouping
					from temp a ,dbo.TBDetail b
					where  a.accountcode=b.tbgrouping and b.ProjectID =@ProjectID and b.fscode = @FSCode and b.IsAux=0)
			INSERT INTO  DBO.NOTEANDTB SELECT * FROM temp

			INSERT INTO  DBO.NOTEANDTB  SELECT newid() as guid,projectid,@NoteCode as notecode,@FormCode as formcode,fscode,accountcode,auxiliarycode,1 as tbtype,@GUID as IDGrouping
				FROM dbo.TBDetail where projectid=@ProjectID and fscode=@FSCode and IsAux=1
				and accountcode in (select accountcode from dbo.noteandtb 
					where projectid=@ProjectID and notecode=@NoteCode AND formcode=@FormCode and isnull(AuxiliaryCode,'')='' AND ([GUID]=@GUID OR IDGrouping=@GUID))
	
		END

		SET @INDEX=@INDEX+1
	END
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'TR' AND name = 'TR_Delete_TBDetail') 
   BEGIN
       DROP TRIGGER [dbo].[TR_Delete_TBDetail]
   END
GO

CREATE TRIGGER TR_Delete_TBDetail
ON TBDetail
FOR Delete
AS
	DELETE e FROM DBO.TBDetailExtra e INNER JOIN deleted d ON e.ID=d.ID AND e.ProjectID=d.ProjectID
	DELETE WLZL FROM DBO.Tbwlzl WLZL INNER JOIN deleted DEL ON WLZL.ProjectID=DEL.ProjectID AND WLZL.ID=DEL.ID


GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'TR' AND name = 'TR_INSERT_TBDETAIL') 
   BEGIN
       DROP TRIGGER [dbo].[TR_INSERT_TBDETAIL]
   END
GO

CREATE TRIGGER TR_INSERT_TBDETAIL
ON TBDetail
FOR INSERT
AS

	INSERT INTO DBO.TBDetailExtra SELECT ID,ProjectID,'',2 ,1 ,1 ,2 ,1 ,1 ,2 ,1 ,1 ,0 ,0 ,0 ,0 ,'',N'',0 ,0 ,0 ,'','',NULL
		FROM inserted

	INSERT INTO DBO.Tbwlzl SELECT ID,ProjectID,fsCode,AccountCode,AuxiliaryCode,0,0,0,0,0,0,0,0,0,0,0,1,0,0,N'',0,0,0,0,0,0,0,0,0,0
		FROM inserted  t1 WHERE t1.ISMX=1 AND (t1.kmsx='53' or t1.kmsx='63') AND not exists(select 1 from dbo.Tbwlzl t3 where t3.ProjectID=t1.ProjectID and t3.ID=t1.ID)
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE type = 'TR' AND name = 'TR_Update_TBDetail') 
   BEGIN
       DROP TRIGGER [dbo].[TR_Update_TBDetail]
   END
GO

CREATE TRIGGER TR_Update_TBDetail
ON TBDetail
FOR UPDATE
AS
	UPDATE z set z.fscode=i.fscode, z.AccountCode=i.AccountCode,z.AuxiliaryCode=i.AuxiliaryCode FROM DBO.Tbwlzl z inner join inserted i on z.ID=i.ID AND z.ProjectID=i.ProjectID

	INSERT INTO DBO.Tbwlzl SELECT i.ID,i.ProjectID,i.FScode,i.AccountCode,i.AuxiliaryCode,0,0,0,0,0,0,0,0,0,0,0,1,0,0,N'',0,0,0,0,0,0,0,0,0,0
		FROM inserted i WHERE i.IsMx=1 and (i.kmsx='53' or i.kmsx='63')	AND not exists(select 1 from dbo.Tbwlzl t3 where t3.ProjectID=i.ProjectID and t3.ID=i.ID)

	DELETE z FROM DBO.Tbwlzl z INNER JOIN inserted i ON z.ProjectID=i.ProjectID AND z.ID=i.ID AND i.IsMx=0
GO

